Webpack Bundle Analyzer is started at http://127.0.0.1:8888
Use Ctrl+C to close it
{
  "errors": [],
  "warnings": [],
  "version": "4.46.0",
  "hash": "d482e68d2b7e6132938d",
  "time": 1295,
  "builtAt": 1627493189011,
  "publicPath": "",
  "outputPath": "/home/wes/localhost/dolce/pinata-web-sdk/lib",
  "assetsByChunkName": {
    "main": "pinata-sdk.js"
  },
  "assets": [
    {
      "name": "pinata-sdk.js",
      "size": 749419,
      "chunks": [
        "main"
      ],
      "chunkNames": [
        "main"
      ],
      "info": {},
      "emitted": true
    }
  ],
  "filteredAssets": 0,
  "entrypoints": {
    "main": {
      "chunks": [
        "main"
      ],
      "assets": [
        "pinata-sdk.js"
      ],
      "children": {},
      "childAssets": {}
    }
  },
  "namedChunkGroups": {
    "main": {
      "chunks": [
        "main"
      ],
      "assets": [
        "pinata-sdk.js"
      ],
      "children": {},
      "childAssets": {}
    }
  },
  "chunks": [
    {
      "id": "main",
      "rendered": true,
      "initial": true,
      "entry": true,
      "size": 273148,
      "names": [
        "main"
      ],
      "files": [
        "pinata-sdk.js"
      ],
      "hash": "7590287030a159481b36",
      "siblings": [],
      "parents": [],
      "children": [],
      "childrenByOrder": {},
      "modules": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js",
          "index": 0,
          "index2": 57,
          "size": 28,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": null,
          "issuerId": null,
          "issuerName": null,
          "issuerPath": null,
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": null,
              "moduleIdentifier": null,
              "module": null,
              "moduleName": null,
              "type": "multi entry"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 0
        },
        {
          "id": "./node_modules/base-x/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/base-x/src/index.js",
          "name": "./node_modules/base-x/src/index.js",
          "index": 12,
          "index2": 8,
          "size": 4204,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/bs58/index.js",
          "issuerId": "./node_modules/bs58/index.js",
          "issuerName": "./node_modules/bs58/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/bs58/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/bs58/index.js",
              "name": "./node_modules/bs58/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/bs58/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/bs58/index.js",
              "module": "./node_modules/bs58/index.js",
              "moduleName": "./node_modules/bs58/index.js",
              "type": "cjs require",
              "userRequest": "base-x",
              "loc": "1:12-29"
            },
            {
              "moduleId": "./node_modules/multibase/src/constants.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
              "module": "./node_modules/multibase/src/constants.js",
              "moduleName": "./node_modules/multibase/src/constants.js",
              "type": "cjs require",
              "userRequest": "base-x",
              "loc": "4:14-31"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 5,
          "source": "'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n"
        },
        {
          "id": "./node_modules/base64-js/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/base64-js/index.js",
          "name": "./node_modules/base64-js/index.js",
          "index": 8,
          "index2": 3,
          "size": 3932,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
          "issuerId": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "issuerName": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
              "name": "./node_modules/node-libs-browser/node_modules/buffer/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
              "module": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
              "moduleName": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
              "type": "cjs require",
              "userRequest": "base64-js",
              "loc": "11:13-33"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 5,
          "source": "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n"
        },
        {
          "id": "./node_modules/bs58/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/bs58/index.js",
          "name": "./node_modules/bs58/index.js",
          "index": 11,
          "index2": 9,
          "size": 140,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "issuerId": "./node_modules/is-ipfs/src/index.js",
          "issuerName": "./node_modules/is-ipfs/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/is-ipfs/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "module": "./node_modules/is-ipfs/src/index.js",
              "moduleName": "./node_modules/is-ipfs/src/index.js",
              "type": "cjs require",
              "userRequest": "bs58",
              "loc": "3:15-30"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 4,
          "source": "var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n"
        },
        {
          "id": "./node_modules/cids/src/cid-util.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/cid-util.js",
          "name": "./node_modules/cids/src/cid-util.js",
          "index": 41,
          "index2": 33,
          "size": 1295,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "issuerId": "./node_modules/cids/src/index.js",
          "issuerName": "./node_modules/cids/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/cids/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
              "name": "./node_modules/cids/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/cids/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
              "module": "./node_modules/cids/src/index.js",
              "moduleName": "./node_modules/cids/src/index.js",
              "type": "cjs require",
              "userRequest": "./cid-util",
              "loc": "8:16-37"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 5,
          "source": "'use strict'\n\nconst mh = require('multihashes')\nconst { Buffer } = require('buffer')\nvar CIDUtil = {\n  /**\n   * Test if the given input is a valid CID object.\n   * Returns an error message if it is not.\n   * Returns undefined if it is a valid CID.\n   *\n   * @param {any} other\n   * @returns {string}\n   */\n  checkCIDComponents: function (other) {\n    if (other == null) {\n      return 'null values are not valid CIDs'\n    }\n\n    if (!(other.version === 0 || other.version === 1)) {\n      return 'Invalid version, must be a number equal to 1 or 0'\n    }\n\n    if (typeof other.codec !== 'string') {\n      return 'codec must be string'\n    }\n\n    if (other.version === 0) {\n      if (other.codec !== 'dag-pb') {\n        return \"codec must be 'dag-pb' for CIDv0\"\n      }\n      if (other.multibaseName !== 'base58btc') {\n        return \"multibaseName must be 'base58btc' for CIDv0\"\n      }\n    }\n\n    if (!Buffer.isBuffer(other.multihash)) {\n      return 'multihash must be a Buffer'\n    }\n\n    try {\n      mh.validate(other.multihash)\n    } catch (err) {\n      let errorMsg = err.message\n      if (!errorMsg) { // Just in case mh.validate() throws an error with empty error message\n        errorMsg = 'Multihash validation failed'\n      }\n      return errorMsg\n    }\n  }\n}\n\nmodule.exports = CIDUtil\n"
        },
        {
          "id": "./node_modules/cids/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "name": "./node_modules/cids/src/index.js",
          "index": 33,
          "index2": 35,
          "size": 7427,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "issuerId": "./node_modules/is-ipfs/src/index.js",
          "issuerName": "./node_modules/is-ipfs/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/is-ipfs/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "module": "./node_modules/is-ipfs/src/index.js",
              "moduleName": "./node_modules/is-ipfs/src/index.js",
              "type": "cjs require",
              "userRequest": "cids",
              "loc": "8:12-27"
            },
            {
              "moduleId": "./node_modules/multiaddr/src/convert.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
              "module": "./node_modules/multiaddr/src/convert.js",
              "moduleName": "./node_modules/multiaddr/src/convert.js",
              "type": "cjs require",
              "userRequest": "cids",
              "loc": "6:12-27"
            },
            {
              "moduleId": "./node_modules/multiaddr/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
              "module": "./node_modules/multiaddr/src/index.js",
              "moduleName": "./node_modules/multiaddr/src/index.js",
              "type": "cjs require",
              "userRequest": "cids",
              "loc": "8:12-27"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 4,
          "source": "'use strict'\n\nconst { Buffer } = require('buffer')\nconst mh = require('multihashes')\nconst multibase = require('multibase')\nconst multicodec = require('multicodec')\nconst codecs = require('multicodec/src/base-table.json')\nconst CIDUtil = require('./cid-util')\nconst withIs = require('class-is')\n\n/**\n * @typedef {Object} SerializedCID\n * @param {string} codec\n * @param {number} version\n * @param {Buffer} multihash\n */\n\n/**\n * Test if the given input is a CID.\n * @function isCID\n * @memberof CID\n * @static\n * @param {any} other\n * @returns {bool}\n */\n\n/**\n * Class representing a CID `<mbase><version><mcodec><mhash>`\n * , as defined in [ipld/cid](https://github.com/multiformats/cid).\n * @class CID\n */\nclass CID {\n  /**\n   * Create a new CID.\n   *\n   * The algorithm for argument input is roughly:\n   * ```\n   * if (cid)\n   *   -> create a copy\n   * else if (str)\n   *   if (1st char is on multibase table) -> CID String\n   *   else -> bs58 encoded multihash\n   * else if (Buffer)\n   *   if (1st byte is 0 or 1) -> CID\n   *   else -> multihash\n   * else if (Number)\n   *   -> construct CID by parts\n   * ```\n   *\n   * @param {string|Buffer|CID} version\n   * @param {string} [codec]\n   * @param {Buffer} [multihash]\n   * @param {string} [multibaseName]\n   *\n   * @example\n   * new CID(<version>, <codec>, <multihash>, <multibaseName>)\n   * new CID(<cidStr>)\n   * new CID(<cid.buffer>)\n   * new CID(<multihash>)\n   * new CID(<bs58 encoded multihash>)\n   * new CID(<cid>)\n   */\n  constructor (version, codec, multihash, multibaseName) {\n    if (_CID.isCID(version)) {\n      // version is an exising CID instance\n      const cid = version\n      this.version = cid.version\n      this.codec = cid.codec\n      this.multihash = Buffer.from(cid.multihash)\n      // Default guard for when a CID < 0.7 is passed with no multibaseName\n      this.multibaseName = cid.multibaseName || (cid.version === 0 ? 'base58btc' : 'base32')\n      return\n    }\n\n    if (typeof version === 'string') {\n      // e.g. 'base32' or false\n      const baseName = multibase.isEncoded(version)\n      if (baseName) {\n        // version is a CID String encoded with multibase, so v1\n        const cid = multibase.decode(version)\n        this.version = parseInt(cid.slice(0, 1).toString('hex'), 16)\n        this.codec = multicodec.getCodec(cid.slice(1))\n        this.multihash = multicodec.rmPrefix(cid.slice(1))\n        this.multibaseName = baseName\n      } else {\n        // version is a base58btc string multihash, so v0\n        this.version = 0\n        this.codec = 'dag-pb'\n        this.multihash = mh.fromB58String(version)\n        this.multibaseName = 'base58btc'\n      }\n      CID.validateCID(this)\n      Object.defineProperty(this, 'string', { value: version })\n      return\n    }\n\n    if (Buffer.isBuffer(version)) {\n      const firstByte = version.slice(0, 1)\n      const v = parseInt(firstByte.toString('hex'), 16)\n      if (v === 1) {\n        // version is a CID buffer\n        const cid = version\n        this.version = v\n        this.codec = multicodec.getCodec(cid.slice(1))\n        this.multihash = multicodec.rmPrefix(cid.slice(1))\n        this.multibaseName = 'base32'\n      } else {\n        // version is a raw multihash buffer, so v0\n        this.version = 0\n        this.codec = 'dag-pb'\n        this.multihash = version\n        this.multibaseName = 'base58btc'\n      }\n      CID.validateCID(this)\n      return\n    }\n\n    // otherwise, assemble the CID from the parameters\n\n    /**\n     * @type {number}\n     */\n    this.version = version\n\n    /**\n     * @type {string}\n     */\n    this.codec = codec\n\n    /**\n     * @type {Buffer}\n     */\n    this.multihash = multihash\n\n    /**\n     * @type {string}\n     */\n    this.multibaseName = multibaseName || (version === 0 ? 'base58btc' : 'base32')\n\n    CID.validateCID(this)\n  }\n\n  /**\n   * The CID as a `Buffer`\n   *\n   * @return {Buffer}\n   * @readonly\n   *\n   * @memberOf CID\n   */\n  get buffer () {\n    let buffer = this._buffer\n\n    if (!buffer) {\n      if (this.version === 0) {\n        buffer = this.multihash\n      } else if (this.version === 1) {\n        buffer = Buffer.concat([\n          Buffer.from('01', 'hex'),\n          multicodec.getCodeVarint(this.codec),\n          this.multihash\n        ])\n      } else {\n        throw new Error('unsupported version')\n      }\n\n      // Cache this buffer so it doesn't have to be recreated\n      Object.defineProperty(this, '_buffer', { value: buffer })\n    }\n\n    return buffer\n  }\n\n  /**\n   * Get the prefix of the CID.\n   *\n   * @returns {Buffer}\n   * @readonly\n   */\n  get prefix () {\n    return Buffer.concat([\n      Buffer.from(`0${this.version}`, 'hex'),\n      multicodec.getCodeVarint(this.codec),\n      mh.prefix(this.multihash)\n    ])\n  }\n\n  /**\n   * Convert to a CID of version `0`.\n   *\n   * @returns {CID}\n   */\n  toV0 () {\n    if (this.codec !== 'dag-pb') {\n      throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n    }\n\n    const { name, length } = mh.decode(this.multihash)\n\n    if (name !== 'sha2-256') {\n      throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n    }\n\n    if (length !== 32) {\n      throw new Error('Cannot convert non 32 byte multihash CID to CIDv0')\n    }\n\n    return new _CID(0, this.codec, this.multihash)\n  }\n\n  /**\n   * Convert to a CID of version `1`.\n   *\n   * @returns {CID}\n   */\n  toV1 () {\n    return new _CID(1, this.codec, this.multihash)\n  }\n\n  /**\n   * Encode the CID into a string.\n   *\n   * @param {string} [base=this.multibaseName] - Base encoding to use.\n   * @returns {string}\n   */\n  toBaseEncodedString (base = this.multibaseName) {\n    if (this.string && base === this.multibaseName) {\n      return this.string\n    }\n    let str = null\n    if (this.version === 0) {\n      if (base !== 'base58btc') {\n        throw new Error('not supported with CIDv0, to support different bases, please migrate the instance do CIDv1, you can do that through cid.toV1()')\n      }\n      str = mh.toB58String(this.multihash)\n    } else if (this.version === 1) {\n      str = multibase.encode(base, this.buffer).toString()\n    } else {\n      throw new Error('unsupported version')\n    }\n    if (base === this.multibaseName) {\n      // cache the string value\n      Object.defineProperty(this, 'string', { value: str })\n    }\n    return str\n  }\n\n  /**\n   * CID(QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n)\n   *\n   * @returns {String}\n   */\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return 'CID(' + this.toString() + ')'\n  }\n\n  toString (base) {\n    return this.toBaseEncodedString(base)\n  }\n\n  /**\n   * Serialize to a plain object.\n   *\n   * @returns {SerializedCID}\n   */\n  toJSON () {\n    return {\n      codec: this.codec,\n      version: this.version,\n      hash: this.multihash\n    }\n  }\n\n  /**\n   * Compare equality with another CID.\n   *\n   * @param {CID} other\n   * @returns {bool}\n   */\n  equals (other) {\n    return this.codec === other.codec &&\n      this.version === other.version &&\n      this.multihash.equals(other.multihash)\n  }\n\n  /**\n   * Test if the given input is a valid CID object.\n   * Throws if it is not.\n   *\n   * @param {any} other\n   * @returns {void}\n   */\n  static validateCID (other) {\n    const errorMsg = CIDUtil.checkCIDComponents(other)\n    if (errorMsg) {\n      throw new Error(errorMsg)\n    }\n  }\n}\n\nconst _CID = withIs(CID, {\n  className: 'CID',\n  symbolName: '@ipld/js-cid/CID'\n})\n\n_CID.codecs = codecs\n\nmodule.exports = _CID\n"
        },
        {
          "id": "./node_modules/class-is/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/class-is/index.js",
          "name": "./node_modules/class-is/index.js",
          "index": 42,
          "index2": 34,
          "size": 2027,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "issuerId": "./node_modules/cids/src/index.js",
          "issuerName": "./node_modules/cids/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/cids/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
              "name": "./node_modules/cids/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/cids/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
              "module": "./node_modules/cids/src/index.js",
              "moduleName": "./node_modules/cids/src/index.js",
              "type": "cjs require",
              "userRequest": "class-is",
              "loc": "9:15-34"
            },
            {
              "moduleId": "./node_modules/multiaddr/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
              "module": "./node_modules/multiaddr/src/index.js",
              "moduleName": "./node_modules/multiaddr/src/index.js",
              "type": "cjs require",
              "userRequest": "class-is",
              "loc": "9:15-34"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 5,
          "source": "'use strict';\n\nfunction withIs(Class, { className, symbolName }) {\n    const symbol = Symbol.for(symbolName);\n\n    const ClassIsWrapper = {\n        // The code below assigns the class wrapper to an object to trick\n        // JavaScript engines to show the name of the extended class when\n        // logging an instances.\n        // We are assigning an anonymous class (class wrapper) to the object\n        // with key `className` to keep the correct name.\n        // If this is not supported it falls back to logging `ClassIsWrapper`.\n        [className]: class extends Class {\n            constructor(...args) {\n                super(...args);\n                Object.defineProperty(this, symbol, { value: true });\n            }\n\n            get [Symbol.toStringTag]() {\n                return className;\n            }\n        },\n    }[className];\n\n    ClassIsWrapper[`is${className}`] = (obj) => !!(obj && obj[symbol]);\n\n    return ClassIsWrapper;\n}\n\nfunction withIsProto(Class, { className, symbolName, withoutNew }) {\n    const symbol = Symbol.for(symbolName);\n\n    /* eslint-disable object-shorthand */\n    const ClassIsWrapper = {\n        [className]: function (...args) {\n            if (withoutNew && !(this instanceof ClassIsWrapper)) {\n                return new ClassIsWrapper(...args);\n            }\n\n            const _this = Class.call(this, ...args) || this;\n\n            if (_this && !_this[symbol]) {\n                Object.defineProperty(_this, symbol, { value: true });\n            }\n\n            return _this;\n        },\n    }[className];\n    /* eslint-enable object-shorthand */\n\n    ClassIsWrapper.prototype = Object.create(Class.prototype);\n    ClassIsWrapper.prototype.constructor = ClassIsWrapper;\n\n    Object.defineProperty(ClassIsWrapper.prototype, Symbol.toStringTag, {\n        get() {\n            return className;\n        },\n    });\n\n    ClassIsWrapper[`is${className}`] = (obj) => !!(obj && obj[symbol]);\n\n    return ClassIsWrapper;\n}\n\nmodule.exports = withIs;\nmodule.exports.proto = withIsProto;\n"
        },
        {
          "id": "./node_modules/ieee754/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/ieee754/index.js",
          "name": "./node_modules/ieee754/index.js",
          "index": 9,
          "index2": 4,
          "size": 2154,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
          "issuerId": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "issuerName": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
              "name": "./node_modules/node-libs-browser/node_modules/buffer/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
              "module": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
              "moduleName": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
              "type": "cjs require",
              "userRequest": "ieee754",
              "loc": "12:14-32"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 5,
          "source": "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n"
        },
        {
          "id": "./node_modules/ip-regex/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/ip-regex/index.js",
          "name": "./node_modules/ip-regex/index.js",
          "index": 31,
          "index2": 22,
          "size": 2168,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ip/index.js",
          "issuerId": "./node_modules/is-ip/index.js",
          "issuerName": "./node_modules/is-ip/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/multiaddr/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
              "name": "./node_modules/multiaddr/src/index.js"
            },
            {
              "id": "./node_modules/multiaddr/src/codec.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
              "name": "./node_modules/multiaddr/src/codec.js"
            },
            {
              "id": "./node_modules/multiaddr/src/convert.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
              "name": "./node_modules/multiaddr/src/convert.js"
            },
            {
              "id": "./node_modules/multiaddr/src/ip.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/ip.js",
              "name": "./node_modules/multiaddr/src/ip.js"
            },
            {
              "id": "./node_modules/is-ip/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ip/index.js",
              "name": "./node_modules/is-ip/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/is-ip/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ip/index.js",
              "module": "./node_modules/is-ip/index.js",
              "moduleName": "./node_modules/is-ip/index.js",
              "type": "cjs require",
              "userRequest": "ip-regex",
              "loc": "2:16-35"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 9,
          "source": "'use strict';\n\nconst word = '[a-fA-F\\\\d:]';\nconst b = options => options && options.includeBoundaries ?\n\t`(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))` :\n\t'';\n\nconst v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\n\nconst v6seg = '[a-fA-F\\\\d]{1,4}';\nconst v6 = `\n(?:\n(?:${v6seg}:){7}(?:${v6seg}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6seg}:){5}(?::${v4}|(?::${v6seg}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6seg}:){4}(?:(?::${v6seg}){0,1}:${v4}|(?::${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6seg}:){3}(?:(?::${v6seg}){0,2}:${v4}|(?::${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6seg}:){2}(?:(?::${v6seg}){0,3}:${v4}|(?::${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6seg}:){1}(?:(?::${v6seg}){0,4}:${v4}|(?::${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim();\n\n// Pre-compile only the exact regexes because adding a global flag make regexes stateful\nconst v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\nconst v4exact = new RegExp(`^${v4}$`);\nconst v6exact = new RegExp(`^${v6}$`);\n\nconst ip = options => options && options.exact ?\n\tv46Exact :\n\tnew RegExp(`(?:${b(options)}${v4}${b(options)})|(?:${b(options)}${v6}${b(options)})`, 'g');\n\nip.v4 = options => options && options.exact ? v4exact : new RegExp(`${b(options)}${v4}${b(options)}`, 'g');\nip.v6 = options => options && options.exact ? v6exact : new RegExp(`${b(options)}${v6}${b(options)}`, 'g');\n\nmodule.exports = ip;\n"
        },
        {
          "id": "./node_modules/is-ip/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ip/index.js",
          "name": "./node_modules/is-ip/index.js",
          "index": 30,
          "index2": 23,
          "size": 335,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/ip.js",
          "issuerId": "./node_modules/multiaddr/src/ip.js",
          "issuerName": "./node_modules/multiaddr/src/ip.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/multiaddr/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
              "name": "./node_modules/multiaddr/src/index.js"
            },
            {
              "id": "./node_modules/multiaddr/src/codec.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
              "name": "./node_modules/multiaddr/src/codec.js"
            },
            {
              "id": "./node_modules/multiaddr/src/convert.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
              "name": "./node_modules/multiaddr/src/convert.js"
            },
            {
              "id": "./node_modules/multiaddr/src/ip.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/ip.js",
              "name": "./node_modules/multiaddr/src/ip.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/multiaddr/src/ip.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/ip.js",
              "module": "./node_modules/multiaddr/src/ip.js",
              "moduleName": "./node_modules/multiaddr/src/ip.js",
              "type": "cjs require",
              "userRequest": "is-ip",
              "loc": "4:13-29"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 8,
          "source": "'use strict';\nconst ipRegex = require('ip-regex');\n\nconst isIp = string => ipRegex({exact: true}).test(string);\nisIp.v4 = string => ipRegex.v4({exact: true}).test(string);\nisIp.v6 = string => ipRegex.v6({exact: true}).test(string);\nisIp.version = string => isIp(string) ? (isIp.v4(string) ? 4 : 6) : undefined;\n\nmodule.exports = isIp;\n"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js",
          "index": 6,
          "index2": 40,
          "size": 3886,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "issuerId": "./src/util/validators.js",
          "issuerName": "./src/util/validators.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./src/commands/pinning/hashMetadata.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/hashMetadata.js",
              "module": "./src/commands/pinning/hashMetadata.js",
              "moduleName": "./src/commands/pinning/hashMetadata.js",
              "type": "harmony side effect evaluation",
              "userRequest": "is-ipfs",
              "loc": "5:0-29"
            },
            {
              "moduleId": "./src/commands/pinning/hashMetadata.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/hashMetadata.js",
              "module": "./src/commands/pinning/hashMetadata.js",
              "moduleName": "./src/commands/pinning/hashMetadata.js",
              "type": "harmony import specifier",
              "userRequest": "is-ipfs",
              "loc": "32:16-22"
            },
            {
              "moduleId": "./src/commands/pinning/hashPinPolicy.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/hashPinPolicy.js",
              "module": "./src/commands/pinning/hashPinPolicy.js",
              "moduleName": "./src/commands/pinning/hashPinPolicy.js",
              "type": "harmony side effect evaluation",
              "userRequest": "is-ipfs",
              "loc": "5:0-29"
            },
            {
              "moduleId": "./src/commands/pinning/hashPinPolicy.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/hashPinPolicy.js",
              "module": "./src/commands/pinning/hashPinPolicy.js",
              "moduleName": "./src/commands/pinning/hashPinPolicy.js",
              "type": "harmony import specifier",
              "userRequest": "is-ipfs",
              "loc": "34:16-22"
            },
            {
              "moduleId": "./src/commands/pinning/pinByHash.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinByHash.js",
              "module": "./src/commands/pinning/pinByHash.js",
              "moduleName": "./src/commands/pinning/pinByHash.js",
              "type": "harmony side effect evaluation",
              "userRequest": "is-ipfs",
              "loc": "5:0-29"
            },
            {
              "moduleId": "./src/commands/pinning/pinByHash.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinByHash.js",
              "module": "./src/commands/pinning/pinByHash.js",
              "moduleName": "./src/commands/pinning/pinByHash.js",
              "type": "harmony import specifier",
              "userRequest": "is-ipfs",
              "loc": "32:16-22"
            },
            {
              "moduleId": "./src/commands/pinning/pinJobs/queryBuilder.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinJobs/queryBuilder.js",
              "module": "./src/commands/pinning/pinJobs/queryBuilder.js",
              "moduleName": "./src/commands/pinning/pinJobs/queryBuilder.js",
              "type": "harmony side effect evaluation",
              "userRequest": "is-ipfs",
              "loc": "1:0-29"
            },
            {
              "moduleId": "./src/commands/pinning/pinJobs/queryBuilder.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinJobs/queryBuilder.js",
              "module": "./src/commands/pinning/pinJobs/queryBuilder.js",
              "moduleName": "./src/commands/pinning/pinJobs/queryBuilder.js",
              "type": "harmony import specifier",
              "userRequest": "is-ipfs",
              "loc": "42:10-16"
            },
            {
              "moduleId": "./src/commands/pinning/unpin.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/unpin.js",
              "module": "./src/commands/pinning/unpin.js",
              "moduleName": "./src/commands/pinning/unpin.js",
              "type": "harmony side effect evaluation",
              "userRequest": "is-ipfs",
              "loc": "5:0-29"
            },
            {
              "moduleId": "./src/commands/pinning/unpin.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/unpin.js",
              "module": "./src/commands/pinning/unpin.js",
              "moduleName": "./src/commands/pinning/unpin.js",
              "type": "harmony import specifier",
              "userRequest": "is-ipfs",
              "loc": "31:16-22"
            },
            {
              "moduleId": "./src/util/validators.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "module": "./src/util/validators.js",
              "moduleName": "./src/util/validators.js",
              "type": "harmony side effect evaluation",
              "userRequest": "is-ipfs",
              "loc": "3:0-29"
            },
            {
              "moduleId": "./src/util/validators.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "module": "./src/util/validators.js",
              "moduleName": "./src/util/validators.js",
              "type": "harmony import specifier",
              "userRequest": "is-ipfs",
              "loc": "20:9-15"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 3,
          "source": "'use strict'\n\nconst base58 = require('bs58')\nconst multihash = require('multihashes')\nconst multibase = require('multibase')\nconst Multiaddr = require('multiaddr')\nconst mafmt = require('mafmt')\nconst CID = require('cids')\n\nconst urlPattern = /^https?:\\/\\/[^/]+\\/(ip(f|n)s)\\/((\\w+).*)/\nconst pathPattern = /^\\/(ip(f|n)s)\\/((\\w+).*)/\nconst defaultProtocolMatch = 1\nconst defaultHashMath = 4\n\nconst fqdnPattern = /^https?:\\/\\/([^/]+)\\.(ip(?:f|n)s)\\.[^/]+/\nconst fqdnHashMatch = 1\nconst fqdnProtocolMatch = 2\n\nfunction isMultihash (hash) {\n  const formatted = convertToString(hash)\n  try {\n    const buffer = Buffer.from(base58.decode(formatted))\n    multihash.decode(buffer)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nfunction isMultibase (hash) {\n  try {\n    return multibase.isEncoded(hash)\n  } catch (e) {\n    return false\n  }\n}\n\nfunction isCID (hash) {\n  try {\n    new CID(hash) // eslint-disable-line no-new\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nfunction isMultiaddr (input) {\n  if (!input) return false\n  if (Multiaddr.isMultiaddr(input)) return true\n  try {\n    new Multiaddr(input) // eslint-disable-line no-new\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nfunction isPeerMultiaddr (input) {\n  return isMultiaddr(input) && mafmt.IPFS.matches(input)\n}\n\nfunction isIpfs (input, pattern, protocolMatch = defaultProtocolMatch, hashMatch = defaultHashMath) {\n  const formatted = convertToString(input)\n  if (!formatted) {\n    return false\n  }\n\n  const match = formatted.match(pattern)\n  if (!match) {\n    return false\n  }\n\n  if (match[protocolMatch] !== 'ipfs') {\n    return false\n  }\n\n  let hash = match[hashMatch]\n\n  if (hash && pattern === fqdnPattern) {\n    // when doing checks for subdomain context\n    // ensure hash is case-insensitive\n    // (browsers force-lowercase authority compotent anyway)\n    hash = hash.toLowerCase()\n  }\n\n  return isCID(hash)\n}\n\nfunction isIpns (input, pattern, protocolMatch = defaultProtocolMatch, hashMatch) {\n  const formatted = convertToString(input)\n  if (!formatted) {\n    return false\n  }\n  const match = formatted.match(pattern)\n  if (!match) {\n    return false\n  }\n\n  if (match[protocolMatch] !== 'ipns') {\n    return false\n  }\n\n  if (hashMatch && pattern === fqdnPattern) {\n    let hash = match[hashMatch]\n    // when doing checks for subdomain context\n    // ensure hash is case-insensitive\n    // (browsers force-lowercase authority compotent anyway)\n    hash = hash.toLowerCase()\n    return isCID(hash)\n  }\n\n  return true\n}\n\nfunction isString (input) {\n  return typeof input === 'string'\n}\n\nfunction convertToString (input) {\n  if (Buffer.isBuffer(input)) {\n    return base58.encode(input)\n  }\n\n  if (isString(input)) {\n    return input\n  }\n\n  return false\n}\n\nconst ipfsSubdomain = (url) => isIpfs(url, fqdnPattern, fqdnProtocolMatch, fqdnHashMatch)\nconst ipnsSubdomain = (url) => isIpns(url, fqdnPattern, fqdnProtocolMatch, fqdnHashMatch)\n\nmodule.exports = {\n  multihash: isMultihash,\n  multiaddr: isMultiaddr,\n  peerMultiaddr: isPeerMultiaddr,\n  cid: isCID,\n  base32cid: (cid) => (isMultibase(cid) === 'base32' && isCID(cid)),\n  ipfsSubdomain: ipfsSubdomain,\n  ipnsSubdomain: ipnsSubdomain,\n  subdomain: (url) => (ipfsSubdomain(url) || ipnsSubdomain(url)),\n  subdomainPattern: fqdnPattern,\n  ipfsUrl: (url) => isIpfs(url, urlPattern),\n  ipnsUrl: (url) => isIpns(url, urlPattern),\n  url: (url) => (isIpfs(url, urlPattern) || isIpns(url, urlPattern)),\n  urlPattern: urlPattern,\n  ipfsPath: (path) => isIpfs(path, pathPattern),\n  ipnsPath: (path) => isIpns(path, pathPattern),\n  path: (path) => (isIpfs(path, pathPattern) || isIpns(path, pathPattern)),\n  pathPattern: pathPattern,\n  urlOrPath: (x) => (isIpfs(x, urlPattern) || isIpns(x, urlPattern) || isIpfs(x, pathPattern) || isIpns(x, pathPattern)),\n  cidPath: path => isString(path) && !isCID(path) && isIpfs(`/ipfs/${path}`, pathPattern)\n}\n"
        },
        {
          "id": "./node_modules/isarray/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/isarray/index.js",
          "name": "./node_modules/isarray/index.js",
          "index": 10,
          "index2": 5,
          "size": 132,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
          "issuerId": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "issuerName": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
              "name": "./node_modules/node-libs-browser/node_modules/buffer/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
              "module": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
              "moduleName": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
              "type": "cjs require",
              "userRequest": "isarray",
              "loc": "13:14-32"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 5,
          "source": "var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n"
        },
        {
          "id": "./node_modules/lodash.merge/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/lodash.merge/index.js",
          "name": "./node_modules/lodash.merge/index.js",
          "index": 2,
          "index2": 2,
          "size": 51155,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "issuerId": "./src/index.js",
          "issuerName": "./src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "lodash.merge",
              "loc": "11:0-33"
            },
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony import specifier",
              "userRequest": "lodash.merge",
              "loc": "75:20-25"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 2,
          "source": "/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeMax = Math.max,\n    nativeNow = Date.now;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = merge;\n"
        },
        {
          "id": "./node_modules/mafmt/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/mafmt/src/index.js",
          "name": "./node_modules/mafmt/src/index.js",
          "index": 43,
          "index2": 39,
          "size": 4966,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "issuerId": "./node_modules/is-ipfs/src/index.js",
          "issuerName": "./node_modules/is-ipfs/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/is-ipfs/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "module": "./node_modules/is-ipfs/src/index.js",
              "moduleName": "./node_modules/is-ipfs/src/index.js",
              "type": "cjs require",
              "userRequest": "mafmt",
              "loc": "7:14-30"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 4,
          "source": "'use strict'\n\nconst multiaddr = require('multiaddr')\n\n/*\n * Valid combinations\n */\nconst DNS4 = base('dns4')\nconst DNS6 = base('dns6')\nconst DNS = or(\n  base('dns'),\n  base('dnsaddr'),\n  DNS4,\n  DNS6\n)\n\nconst IP = or(base('ip4'), base('ip6'))\nconst TCP = or(\n  and(IP, base('tcp')),\n  and(DNS, base('tcp'))\n)\nconst UDP = and(IP, base('udp'))\nconst UTP = and(UDP, base('utp'))\n\nconst WebSockets = or(\n  and(TCP, base('ws')),\n  and(DNS, base('ws'))\n)\n\nconst WebSocketsSecure = or(\n  and(TCP, base('wss')),\n  and(DNS, base('wss'))\n)\n\nconst HTTP = or(\n  and(TCP, base('http')),\n  and(IP, base('http')),\n  and(DNS, base('http'))\n)\n\nconst HTTPS = or(\n  and(TCP, base('https')),\n  and(IP, base('https')),\n  and(DNS, base('https'))\n)\n\nconst WebRTCStar = or(\n  and(WebSockets, base('p2p-webrtc-star'), base('p2p')),\n  and(WebSocketsSecure, base('p2p-webrtc-star'), base('p2p')),\n  and(WebSockets, base('p2p-webrtc-star')),\n  and(WebSocketsSecure, base('p2p-webrtc-star'))\n)\n\nconst WebSocketStar = or(\n  and(WebSockets, base('p2p-websocket-star'), base('p2p')),\n  and(WebSocketsSecure, base('p2p-websocket-star'), base('p2p')),\n  and(WebSockets, base('p2p-websocket-star')),\n  and(WebSocketsSecure, base('p2p-websocket-star'))\n)\n\nconst WebRTCDirect = or(\n  and(HTTP, base('p2p-webrtc-direct')),\n  and(HTTPS, base('p2p-webrtc-direct'))\n)\n\nconst Reliable = or(\n  WebSockets,\n  WebSocketsSecure,\n  HTTP,\n  HTTPS,\n  WebRTCStar,\n  WebRTCDirect,\n  TCP,\n  UTP\n)\n\n// Unlike ws-star, stardust can run over any transport thus removing the requirement for websockets (but don't even think about running a stardust server over webrtc-star ;) )\nconst Stardust = or(\n  and(Reliable, base('p2p-stardust'), base('p2p')),\n  and(Reliable, base('p2p-stardust'))\n)\n\nconst _P2P = or(\n  and(Reliable, base('p2p')),\n  WebRTCStar,\n  base('p2p')\n)\n\nconst _Circuit = or(\n  and(_P2P, base('p2p-circuit'), _P2P),\n  and(_P2P, base('p2p-circuit')),\n  and(base('p2p-circuit'), _P2P),\n  and(Reliable, base('p2p-circuit')),\n  and(base('p2p-circuit'), Reliable),\n  base('p2p-circuit')\n)\n\nconst CircuitRecursive = () => or(\n  and(_Circuit, CircuitRecursive),\n  _Circuit\n)\n\nconst Circuit = CircuitRecursive()\n\nconst P2P = or(\n  and(Circuit, _P2P, Circuit),\n  and(_P2P, Circuit),\n  and(Circuit, _P2P),\n  Circuit,\n  _P2P\n)\n\nexports.DNS = DNS\nexports.DNS4 = DNS4\nexports.DNS6 = DNS6\nexports.IP = IP\nexports.TCP = TCP\nexports.UDP = UDP\nexports.UTP = UTP\nexports.HTTP = HTTP\nexports.HTTPS = HTTPS\nexports.WebSockets = WebSockets\nexports.WebSocketsSecure = WebSocketsSecure\nexports.WebSocketStar = WebSocketStar\nexports.WebRTCStar = WebRTCStar\nexports.WebRTCDirect = WebRTCDirect\nexports.Reliable = Reliable\nexports.Stardust = Stardust\nexports.Circuit = Circuit\nexports.P2P = P2P\nexports.IPFS = P2P\n\n/*\n * Validation funcs\n */\n\nfunction makeMatchesFunction (partialMatch) {\n  return function matches (a) {\n    if (!multiaddr.isMultiaddr(a)) {\n      try {\n        a = multiaddr(a)\n      } catch (err) { // catch error\n        return false // also if it's invalid it's propably not matching as well so return false\n      }\n    }\n    const out = partialMatch(a.protoNames())\n    if (out === null) {\n      return false\n    }\n    return out.length === 0\n  }\n}\n\nfunction and () {\n  const args = Array.from(arguments)\n  function partialMatch (a) {\n    if (a.length < args.length) {\n      return null\n    }\n    args.some((arg) => {\n      a = typeof arg === 'function'\n        ? arg().partialMatch(a)\n        : arg.partialMatch(a)\n\n      if (a === null) {\n        return true\n      }\n    })\n\n    return a\n  }\n\n  return {\n    toString: function () { return '{ ' + args.join(' ') + ' }' },\n    input: args,\n    matches: makeMatchesFunction(partialMatch),\n    partialMatch: partialMatch\n  }\n}\n\nfunction or () {\n  const args = Array.from(arguments)\n\n  function partialMatch (a) {\n    let out = null\n    args.some((arg) => {\n      const res = typeof arg === 'function'\n        ? arg().partialMatch(a)\n        : arg.partialMatch(a)\n      if (res) {\n        out = res\n        return true\n      }\n    })\n\n    return out\n  }\n\n  const result = {\n    toString: function () { return '{ ' + args.join(' ') + ' }' },\n    input: args,\n    matches: makeMatchesFunction(partialMatch),\n    partialMatch: partialMatch\n  }\n\n  return result\n}\n\nfunction base (n) {\n  const name = n\n\n  function matches (a) {\n    if (typeof a === 'string') {\n      try {\n        a = multiaddr(a)\n      } catch (err) { // catch error\n        return false // also if it's invalid it's propably not matching as well so return false\n      }\n    }\n\n    const pnames = a.protoNames()\n    if (pnames.length === 1 && pnames[0] === name) {\n      return true\n    }\n    return false\n  }\n\n  function partialMatch (protos) {\n    if (protos.length === 0) {\n      return null\n    }\n\n    if (protos[0] === name) {\n      return protos.slice(1)\n    }\n    return null\n  }\n\n  return {\n    toString: function () { return name },\n    matches: matches,\n    partialMatch: partialMatch\n  }\n}\n"
        },
        {
          "id": "./node_modules/multiaddr/src/codec.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
          "name": "./node_modules/multiaddr/src/codec.js",
          "index": 27,
          "index2": 37,
          "size": 4685,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
          "issuerId": "./node_modules/multiaddr/src/index.js",
          "issuerName": "./node_modules/multiaddr/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/multiaddr/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
              "name": "./node_modules/multiaddr/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/multiaddr/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
              "module": "./node_modules/multiaddr/src/index.js",
              "moduleName": "./node_modules/multiaddr/src/index.js",
              "type": "cjs require",
              "userRequest": "./codec",
              "loc": "3:14-32"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 5,
          "source": "'use strict'\n\nconst { Buffer } = require('buffer')\nconst convert = require('./convert')\nconst protocols = require('./protocols-table')\nconst varint = require('varint')\n\n// export codec\nmodule.exports = {\n  stringToStringTuples,\n  stringTuplesToString,\n\n  tuplesToStringTuples,\n  stringTuplesToTuples,\n\n  bufferToTuples,\n  tuplesToBuffer,\n\n  bufferToString,\n  stringToBuffer,\n\n  fromString,\n  fromBuffer,\n  validateBuffer,\n  isValidBuffer,\n  cleanPath,\n\n  ParseError,\n  protoFromTuple,\n\n  sizeForAddr\n}\n\n// string -> [[str name, str addr]... ]\nfunction stringToStringTuples (str) {\n  const tuples = []\n  const parts = str.split('/').slice(1) // skip first empty elem\n  if (parts.length === 1 && parts[0] === '') {\n    return []\n  }\n\n  for (let p = 0; p < parts.length; p++) {\n    const part = parts[p]\n    const proto = protocols(part)\n\n    if (proto.size === 0) {\n      tuples.push([part])\n      continue\n    }\n\n    p++ // advance addr part\n    if (p >= parts.length) {\n      throw ParseError('invalid address: ' + str)\n    }\n\n    // if it's a path proto, take the rest\n    if (proto.path) {\n      tuples.push([\n        part,\n        // TODO: should we need to check each path part to see if it's a proto?\n        // This would allow for other protocols to be added after a unix path,\n        // however it would have issues if the path had a protocol name in the path\n        cleanPath(parts.slice(p).join('/'))\n      ])\n      break\n    }\n\n    tuples.push([part, parts[p]])\n  }\n\n  return tuples\n}\n\n// [[str name, str addr]... ] -> string\nfunction stringTuplesToString (tuples) {\n  const parts = []\n  tuples.map(tup => {\n    const proto = protoFromTuple(tup)\n    parts.push(proto.name)\n    if (tup.length > 1) {\n      parts.push(tup[1])\n    }\n  })\n\n  return cleanPath(parts.join('/'))\n}\n\n// [[str name, str addr]... ] -> [[int code, Buffer]... ]\nfunction stringTuplesToTuples (tuples) {\n  return tuples.map(tup => {\n    if (!Array.isArray(tup)) {\n      tup = [tup]\n    }\n    const proto = protoFromTuple(tup)\n    if (tup.length > 1) {\n      return [proto.code, convert.toBuffer(proto.code, tup[1])]\n    }\n    return [proto.code]\n  })\n}\n\n// [[int code, Buffer]... ] -> [[str name, str addr]... ]\nfunction tuplesToStringTuples (tuples) {\n  return tuples.map(tup => {\n    const proto = protoFromTuple(tup)\n    if (tup.length > 1) {\n      return [proto.code, convert.toString(proto.code, tup[1])]\n    }\n    return [proto.code]\n  })\n}\n\n// [[int code, Buffer ]... ] -> Buffer\nfunction tuplesToBuffer (tuples) {\n  return fromBuffer(Buffer.concat(tuples.map(tup => {\n    const proto = protoFromTuple(tup)\n    let buf = Buffer.from(varint.encode(proto.code))\n\n    if (tup.length > 1) {\n      buf = Buffer.concat([buf, tup[1]]) // add address buffer\n    }\n\n    return buf\n  })))\n}\n\nfunction sizeForAddr (p, addr) {\n  if (p.size > 0) {\n    return p.size / 8\n  } else if (p.size === 0) {\n    return 0\n  } else {\n    const size = varint.decode(addr)\n    return size + varint.decode.bytes\n  }\n}\n\n// Buffer -> [[int code, Buffer ]... ]\nfunction bufferToTuples (buf) {\n  const tuples = []\n  let i = 0\n  while (i < buf.length) {\n    const code = varint.decode(buf, i)\n    const n = varint.decode.bytes\n\n    const p = protocols(code)\n\n    const size = sizeForAddr(p, buf.slice(i + n))\n\n    if (size === 0) {\n      tuples.push([code])\n      i += n\n      continue\n    }\n\n    const addr = buf.slice(i + n, i + n + size)\n\n    i += (size + n)\n\n    if (i > buf.length) { // did not end _exactly_ at buffer.length\n      throw ParseError('Invalid address buffer: ' + buf.toString('hex'))\n    }\n\n    // ok, tuple seems good.\n    tuples.push([code, addr])\n  }\n\n  return tuples\n}\n\n// Buffer -> String\nfunction bufferToString (buf) {\n  const a = bufferToTuples(buf)\n  const b = tuplesToStringTuples(a)\n  return stringTuplesToString(b)\n}\n\n// String -> Buffer\nfunction stringToBuffer (str) {\n  str = cleanPath(str)\n  const a = stringToStringTuples(str)\n  const b = stringTuplesToTuples(a)\n\n  return tuplesToBuffer(b)\n}\n\n// String -> Buffer\nfunction fromString (str) {\n  return stringToBuffer(str)\n}\n\n// Buffer -> Buffer\nfunction fromBuffer (buf) {\n  const err = validateBuffer(buf)\n  if (err) throw err\n  return Buffer.from(buf) // copy\n}\n\nfunction validateBuffer (buf) {\n  try {\n    bufferToTuples(buf) // try to parse. will throw if breaks\n  } catch (err) {\n    return err\n  }\n}\n\nfunction isValidBuffer (buf) {\n  return validateBuffer(buf) === undefined\n}\n\nfunction cleanPath (str) {\n  return '/' + str.trim().split('/').filter(a => a).join('/')\n}\n\nfunction ParseError (str) {\n  return new Error('Error parsing address: ' + str)\n}\n\nfunction protoFromTuple (tup) {\n  const proto = protocols(tup[0])\n  return proto\n}\n"
        },
        {
          "id": "./node_modules/multiaddr/src/convert.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
          "name": "./node_modules/multiaddr/src/convert.js",
          "index": 28,
          "index2": 36,
          "size": 4753,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
          "issuerId": "./node_modules/multiaddr/src/codec.js",
          "issuerName": "./node_modules/multiaddr/src/codec.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/multiaddr/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
              "name": "./node_modules/multiaddr/src/index.js"
            },
            {
              "id": "./node_modules/multiaddr/src/codec.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
              "name": "./node_modules/multiaddr/src/codec.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/multiaddr/src/codec.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
              "module": "./node_modules/multiaddr/src/codec.js",
              "moduleName": "./node_modules/multiaddr/src/codec.js",
              "type": "cjs require",
              "userRequest": "./convert",
              "loc": "4:16-36"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 6,
          "source": "'use strict'\n\nconst { Buffer } = require('buffer')\nconst ip = require('./ip')\nconst protocols = require('./protocols-table')\nconst CID = require('cids')\nconst multibase = require('multibase')\nconst varint = require('varint')\n\nmodule.exports = Convert\n\n// converts (serializes) addresses\nfunction Convert (proto, a) {\n  if (a instanceof Buffer) {\n    return Convert.toString(proto, a)\n  } else {\n    return Convert.toBuffer(proto, a)\n  }\n}\n\nConvert.toString = function convertToString (proto, buf) {\n  proto = protocols(proto)\n  switch (proto.code) {\n    case 4: // ipv4\n    case 41: // ipv6\n      return buf2ip(buf)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return buf2port(buf)\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 777: // memory\n      return buf2str(buf)\n\n    case 421: // ipfs\n      return buf2mh(buf)\n    case 444: // onion\n      return buf2onion(buf)\n    case 445: // onion3\n      return buf2onion(buf)\n    default:\n      return buf.toString('hex') // no clue. convert to hex\n  }\n}\n\nConvert.toBuffer = function convertToBuffer (proto, str) {\n  proto = protocols(proto)\n  switch (proto.code) {\n    case 4: // ipv4\n      return ip2buf(str)\n    case 41: // ipv6\n      return ip2buf(str)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return port2buf(parseInt(str, 10))\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 777: // memory\n      return str2buf(str)\n\n    case 421: // ipfs\n      return mh2buf(str)\n    case 444: // onion\n      return onion2buf(str)\n    case 445: // onion3\n      return onion32buf(str)\n    default:\n      return Buffer.from(str, 'hex') // no clue. convert from hex\n  }\n}\n\nfunction ip2buf (ipString) {\n  if (!ip.isIP(ipString)) {\n    throw new Error('invalid ip address')\n  }\n  return ip.toBuffer(ipString)\n}\n\nfunction buf2ip (ipBuff) {\n  const ipString = ip.toString(ipBuff)\n  if (!ipString || !ip.isIP(ipString)) {\n    throw new Error('invalid ip address')\n  }\n  return ipString\n}\n\nfunction port2buf (port) {\n  const buf = Buffer.alloc(2)\n  buf.writeUInt16BE(port, 0)\n  return buf\n}\n\nfunction buf2port (buf) {\n  return buf.readUInt16BE(0)\n}\n\nfunction str2buf (str) {\n  const buf = Buffer.from(str)\n  const size = Buffer.from(varint.encode(buf.length))\n  return Buffer.concat([size, buf])\n}\n\nfunction buf2str (buf) {\n  const size = varint.decode(buf)\n  buf = buf.slice(varint.decode.bytes)\n\n  if (buf.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return buf.toString()\n}\n\nfunction mh2buf (hash) {\n  // the address is a varint prefixed multihash string representation\n  const mh = new CID(hash).multihash\n  const size = Buffer.from(varint.encode(mh.length))\n  return Buffer.concat([size, mh])\n}\n\nfunction buf2mh (buf) {\n  const size = varint.decode(buf)\n  const address = buf.slice(varint.decode.bytes)\n\n  if (address.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n  return multibase.encode('base58btc', address).toString().slice(1)\n}\n\nfunction onion2buf (str) {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error('failed to parse onion addr: ' + addr + ' does not contain a port number')\n  }\n  if (addr[0].length !== 16) {\n    throw new Error('failed to parse onion addr: ' + addr[0] + ' not a Tor onion address.')\n  }\n\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = multibase.decode('b' + addr[0])\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2buf(port)\n  return Buffer.concat([buf, portBuf])\n}\n\nfunction onion32buf (str) {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error('failed to parse onion addr: ' + addr + ' does not contain a port number')\n  }\n  if (addr[0].length !== 56) {\n    throw new Error('failed to parse onion addr: ' + addr[0] + ' not a Tor onion3 address.')\n  }\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = multibase.decode('b' + addr[0])\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2buf(port)\n  return Buffer.concat([buf, portBuf])\n}\n\nfunction buf2onion (buf) {\n  const addrBytes = buf.slice(0, buf.length - 2)\n  const portBytes = buf.slice(buf.length - 2)\n  const addr = multibase.encode('base32', addrBytes).toString().slice(1)\n  const port = buf2port(portBytes)\n  return addr + ':' + port\n}\n"
        },
        {
          "id": "./node_modules/multiaddr/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
          "name": "./node_modules/multiaddr/src/index.js",
          "index": 26,
          "index2": 38,
          "size": 16168,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "issuerId": "./node_modules/is-ipfs/src/index.js",
          "issuerName": "./node_modules/is-ipfs/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/is-ipfs/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "module": "./node_modules/is-ipfs/src/index.js",
              "moduleName": "./node_modules/is-ipfs/src/index.js",
              "type": "cjs require",
              "userRequest": "multiaddr",
              "loc": "6:18-38"
            },
            {
              "moduleId": "./node_modules/mafmt/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/mafmt/src/index.js",
              "module": "./node_modules/mafmt/src/index.js",
              "moduleName": "./node_modules/mafmt/src/index.js",
              "type": "cjs require",
              "userRequest": "multiaddr",
              "loc": "3:18-38"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 4,
          "source": "'use strict'\n\nconst codec = require('./codec')\nconst { Buffer } = require('buffer')\nconst protocols = require('./protocols-table')\nconst varint = require('varint')\nconst multibase = require('multibase')\nconst CID = require('cids')\nconst withIs = require('class-is')\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\n\n/**\n * Creates a [multiaddr](https://github.com/multiformats/multiaddr) from\n * a Buffer, String or another Multiaddr instance\n * public key.\n * @class Multiaddr\n * @param {(String|Buffer|Multiaddr)} addr - If String or Buffer, needs to adhere\n * to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n */\nconst Multiaddr = withIs.proto(function (addr) {\n  if (!(this instanceof Multiaddr)) {\n    return new Multiaddr(addr)\n  }\n\n  // default\n  if (addr == null) {\n    addr = ''\n  }\n\n  if (addr instanceof Buffer) {\n    /**\n     * @type {Buffer} - The raw bytes representing this multiaddress\n     */\n    this.buffer = codec.fromBuffer(addr)\n  } else if (typeof addr === 'string' || addr instanceof String) {\n    if (addr.length > 0 && addr.charAt(0) !== '/') {\n      throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`)\n    }\n    this.buffer = codec.fromString(addr)\n  } else if (addr.buffer && addr.protos && addr.protoCodes) { // Multiaddr\n    this.buffer = codec.fromBuffer(addr.buffer) // validate + copy buffer\n  } else {\n    throw new Error('addr must be a string, Buffer, or another Multiaddr')\n  }\n}, { className: 'Multiaddr', symbolName: '@multiformats/js-multiaddr/multiaddr' })\n\n/**\n * Returns Multiaddr as a String\n *\n * @returns {String}\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').toString()\n * // '/ip4/127.0.0.1/tcp/4001'\n */\nMultiaddr.prototype.toString = function toString () {\n  return codec.bufferToString(this.buffer)\n}\n\n/**\n * Returns Multiaddr as a JSON encoded object\n *\n * @returns {String}\n * @example\n * JSON.stringify(Multiaddr('/ip4/127.0.0.1/tcp/4001'))\n * // '/ip4/127.0.0.1/tcp/4001'\n */\nMultiaddr.prototype.toJSON = Multiaddr.prototype.toString\n\n/**\n * Returns Multiaddr as a convinient options object to be used with net.createConnection\n *\n * @returns {{family: String, host: String, transport: String, port: Number}}\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').toOptions()\n * // { family: 'ipv4', host: '127.0.0.1', transport: 'tcp', port: 4001 }\n */\nMultiaddr.prototype.toOptions = function toOptions () {\n  const opts = {}\n  const parsed = this.toString().split('/')\n  opts.family = parsed[1] === 'ip4' ? 'ipv4' : 'ipv6'\n  opts.host = parsed[2]\n  opts.transport = parsed[3]\n  opts.port = parseInt(parsed[4])\n  return opts\n}\n\n/**\n * Returns Multiaddr as a human-readable string.\n * For post Node.js v10.0.0.\n * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\n *\n * @returns {String}\n * @example\n * console.log(Multiaddr('/ip4/127.0.0.1/tcp/4001'))\n * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\n */\nMultiaddr.prototype[inspect] = function inspectCustom () {\n  return '<Multiaddr ' +\n    this.buffer.toString('hex') + ' - ' +\n    codec.bufferToString(this.buffer) + '>'\n}\n\n/**\n * Returns Multiaddr as a human-readable string.\n * Fallback for pre Node.js v10.0.0.\n * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\n *\n * @returns {String}\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').inspect()\n * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\n */\nMultiaddr.prototype.inspect = function inspect () {\n  return '<Multiaddr ' +\n    this.buffer.toString('hex') + ' - ' +\n    codec.bufferToString(this.buffer) + '>'\n}\n\n/**\n * Returns the protocols the Multiaddr is defined with, as an array of objects, in\n * left-to-right order. Each object contains the protocol code, protocol name,\n * and the size of its address space in bits.\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n *\n * @returns {Array.<Object>} protocols - All the protocols the address is composed of\n * @returns {Number} protocols[].code\n * @returns {Number} protocols[].size\n * @returns {String} protocols[].name\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protos()\n * // [ { code: 4, size: 32, name: 'ip4' },\n * //   { code: 6, size: 16, name: 'tcp' } ]\n */\nMultiaddr.prototype.protos = function protos () {\n  return this.protoCodes().map(code => Object.assign({}, protocols(code)))\n}\n\n/**\n * Returns the codes of the protocols in left-to-right order.\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n *\n * @returns {Array.<Number>} protocol codes\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoCodes()\n * // [ 4, 6 ]\n */\nMultiaddr.prototype.protoCodes = function protoCodes () {\n  const codes = []\n  const buf = this.buffer\n  let i = 0\n  while (i < buf.length) {\n    const code = varint.decode(buf, i)\n    const n = varint.decode.bytes\n\n    const p = protocols(code)\n    const size = codec.sizeForAddr(p, buf.slice(i + n))\n\n    i += (size + n)\n    codes.push(code)\n  }\n\n  return codes\n}\n\n/**\n * Returns the names of the protocols in left-to-right order.\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n *\n * @return {Array.<String>} protocol names\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoNames()\n * // [ 'ip4', 'tcp' ]\n */\nMultiaddr.prototype.protoNames = function protoNames () {\n  return this.protos().map(proto => proto.name)\n}\n\n/**\n * Returns a tuple of parts\n *\n * @return {Array.<Array>} tuples\n * @return {Number} tuples[].0 code of protocol\n * @return {Buffer} tuples[].1 contents of address\n * @example\n * Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").tuples()\n * // [ [ 4, <Buffer 7f 00 00 01> ], [ 6, <Buffer 0f a1> ] ]\n */\nMultiaddr.prototype.tuples = function tuples () {\n  return codec.bufferToTuples(this.buffer)\n}\n\n/**\n * Returns a tuple of string/number parts\n *\n * @return {Array.<Array>} tuples\n * @return {Number} tuples[].0 code of protocol\n * @return {(String|Number)} tuples[].1 contents of address\n * @example\n * Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").stringTuples()\n * // [ [ 4, '127.0.0.1' ], [ 6, 4001 ] ]\n */\nMultiaddr.prototype.stringTuples = function stringTuples () {\n  const t = codec.bufferToTuples(this.buffer)\n  return codec.tuplesToStringTuples(t)\n}\n\n/**\n * Encapsulates a Multiaddr in another Multiaddr\n *\n * @param {Multiaddr} addr - Multiaddr to add into this Multiaddr\n * @return {Multiaddr}\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n *\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n *\n * const mh3 = mh1.encapsulate(mh2)\n * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\n *\n * mh3.toString()\n * // '/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001'\n */\nMultiaddr.prototype.encapsulate = function encapsulate (addr) {\n  addr = Multiaddr(addr)\n  return Multiaddr(this.toString() + addr.toString())\n}\n\n/**\n * Decapsulates a Multiaddr from another Multiaddr\n *\n * @param {Multiaddr} addr - Multiaddr to remove from this Multiaddr\n * @return {Multiaddr}\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n *\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n *\n * const mh3 = mh1.encapsulate(mh2)\n * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\n *\n * mh3.decapsulate(mh2).toString()\n * // '/ip4/8.8.8.8/tcp/1080'\n */\nMultiaddr.prototype.decapsulate = function decapsulate (addr) {\n  addr = addr.toString()\n  const s = this.toString()\n  const i = s.lastIndexOf(addr)\n  if (i < 0) {\n    throw new Error('Address ' + this + ' does not contain subaddress: ' + addr)\n  }\n  return Multiaddr(s.slice(0, i))\n}\n\n/**\n * A more reliable version of `decapsulate` if you are targeting a\n * specific code, such as 421 (the `p2p` protocol code). The last index of the code\n * will be removed from the `Multiaddr`, and a new instance will be returned.\n * If the code is not present, the original `Multiaddr` is returned.\n *\n * @param {Number} code The code of the protocol to decapsulate from this Multiaddr\n * @return {Multiaddr}\n * @example\n * const addr = Multiaddr('/ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC')\n * // <Multiaddr 0400... - /ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC>\n *\n * addr.decapsulateCode(421).toString()\n * // '/ip4/0.0.0.0/tcp/8080'\n *\n * Multiaddr('/ip4/127.0.0.1/tcp/8080').decapsulateCode(421).toString()\n * // '/ip4/127.0.0.1/tcp/8080'\n */\nMultiaddr.prototype.decapsulateCode = function decapsulateCode (code) {\n  const tuples = this.tuples()\n  for (let i = tuples.length - 1; i >= 0; i--) {\n    if (tuples[i][0] === code) {\n      return Multiaddr(codec.tuplesToBuffer(tuples.slice(0, i)))\n    }\n  }\n  return this\n}\n\n/**\n * Extract the peerId if the multiaddr contains one\n *\n * @return {String|null} peerId - The id of the peer or null if invalid or missing from the ma\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string>\n *\n * // should return QmValidBase58string or null if the id is missing or invalid\n * const peerId = mh1.getPeerId()\n */\nMultiaddr.prototype.getPeerId = function getPeerId () {\n  let b58str = null\n  try {\n    const tuples = this.stringTuples().filter((tuple) => {\n      if (tuple[0] === protocols.names.ipfs.code) {\n        return true\n      }\n    })\n\n    // Get the last id\n    b58str = tuples.pop()[1]\n    // Get multihash, unwrap from CID if needed\n    b58str = multibase.encode('base58btc', new CID(b58str).multihash).toString().slice(1)\n  } catch (e) {\n    b58str = null\n  }\n\n  return b58str\n}\n\n/**\n * Extract the path if the multiaddr contains one\n *\n * @return {String|null} path - The path of the multiaddr, or null if no path protocol is present\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock>\n *\n * // should return utf8 string or null if the id is missing or invalid\n * const path = mh1.getPath()\n */\nMultiaddr.prototype.getPath = function getPath () {\n  let path = null\n  try {\n    path = this.stringTuples().filter((tuple) => {\n      const proto = protocols(tuple[0])\n      if (proto.path) {\n        return true\n      }\n    })[0][1]\n  } catch (e) {\n    path = null\n  }\n\n  return path\n}\n\n/**\n * Checks if two Multiaddrs are the same\n *\n * @param {Multiaddr} addr\n * @return {Bool}\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n *\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n *\n * mh1.equals(mh1)\n * // true\n *\n * mh1.equals(mh2)\n * // false\n */\nMultiaddr.prototype.equals = function equals (addr) {\n  return this.buffer.equals(addr.buffer)\n}\n\n/**\n * Gets a Multiaddrs node-friendly address object. Note that protocol information\n * is left out: in Node (and most network systems) the protocol is unknowable\n * given only the address.\n *\n * Has to be a ThinWaist Address, otherwise throws error\n *\n * @returns {{family: String, address: String, port: Number}}\n * @throws {Error} Throws error if Multiaddr is not a Thin Waist address\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').nodeAddress()\n * // {family: 'IPv4', address: '127.0.0.1', port: '4001'}\n */\nMultiaddr.prototype.nodeAddress = function nodeAddress () {\n  const codes = this.protoCodes()\n  const names = this.protoNames()\n  const parts = this.toString().split('/').slice(1)\n\n  if (parts.length < 4) {\n    throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6}/{address}/{tcp, udp}/{port}\".')\n  } else if (codes[0] !== 4 && codes[0] !== 41 && codes[0] !== 54 && codes[0] !== 55) {\n    throw new Error(`no protocol with name: \"'${names[0]}'\". Must have a valid family name: \"{ip4, ip6, dns4, dns6}\".`)\n  } else if (parts[2] !== 'tcp' && parts[2] !== 'udp') {\n    throw new Error(`no protocol with name: \"'${names[1]}'\". Must have a valid transport protocol: \"{tcp, udp}\".`)\n  }\n\n  return {\n    family: (codes[0] === 41 || codes[0] === 55) ? 6 : 4,\n    address: parts[1], // ip addr\n    port: parseInt(parts[3]) // tcp or udp port\n  }\n}\n\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @param {{family: String, address: String, port: Number}} addr\n * @param {String} transport\n * @returns {Multiaddr} multiaddr\n * @throws {Error} Throws error if addr is not truthy\n * @throws {Error} Throws error if transport is not truthy\n * @example\n * Multiaddr.fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n */\nMultiaddr.fromNodeAddress = function fromNodeAddress (addr, transport) {\n  if (!addr) throw new Error('requires node address object')\n  if (!transport) throw new Error('requires transport protocol')\n  let ip\n  switch (addr.family) {\n    case 'IPv4':\n      ip = 'ip4'\n      break\n    case 'IPv6':\n      ip = 'ip6'\n      break\n    default:\n      throw Error(`Invalid addr family. Got '${addr.family}' instead of 'IPv4' or 'IPv6'`)\n  }\n  return Multiaddr('/' + [ip, addr.address, transport, addr.port].join('/'))\n}\n\n// TODO find a better example, not sure about it's good enough\n/**\n * Returns if a Multiaddr is a Thin Waist address or not.\n *\n * Thin Waist is if a Multiaddr adheres to the standard combination of:\n *\n * `{IPv4, IPv6}/{TCP, UDP}`\n *\n * @param {Multiaddr} [addr] - Defaults to using `this` instance\n * @returns {Boolean} isThinWaistAddress\n * @example\n * const mh1 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n * const mh2 = Multiaddr('/ip4/192.168.2.1/tcp/5001')\n * // <Multiaddr 04c0a80201061389 - /ip4/192.168.2.1/tcp/5001>\n * const mh3 = mh1.encapsulate(mh2)\n * // <Multiaddr 047f000001060fa104c0a80201061389 - /ip4/127.0.0.1/tcp/4001/ip4/192.168.2.1/tcp/5001>\n * mh1.isThinWaistAddress()\n * // true\n * mh2.isThinWaistAddress()\n * // true\n * mh3.isThinWaistAddress()\n * // false\n */\nMultiaddr.prototype.isThinWaistAddress = function isThinWaistAddress (addr) {\n  const protos = (addr || this).protos()\n\n  if (protos.length !== 2) {\n    return false\n  }\n\n  if (protos[0].code !== 4 && protos[0].code !== 41) {\n    return false\n  }\n  if (protos[1].code !== 6 && protos[1].code !== 273) {\n    return false\n  }\n  return true\n}\n\n/**\n * Object containing table, names and codes of all supported protocols.\n * To get the protocol values from a Multiaddr, you can use\n * [`.protos()`](#multiaddrprotos),\n * [`.protoCodes()`](#multiaddrprotocodes) or\n * [`.protoNames()`](#multiaddrprotonames)\n *\n * @instance\n * @returns {{table: Array, names: Object, codes: Object}}\n *\n */\nMultiaddr.protocols = protocols\n\n/**\n * Returns if something is a Multiaddr that is a name\n *\n * @param {Multiaddr} addr\n * @return {Bool} isName\n */\nMultiaddr.isName = function isName (addr) {\n  if (!Multiaddr.isMultiaddr(addr)) {\n    return false\n  }\n\n  // if a part of the multiaddr is resolvable, then return true\n  return addr.protos().some((proto) => proto.resolvable)\n}\n\n/**\n * Returns an array of multiaddrs, by resolving the multiaddr that is a name\n *\n * @async\n * @param {Multiaddr} addr\n * @return {Multiaddr[]}\n */\nMultiaddr.resolve = function resolve (addr) {\n  if (!Multiaddr.isMultiaddr(addr) || !Multiaddr.isName(addr)) {\n    return Promise.reject(Error('not a valid name'))\n  }\n\n  /*\n   * Needs more consideration from spec design:\n   *   - what to return\n   *   - how to achieve it in the browser?\n   */\n  return Promise.reject(new Error('not implemented yet'))\n}\n\nexports = module.exports = Multiaddr\n"
        },
        {
          "id": "./node_modules/multiaddr/src/ip.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/ip.js",
          "name": "./node_modules/multiaddr/src/ip.js",
          "index": 29,
          "index2": 24,
          "size": 2393,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
          "issuerId": "./node_modules/multiaddr/src/convert.js",
          "issuerName": "./node_modules/multiaddr/src/convert.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/multiaddr/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
              "name": "./node_modules/multiaddr/src/index.js"
            },
            {
              "id": "./node_modules/multiaddr/src/codec.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
              "name": "./node_modules/multiaddr/src/codec.js"
            },
            {
              "id": "./node_modules/multiaddr/src/convert.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
              "name": "./node_modules/multiaddr/src/convert.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/multiaddr/src/convert.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
              "module": "./node_modules/multiaddr/src/convert.js",
              "moduleName": "./node_modules/multiaddr/src/convert.js",
              "type": "cjs require",
              "userRequest": "./ip",
              "loc": "4:11-26"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 7,
          "source": "'use strict'\n\nconst { Buffer } = require('buffer')\nconst isIp = require('is-ip')\n\nconst isIP = isIp\nconst isV4 = isIp.v4\nconst isV6 = isIp.v6\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\nconst toBuffer = function (ip, buff, offset) {\n  offset = ~~offset\n\n  var result\n\n  if (isV4(ip)) {\n    result = buff || Buffer.alloc(offset + 4)\n    ip.split(/\\./g).map(function (byte) {\n      result[offset++] = parseInt(byte, 10) & 0xff\n    })\n  } else if (isV6(ip)) {\n    var sections = ip.split(':', 8)\n\n    var i\n    for (i = 0; i < sections.length; i++) {\n      var isv4 = isV4(sections[i])\n      var v4Buffer\n\n      if (isv4) {\n        v4Buffer = toBuffer(sections[i])\n        sections[i] = v4Buffer.slice(0, 2).toString('hex')\n      }\n\n      if (v4Buffer && ++i < 8) {\n        sections.splice(i, 0, v4Buffer.slice(2, 4).toString('hex'))\n      }\n    }\n\n    if (sections[0] === '') {\n      while (sections.length < 8) sections.unshift('0')\n    } else if (sections[sections.length - 1] === '') {\n      while (sections.length < 8) sections.push('0')\n    } else if (sections.length < 8) {\n      for (i = 0; i < sections.length && sections[i] !== ''; i++);\n      var argv = [i, '1']\n      for (i = 9 - sections.length; i > 0; i--) {\n        argv.push('0')\n      }\n      sections.splice.apply(sections, argv)\n    }\n\n    result = buff || Buffer.alloc(offset + 16)\n    for (i = 0; i < sections.length; i++) {\n      var word = parseInt(sections[i], 16)\n      result[offset++] = (word >> 8) & 0xff\n      result[offset++] = word & 0xff\n    }\n  }\n\n  if (!result) {\n    throw Error('Invalid ip address: ' + ip)\n  }\n\n  return result\n}\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nconst toString = function (buff, offset, length) {\n  offset = ~~offset\n  length = length || (buff.length - offset)\n\n  var result = []\n  var string\n  if (length === 4) {\n    // IPv4\n    for (let i = 0; i < length; i++) {\n      result.push(buff[offset + i])\n    }\n    string = result.join('.')\n  } else if (length === 16) {\n    // IPv6\n    for (let i = 0; i < length; i += 2) {\n      result.push(buff.readUInt16BE(offset + i).toString(16))\n    }\n    string = result.join(':')\n    string = string.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n    string = string.replace(/:{3,4}/, '::')\n  }\n\n  return string\n}\n\nmodule.exports = {\n  isIP,\n  isV4,\n  isV6,\n  toBuffer,\n  toString\n}\n"
        },
        {
          "id": "./node_modules/multiaddr/src/protocols-table.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/protocols-table.js",
          "name": "./node_modules/multiaddr/src/protocols-table.js",
          "index": 32,
          "index2": 25,
          "size": 1921,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
          "issuerId": "./node_modules/multiaddr/src/index.js",
          "issuerName": "./node_modules/multiaddr/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/multiaddr/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
              "name": "./node_modules/multiaddr/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/multiaddr/src/codec.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
              "module": "./node_modules/multiaddr/src/codec.js",
              "moduleName": "./node_modules/multiaddr/src/codec.js",
              "type": "cjs require",
              "userRequest": "./protocols-table",
              "loc": "5:18-46"
            },
            {
              "moduleId": "./node_modules/multiaddr/src/convert.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
              "module": "./node_modules/multiaddr/src/convert.js",
              "moduleName": "./node_modules/multiaddr/src/convert.js",
              "type": "cjs require",
              "userRequest": "./protocols-table",
              "loc": "5:18-46"
            },
            {
              "moduleId": "./node_modules/multiaddr/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
              "module": "./node_modules/multiaddr/src/index.js",
              "moduleName": "./node_modules/multiaddr/src/index.js",
              "type": "cjs require",
              "userRequest": "./protocols-table",
              "loc": "5:18-46"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 5,
          "source": "'use strict'\n\nfunction Protocols (proto) {\n  if (typeof (proto) === 'number') {\n    if (Protocols.codes[proto]) {\n      return Protocols.codes[proto]\n    }\n\n    throw new Error('no protocol with code: ' + proto)\n  } else if (typeof (proto) === 'string' || proto instanceof String) {\n    if (Protocols.names[proto]) {\n      return Protocols.names[proto]\n    }\n\n    throw new Error('no protocol with name: ' + proto)\n  }\n\n  throw new Error('invalid protocol id type: ' + proto)\n}\n\nconst V = -1\nProtocols.lengthPrefixedVarSize = V\nProtocols.V = V\n\nProtocols.table = [\n  [4, 32, 'ip4'],\n  [6, 16, 'tcp'],\n  [33, 16, 'dccp'],\n  [41, 128, 'ip6'],\n  [42, V, 'ip6zone'],\n  [53, V, 'dns', 'resolvable'],\n  [54, V, 'dns4', 'resolvable'],\n  [55, V, 'dns6', 'resolvable'],\n  [56, V, 'dnsaddr', 'resolvable'],\n  [132, 16, 'sctp'],\n  [273, 16, 'udp'],\n  [275, 0, 'p2p-webrtc-star'],\n  [276, 0, 'p2p-webrtc-direct'],\n  [277, 0, 'p2p-stardust'],\n  [290, 0, 'p2p-circuit'],\n  [301, 0, 'udt'],\n  [302, 0, 'utp'],\n  [400, V, 'unix', false, 'path'],\n  // `ipfs` is added before `p2p` for legacy support.\n  // All text representations will default to `p2p`, but `ipfs` will\n  // still be supported\n  [421, V, 'ipfs'],\n  // `p2p` is the preferred name for 421, and is now the default\n  [421, V, 'p2p'],\n  [443, 0, 'https'],\n  [444, 96, 'onion'],\n  [445, 296, 'onion3'],\n  [446, V, 'garlic64'],\n  [460, 0, 'quic'],\n  [477, 0, 'ws'],\n  [478, 0, 'wss'],\n  [479, 0, 'p2p-websocket-star'],\n  [480, 0, 'http'],\n  [777, V, 'memory']\n]\n\nProtocols.names = {}\nProtocols.codes = {}\n\n// populate tables\nProtocols.table.map(row => {\n  const proto = p.apply(null, row)\n  Protocols.codes[proto.code] = proto\n  Protocols.names[proto.name] = proto\n})\n\nProtocols.object = p\n\nfunction p (code, size, name, resolvable, path) {\n  return {\n    code,\n    size,\n    name,\n    resolvable: Boolean(resolvable),\n    path: Boolean(path)\n  }\n}\n\nmodule.exports = Protocols\n"
        },
        {
          "id": "./node_modules/multibase/src/base.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/base.js",
          "name": "./node_modules/multibase/src/base.js",
          "index": 17,
          "index2": 10,
          "size": 478,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
          "issuerId": "./node_modules/multibase/src/constants.js",
          "issuerName": "./node_modules/multibase/src/constants.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/multibase/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/index.js",
              "name": "./node_modules/multibase/src/index.js"
            },
            {
              "id": "./node_modules/multibase/src/constants.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
              "name": "./node_modules/multibase/src/constants.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/multibase/src/constants.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
              "module": "./node_modules/multibase/src/constants.js",
              "moduleName": "./node_modules/multibase/src/constants.js",
              "type": "cjs require",
              "userRequest": "./base.js",
              "loc": "3:13-33"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 6,
          "source": "'use strict'\n\nclass Base {\n  constructor (name, code, implementation, alphabet) {\n    this.name = name\n    this.code = code\n    this.alphabet = alphabet\n    if (implementation && alphabet) {\n      this.engine = implementation(alphabet)\n    }\n  }\n\n  encode (stringOrBuffer) {\n    return this.engine.encode(stringOrBuffer)\n  }\n\n  decode (stringOrBuffer) {\n    return this.engine.decode(stringOrBuffer)\n  }\n\n  isImplemented () {\n    return this.engine\n  }\n}\n\nmodule.exports = Base\n"
        },
        {
          "id": "./node_modules/multibase/src/base16.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/base16.js",
          "name": "./node_modules/multibase/src/base16.js",
          "index": 18,
          "index2": 11,
          "size": 488,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
          "issuerId": "./node_modules/multibase/src/constants.js",
          "issuerName": "./node_modules/multibase/src/constants.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/multibase/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/index.js",
              "name": "./node_modules/multibase/src/index.js"
            },
            {
              "id": "./node_modules/multibase/src/constants.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
              "name": "./node_modules/multibase/src/constants.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/multibase/src/constants.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
              "module": "./node_modules/multibase/src/constants.js",
              "moduleName": "./node_modules/multibase/src/constants.js",
              "type": "cjs require",
              "userRequest": "./base16",
              "loc": "5:15-34"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 6,
          "source": "'use strict'\nconst { Buffer } = require('buffer')\n\nmodule.exports = function base16 (alphabet) {\n  return {\n    encode (input) {\n      if (typeof input === 'string') {\n        return Buffer.from(input).toString('hex')\n      }\n      return input.toString('hex')\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base16 character')\n        }\n      }\n      return Buffer.from(input, 'hex')\n    }\n  }\n}\n"
        },
        {
          "id": "./node_modules/multibase/src/base32.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/base32.js",
          "name": "./node_modules/multibase/src/base32.js",
          "index": 19,
          "index2": 12,
          "size": 1590,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
          "issuerId": "./node_modules/multibase/src/constants.js",
          "issuerName": "./node_modules/multibase/src/constants.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/multibase/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/index.js",
              "name": "./node_modules/multibase/src/index.js"
            },
            {
              "id": "./node_modules/multibase/src/constants.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
              "name": "./node_modules/multibase/src/constants.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/multibase/src/constants.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
              "module": "./node_modules/multibase/src/constants.js",
              "moduleName": "./node_modules/multibase/src/constants.js",
              "type": "cjs require",
              "userRequest": "./base32",
              "loc": "6:15-34"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 6,
          "source": "'use strict'\n\nfunction decode (input, alphabet) {\n  input = input.replace(new RegExp('=', 'g'), '')\n  const length = input.length\n\n  let bits = 0\n  let value = 0\n\n  let index = 0\n  const output = new Uint8Array((length * 5 / 8) | 0)\n\n  for (let i = 0; i < length; i++) {\n    value = (value << 5) | alphabet.indexOf(input[i])\n    bits += 5\n\n    if (bits >= 8) {\n      output[index++] = (value >>> (bits - 8)) & 255\n      bits -= 8\n    }\n  }\n\n  return output.buffer\n}\n\nfunction encode (buffer, alphabet) {\n  const length = buffer.byteLength\n  const view = new Uint8Array(buffer)\n  const padding = alphabet.indexOf('=') === alphabet.length - 1\n\n  if (padding) {\n    alphabet = alphabet.substring(0, alphabet.length - 1)\n  }\n\n  let bits = 0\n  let value = 0\n  let output = ''\n\n  for (let i = 0; i < length; i++) {\n    value = (value << 8) | view[i]\n    bits += 8\n\n    while (bits >= 5) {\n      output += alphabet[(value >>> (bits - 5)) & 31]\n      bits -= 5\n    }\n  }\n\n  if (bits > 0) {\n    output += alphabet[(value << (5 - bits)) & 31]\n  }\n\n  if (padding) {\n    while ((output.length % 8) !== 0) {\n      output += '='\n    }\n  }\n\n  return output\n}\n\nmodule.exports = function base32 (alphabet) {\n  return {\n    encode (input) {\n      if (typeof input === 'string') {\n        return encode(Uint8Array.from(input), alphabet)\n      }\n\n      return encode(input, alphabet)\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base32 character')\n        }\n      }\n\n      return decode(input, alphabet)\n    }\n  }\n}\n"
        },
        {
          "id": "./node_modules/multibase/src/base64.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/base64.js",
          "name": "./node_modules/multibase/src/base64.js",
          "index": 20,
          "index2": 13,
          "size": 1156,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
          "issuerId": "./node_modules/multibase/src/constants.js",
          "issuerName": "./node_modules/multibase/src/constants.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/multibase/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/index.js",
              "name": "./node_modules/multibase/src/index.js"
            },
            {
              "id": "./node_modules/multibase/src/constants.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
              "name": "./node_modules/multibase/src/constants.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/multibase/src/constants.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
              "module": "./node_modules/multibase/src/constants.js",
              "moduleName": "./node_modules/multibase/src/constants.js",
              "type": "cjs require",
              "userRequest": "./base64",
              "loc": "7:15-34"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 6,
          "source": "'use strict'\nconst { Buffer } = require('buffer')\n\nmodule.exports = function base64 (alphabet) {\n  // The alphabet is only used to know:\n  //   1. If padding is enabled (must contain '=')\n  //   2. If the output must be url-safe (must contain '-' and '_')\n  //   3. If the input of the output function is valid\n  // The alphabets from RFC 4648 are always used.\n  const padding = alphabet.indexOf('=') > -1\n  const url = alphabet.indexOf('-') > -1 && alphabet.indexOf('_') > -1\n\n  return {\n    encode (input) {\n      let output = ''\n\n      if (typeof input === 'string') {\n        output = Buffer.from(input).toString('base64')\n      } else {\n        output = input.toString('base64')\n      }\n\n      if (url) {\n        output = output.replace(/\\+/g, '-').replace(/\\//g, '_')\n      }\n\n      const pad = output.indexOf('=')\n      if (pad > 0 && !padding) {\n        output = output.substring(0, pad)\n      }\n\n      return output\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base64 character')\n        }\n      }\n\n      return Buffer.from(input, 'base64')\n    }\n  }\n}\n"
        },
        {
          "id": "./node_modules/multibase/src/constants.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
          "name": "./node_modules/multibase/src/constants.js",
          "index": 16,
          "index2": 14,
          "size": 1647,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/index.js",
          "issuerId": "./node_modules/multibase/src/index.js",
          "issuerName": "./node_modules/multibase/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/multibase/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/index.js",
              "name": "./node_modules/multibase/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/multibase/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/index.js",
              "module": "./node_modules/multibase/src/index.js",
              "moduleName": "./node_modules/multibase/src/index.js",
              "type": "cjs require",
              "userRequest": "./constants",
              "loc": "8:18-40"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 5,
          "source": "'use strict'\n\nconst Base = require('./base.js')\nconst baseX = require('base-x')\nconst base16 = require('./base16')\nconst base32 = require('./base32')\nconst base64 = require('./base64')\n\n// name, code, implementation, alphabet\nconst constants = [\n  ['base1', '1', '', '1'],\n  ['base2', '0', baseX, '01'],\n  ['base8', '7', baseX, '01234567'],\n  ['base10', '9', baseX, '0123456789'],\n  ['base16', 'f', base16, '0123456789abcdef'],\n  ['base32', 'b', base32, 'abcdefghijklmnopqrstuvwxyz234567'],\n  ['base32pad', 'c', base32, 'abcdefghijklmnopqrstuvwxyz234567='],\n  ['base32hex', 'v', base32, '0123456789abcdefghijklmnopqrstuv'],\n  ['base32hexpad', 't', base32, '0123456789abcdefghijklmnopqrstuv='],\n  ['base32z', 'h', base32, 'ybndrfg8ejkmcpqxot1uwisza345h769'],\n  ['base58flickr', 'Z', baseX, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\n  ['base58btc', 'z', baseX, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\n  ['base64', 'm', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\n  ['base64pad', 'M', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\n  ['base64url', 'u', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\n  ['base64urlpad', 'U', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\n]\n\nconst names = constants.reduce((prev, tupple) => {\n  prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3])\n  return prev\n}, {})\n\nconst codes = constants.reduce((prev, tupple) => {\n  prev[tupple[1]] = names[tupple[0]]\n  return prev\n}, {})\n\nmodule.exports = {\n  names: names,\n  codes: codes\n}\n"
        },
        {
          "id": "./node_modules/multibase/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/index.js",
          "name": "./node_modules/multibase/src/index.js",
          "index": 15,
          "index2": 15,
          "size": 3126,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "issuerId": "./node_modules/is-ipfs/src/index.js",
          "issuerName": "./node_modules/is-ipfs/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/cids/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
              "module": "./node_modules/cids/src/index.js",
              "moduleName": "./node_modules/cids/src/index.js",
              "type": "cjs require",
              "userRequest": "multibase",
              "loc": "5:18-38"
            },
            {
              "moduleId": "./node_modules/is-ipfs/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "module": "./node_modules/is-ipfs/src/index.js",
              "moduleName": "./node_modules/is-ipfs/src/index.js",
              "type": "cjs require",
              "userRequest": "multibase",
              "loc": "5:18-38"
            },
            {
              "moduleId": "./node_modules/multiaddr/src/convert.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
              "module": "./node_modules/multiaddr/src/convert.js",
              "moduleName": "./node_modules/multiaddr/src/convert.js",
              "type": "cjs require",
              "userRequest": "multibase",
              "loc": "7:18-38"
            },
            {
              "moduleId": "./node_modules/multiaddr/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
              "module": "./node_modules/multiaddr/src/index.js",
              "moduleName": "./node_modules/multiaddr/src/index.js",
              "type": "cjs require",
              "userRequest": "multibase",
              "loc": "7:18-38"
            },
            {
              "moduleId": "./node_modules/multihashes/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
              "module": "./node_modules/multihashes/src/index.js",
              "moduleName": "./node_modules/multihashes/src/index.js",
              "type": "cjs require",
              "userRequest": "multibase",
              "loc": "9:18-38"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 4,
          "source": "/**\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\n * @module Multibase\n */\n'use strict'\n\nconst { Buffer } = require('buffer')\nconst constants = require('./constants')\n\nexports = module.exports = multibase\nexports.encode = encode\nexports.decode = decode\nexports.isEncoded = isEncoded\nexports.names = Object.freeze(Object.keys(constants.names))\nexports.codes = Object.freeze(Object.keys(constants.codes))\n\nconst errNotSupported = new Error('Unsupported encoding')\n\n/**\n * Create a new buffer with the multibase varint+code.\n *\n * @param {string|number} nameOrCode - The multibase name or code number.\n * @param {Buffer} buf - The data to be prefixed with multibase.\n * @memberof Multibase\n * @returns {Buffer}\n */\nfunction multibase (nameOrCode, buf) {\n  if (!buf) {\n    throw new Error('requires an encoded buffer')\n  }\n  const base = getBase(nameOrCode)\n  const codeBuf = Buffer.from(base.code)\n\n  const name = base.name\n  validEncode(name, buf)\n  return Buffer.concat([codeBuf, buf])\n}\n\n/**\n * Encode data with the specified base and add the multibase prefix.\n *\n * @param {string|number} nameOrCode - The multibase name or code number.\n * @param {Buffer} buf - The data to be encoded.\n * @returns {Buffer}\n * @memberof Multibase\n */\nfunction encode (nameOrCode, buf) {\n  const base = getBase(nameOrCode)\n  const name = base.name\n\n  return multibase(name, Buffer.from(base.encode(buf)))\n}\n\n/**\n * Takes a buffer or string encoded with multibase header, decodes it and\n * returns the decoded buffer\n *\n * @param {Buffer|string} bufOrString\n * @returns {Buffer}\n * @memberof Multibase\n *\n */\nfunction decode (bufOrString) {\n  if (Buffer.isBuffer(bufOrString)) {\n    bufOrString = bufOrString.toString()\n  }\n\n  const code = bufOrString.substring(0, 1)\n  bufOrString = bufOrString.substring(1, bufOrString.length)\n\n  if (typeof bufOrString === 'string') {\n    bufOrString = Buffer.from(bufOrString)\n  }\n\n  const base = getBase(code)\n  return Buffer.from(base.decode(bufOrString.toString()))\n}\n\n/**\n * Is the given data multibase encoded?\n *\n * @param {Buffer|string} bufOrString\n * @returns {boolean}\n * @memberof Multibase\n */\nfunction isEncoded (bufOrString) {\n  if (Buffer.isBuffer(bufOrString)) {\n    bufOrString = bufOrString.toString()\n  }\n\n  // Ensure bufOrString is a string\n  if (Object.prototype.toString.call(bufOrString) !== '[object String]') {\n    return false\n  }\n\n  const code = bufOrString.substring(0, 1)\n  try {\n    const base = getBase(code)\n    return base.name\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * @param {string} name\n * @param {Buffer} buf\n * @private\n * @returns {undefined}\n */\nfunction validEncode (name, buf) {\n  const base = getBase(name)\n  base.decode(buf.toString())\n}\n\nfunction getBase (nameOrCode) {\n  let base\n\n  if (constants.names[nameOrCode]) {\n    base = constants.names[nameOrCode]\n  } else if (constants.codes[nameOrCode]) {\n    base = constants.codes[nameOrCode]\n  } else {\n    throw errNotSupported\n  }\n\n  if (!base.isImplemented()) {\n    throw new Error('Base ' + nameOrCode + ' is not implemented yet')\n  }\n\n  return base\n}\n"
        },
        {
          "id": "./node_modules/multicodec/src/base-table.json",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/base-table.json",
          "name": "./node_modules/multicodec/src/base-table.json",
          "index": 36,
          "index2": 26,
          "size": 10603,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "issuerId": "./node_modules/cids/src/index.js",
          "issuerName": "./node_modules/cids/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/cids/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
              "name": "./node_modules/cids/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/cids/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
              "module": "./node_modules/cids/src/index.js",
              "moduleName": "./node_modules/cids/src/index.js",
              "type": "cjs require",
              "userRequest": "multicodec/src/base-table.json",
              "loc": "7:15-56"
            },
            {
              "moduleId": "./node_modules/multicodec/src/constants.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/constants.js",
              "module": "./node_modules/multicodec/src/constants.js",
              "moduleName": "./node_modules/multicodec/src/constants.js",
              "type": "cjs require",
              "userRequest": "./base-table.json",
              "loc": "3:14-42"
            },
            {
              "moduleId": "./node_modules/multicodec/src/int-table.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/int-table.js",
              "module": "./node_modules/multicodec/src/int-table.js",
              "moduleName": "./node_modules/multicodec/src/int-table.js",
              "type": "cjs require",
              "userRequest": "./base-table.json",
              "loc": "2:18-46"
            },
            {
              "moduleId": "./node_modules/multicodec/src/print.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/print.js",
              "module": "./node_modules/multicodec/src/print.js",
              "moduleName": "./node_modules/multicodec/src/print.js",
              "type": "cjs require",
              "userRequest": "./base-table.json",
              "loc": "3:14-42"
            },
            {
              "moduleId": "./node_modules/multicodec/src/varint-table.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/varint-table.js",
              "module": "./node_modules/multicodec/src/varint-table.js",
              "moduleName": "./node_modules/multicodec/src/varint-table.js",
              "type": "cjs require",
              "userRequest": "./base-table.json",
              "loc": "3:18-46"
            }
          ],
          "providedExports": [
            "identity",
            "ip4",
            "tcp",
            "sha1",
            "sha2-256",
            "sha2-512",
            "sha3-512",
            "sha3-384",
            "sha3-256",
            "sha3-224",
            "shake-128",
            "shake-256",
            "keccak-224",
            "keccak-256",
            "keccak-384",
            "keccak-512",
            "blake3",
            "dccp",
            "murmur3-128",
            "murmur3-32",
            "ip6",
            "ip6zone",
            "path",
            "multicodec",
            "multihash",
            "multiaddr",
            "multibase",
            "dns",
            "dns4",
            "dns6",
            "dnsaddr",
            "protobuf",
            "cbor",
            "raw",
            "dbl-sha2-256",
            "rlp",
            "bencode",
            "dag-pb",
            "dag-cbor",
            "libp2p-key",
            "git-raw",
            "torrent-info",
            "torrent-file",
            "leofcoin-block",
            "leofcoin-tx",
            "leofcoin-pr",
            "sctp",
            "dag-jose",
            "dag-cose",
            "eth-block",
            "eth-block-list",
            "eth-tx-trie",
            "eth-tx",
            "eth-tx-receipt-trie",
            "eth-tx-receipt",
            "eth-state-trie",
            "eth-account-snapshot",
            "eth-storage-trie",
            "bitcoin-block",
            "bitcoin-tx",
            "bitcoin-witness-commitment",
            "zcash-block",
            "zcash-tx",
            "stellar-block",
            "stellar-tx",
            "md4",
            "md5",
            "bmt",
            "decred-block",
            "decred-tx",
            "ipld-ns",
            "ipfs-ns",
            "swarm-ns",
            "ipns-ns",
            "zeronet",
            "secp256k1-pub",
            "bls12_381-g1-pub",
            "bls12_381-g2-pub",
            "x25519-pub",
            "ed25519-pub",
            "dash-block",
            "dash-tx",
            "swarm-manifest",
            "swarm-feed",
            "udp",
            "p2p-webrtc-star",
            "p2p-webrtc-direct",
            "p2p-stardust",
            "p2p-circuit",
            "dag-json",
            "udt",
            "utp",
            "unix",
            "p2p",
            "ipfs",
            "https",
            "onion",
            "onion3",
            "garlic64",
            "garlic32",
            "tls",
            "quic",
            "ws",
            "wss",
            "p2p-websocket-star",
            "http",
            "json",
            "messagepack",
            "libp2p-peer-record",
            "sha2-256-trunc254-padded",
            "ripemd-128",
            "ripemd-160",
            "ripemd-256",
            "ripemd-320",
            "x11",
            "sm3-256",
            "blake2b-8",
            "blake2b-16",
            "blake2b-24",
            "blake2b-32",
            "blake2b-40",
            "blake2b-48",
            "blake2b-56",
            "blake2b-64",
            "blake2b-72",
            "blake2b-80",
            "blake2b-88",
            "blake2b-96",
            "blake2b-104",
            "blake2b-112",
            "blake2b-120",
            "blake2b-128",
            "blake2b-136",
            "blake2b-144",
            "blake2b-152",
            "blake2b-160",
            "blake2b-168",
            "blake2b-176",
            "blake2b-184",
            "blake2b-192",
            "blake2b-200",
            "blake2b-208",
            "blake2b-216",
            "blake2b-224",
            "blake2b-232",
            "blake2b-240",
            "blake2b-248",
            "blake2b-256",
            "blake2b-264",
            "blake2b-272",
            "blake2b-280",
            "blake2b-288",
            "blake2b-296",
            "blake2b-304",
            "blake2b-312",
            "blake2b-320",
            "blake2b-328",
            "blake2b-336",
            "blake2b-344",
            "blake2b-352",
            "blake2b-360",
            "blake2b-368",
            "blake2b-376",
            "blake2b-384",
            "blake2b-392",
            "blake2b-400",
            "blake2b-408",
            "blake2b-416",
            "blake2b-424",
            "blake2b-432",
            "blake2b-440",
            "blake2b-448",
            "blake2b-456",
            "blake2b-464",
            "blake2b-472",
            "blake2b-480",
            "blake2b-488",
            "blake2b-496",
            "blake2b-504",
            "blake2b-512",
            "blake2s-8",
            "blake2s-16",
            "blake2s-24",
            "blake2s-32",
            "blake2s-40",
            "blake2s-48",
            "blake2s-56",
            "blake2s-64",
            "blake2s-72",
            "blake2s-80",
            "blake2s-88",
            "blake2s-96",
            "blake2s-104",
            "blake2s-112",
            "blake2s-120",
            "blake2s-128",
            "blake2s-136",
            "blake2s-144",
            "blake2s-152",
            "blake2s-160",
            "blake2s-168",
            "blake2s-176",
            "blake2s-184",
            "blake2s-192",
            "blake2s-200",
            "blake2s-208",
            "blake2s-216",
            "blake2s-224",
            "blake2s-232",
            "blake2s-240",
            "blake2s-248",
            "blake2s-256",
            "skein256-8",
            "skein256-16",
            "skein256-24",
            "skein256-32",
            "skein256-40",
            "skein256-48",
            "skein256-56",
            "skein256-64",
            "skein256-72",
            "skein256-80",
            "skein256-88",
            "skein256-96",
            "skein256-104",
            "skein256-112",
            "skein256-120",
            "skein256-128",
            "skein256-136",
            "skein256-144",
            "skein256-152",
            "skein256-160",
            "skein256-168",
            "skein256-176",
            "skein256-184",
            "skein256-192",
            "skein256-200",
            "skein256-208",
            "skein256-216",
            "skein256-224",
            "skein256-232",
            "skein256-240",
            "skein256-248",
            "skein256-256",
            "skein512-8",
            "skein512-16",
            "skein512-24",
            "skein512-32",
            "skein512-40",
            "skein512-48",
            "skein512-56",
            "skein512-64",
            "skein512-72",
            "skein512-80",
            "skein512-88",
            "skein512-96",
            "skein512-104",
            "skein512-112",
            "skein512-120",
            "skein512-128",
            "skein512-136",
            "skein512-144",
            "skein512-152",
            "skein512-160",
            "skein512-168",
            "skein512-176",
            "skein512-184",
            "skein512-192",
            "skein512-200",
            "skein512-208",
            "skein512-216",
            "skein512-224",
            "skein512-232",
            "skein512-240",
            "skein512-248",
            "skein512-256",
            "skein512-264",
            "skein512-272",
            "skein512-280",
            "skein512-288",
            "skein512-296",
            "skein512-304",
            "skein512-312",
            "skein512-320",
            "skein512-328",
            "skein512-336",
            "skein512-344",
            "skein512-352",
            "skein512-360",
            "skein512-368",
            "skein512-376",
            "skein512-384",
            "skein512-392",
            "skein512-400",
            "skein512-408",
            "skein512-416",
            "skein512-424",
            "skein512-432",
            "skein512-440",
            "skein512-448",
            "skein512-456",
            "skein512-464",
            "skein512-472",
            "skein512-480",
            "skein512-488",
            "skein512-496",
            "skein512-504",
            "skein512-512",
            "skein1024-8",
            "skein1024-16",
            "skein1024-24",
            "skein1024-32",
            "skein1024-40",
            "skein1024-48",
            "skein1024-56",
            "skein1024-64",
            "skein1024-72",
            "skein1024-80",
            "skein1024-88",
            "skein1024-96",
            "skein1024-104",
            "skein1024-112",
            "skein1024-120",
            "skein1024-128",
            "skein1024-136",
            "skein1024-144",
            "skein1024-152",
            "skein1024-160",
            "skein1024-168",
            "skein1024-176",
            "skein1024-184",
            "skein1024-192",
            "skein1024-200",
            "skein1024-208",
            "skein1024-216",
            "skein1024-224",
            "skein1024-232",
            "skein1024-240",
            "skein1024-248",
            "skein1024-256",
            "skein1024-264",
            "skein1024-272",
            "skein1024-280",
            "skein1024-288",
            "skein1024-296",
            "skein1024-304",
            "skein1024-312",
            "skein1024-320",
            "skein1024-328",
            "skein1024-336",
            "skein1024-344",
            "skein1024-352",
            "skein1024-360",
            "skein1024-368",
            "skein1024-376",
            "skein1024-384",
            "skein1024-392",
            "skein1024-400",
            "skein1024-408",
            "skein1024-416",
            "skein1024-424",
            "skein1024-432",
            "skein1024-440",
            "skein1024-448",
            "skein1024-456",
            "skein1024-464",
            "skein1024-472",
            "skein1024-480",
            "skein1024-488",
            "skein1024-496",
            "skein1024-504",
            "skein1024-512",
            "skein1024-520",
            "skein1024-528",
            "skein1024-536",
            "skein1024-544",
            "skein1024-552",
            "skein1024-560",
            "skein1024-568",
            "skein1024-576",
            "skein1024-584",
            "skein1024-592",
            "skein1024-600",
            "skein1024-608",
            "skein1024-616",
            "skein1024-624",
            "skein1024-632",
            "skein1024-640",
            "skein1024-648",
            "skein1024-656",
            "skein1024-664",
            "skein1024-672",
            "skein1024-680",
            "skein1024-688",
            "skein1024-696",
            "skein1024-704",
            "skein1024-712",
            "skein1024-720",
            "skein1024-728",
            "skein1024-736",
            "skein1024-744",
            "skein1024-752",
            "skein1024-760",
            "skein1024-768",
            "skein1024-776",
            "skein1024-784",
            "skein1024-792",
            "skein1024-800",
            "skein1024-808",
            "skein1024-816",
            "skein1024-824",
            "skein1024-832",
            "skein1024-840",
            "skein1024-848",
            "skein1024-856",
            "skein1024-864",
            "skein1024-872",
            "skein1024-880",
            "skein1024-888",
            "skein1024-896",
            "skein1024-904",
            "skein1024-912",
            "skein1024-920",
            "skein1024-928",
            "skein1024-936",
            "skein1024-944",
            "skein1024-952",
            "skein1024-960",
            "skein1024-968",
            "skein1024-976",
            "skein1024-984",
            "skein1024-992",
            "skein1024-1000",
            "skein1024-1008",
            "skein1024-1016",
            "skein1024-1024",
            "poseidon-bls12_381-a2-fc1",
            "poseidon-bls12_381-a2-fc1-sc",
            "zeroxcert-imprint-256",
            "fil-commitment-unsealed",
            "fil-commitment-sealed",
            "holochain-adr-v0",
            "holochain-adr-v1",
            "holochain-key-v0",
            "holochain-key-v1",
            "holochain-sig-v0",
            "holochain-sig-v1",
            "default"
          ],
          "optimizationBailout": [],
          "depth": 5,
          "source": "{\n  \"identity\": 0,\n  \"ip4\": 4,\n  \"tcp\": 6,\n  \"sha1\": 17,\n  \"sha2-256\": 18,\n  \"sha2-512\": 19,\n  \"sha3-512\": 20,\n  \"sha3-384\": 21,\n  \"sha3-256\": 22,\n  \"sha3-224\": 23,\n  \"shake-128\": 24,\n  \"shake-256\": 25,\n  \"keccak-224\": 26,\n  \"keccak-256\": 27,\n  \"keccak-384\": 28,\n  \"keccak-512\": 29,\n  \"blake3\": 30,\n  \"dccp\": 33,\n  \"murmur3-128\": 34,\n  \"murmur3-32\": 35,\n  \"ip6\": 41,\n  \"ip6zone\": 42,\n  \"path\": 47,\n  \"multicodec\": 48,\n  \"multihash\": 49,\n  \"multiaddr\": 50,\n  \"multibase\": 51,\n  \"dns\": 53,\n  \"dns4\": 54,\n  \"dns6\": 55,\n  \"dnsaddr\": 56,\n  \"protobuf\": 80,\n  \"cbor\": 81,\n  \"raw\": 85,\n  \"dbl-sha2-256\": 86,\n  \"rlp\": 96,\n  \"bencode\": 99,\n  \"dag-pb\": 112,\n  \"dag-cbor\": 113,\n  \"libp2p-key\": 114,\n  \"git-raw\": 120,\n  \"torrent-info\": 123,\n  \"torrent-file\": 124,\n  \"leofcoin-block\": 129,\n  \"leofcoin-tx\": 130,\n  \"leofcoin-pr\": 131,\n  \"sctp\": 132,\n  \"dag-jose\": 133,\n  \"dag-cose\": 134,\n  \"eth-block\": 144,\n  \"eth-block-list\": 145,\n  \"eth-tx-trie\": 146,\n  \"eth-tx\": 147,\n  \"eth-tx-receipt-trie\": 148,\n  \"eth-tx-receipt\": 149,\n  \"eth-state-trie\": 150,\n  \"eth-account-snapshot\": 151,\n  \"eth-storage-trie\": 152,\n  \"bitcoin-block\": 176,\n  \"bitcoin-tx\": 177,\n  \"bitcoin-witness-commitment\": 178,\n  \"zcash-block\": 192,\n  \"zcash-tx\": 193,\n  \"stellar-block\": 208,\n  \"stellar-tx\": 209,\n  \"md4\": 212,\n  \"md5\": 213,\n  \"bmt\": 214,\n  \"decred-block\": 224,\n  \"decred-tx\": 225,\n  \"ipld-ns\": 226,\n  \"ipfs-ns\": 227,\n  \"swarm-ns\": 228,\n  \"ipns-ns\": 229,\n  \"zeronet\": 230,\n  \"secp256k1-pub\": 231,\n  \"bls12_381-g1-pub\": 234,\n  \"bls12_381-g2-pub\": 235,\n  \"x25519-pub\": 236,\n  \"ed25519-pub\": 237,\n  \"dash-block\": 240,\n  \"dash-tx\": 241,\n  \"swarm-manifest\": 250,\n  \"swarm-feed\": 251,\n  \"udp\": 273,\n  \"p2p-webrtc-star\": 275,\n  \"p2p-webrtc-direct\": 276,\n  \"p2p-stardust\": 277,\n  \"p2p-circuit\": 290,\n  \"dag-json\": 297,\n  \"udt\": 301,\n  \"utp\": 302,\n  \"unix\": 400,\n  \"p2p\": 421,\n  \"ipfs\": 421,\n  \"https\": 443,\n  \"onion\": 444,\n  \"onion3\": 445,\n  \"garlic64\": 446,\n  \"garlic32\": 447,\n  \"tls\": 448,\n  \"quic\": 460,\n  \"ws\": 477,\n  \"wss\": 478,\n  \"p2p-websocket-star\": 479,\n  \"http\": 480,\n  \"json\": 512,\n  \"messagepack\": 513,\n  \"libp2p-peer-record\": 769,\n  \"sha2-256-trunc254-padded\": 4114,\n  \"ripemd-128\": 4178,\n  \"ripemd-160\": 4179,\n  \"ripemd-256\": 4180,\n  \"ripemd-320\": 4181,\n  \"x11\": 4352,\n  \"sm3-256\": 21325,\n  \"blake2b-8\": 45569,\n  \"blake2b-16\": 45570,\n  \"blake2b-24\": 45571,\n  \"blake2b-32\": 45572,\n  \"blake2b-40\": 45573,\n  \"blake2b-48\": 45574,\n  \"blake2b-56\": 45575,\n  \"blake2b-64\": 45576,\n  \"blake2b-72\": 45577,\n  \"blake2b-80\": 45578,\n  \"blake2b-88\": 45579,\n  \"blake2b-96\": 45580,\n  \"blake2b-104\": 45581,\n  \"blake2b-112\": 45582,\n  \"blake2b-120\": 45583,\n  \"blake2b-128\": 45584,\n  \"blake2b-136\": 45585,\n  \"blake2b-144\": 45586,\n  \"blake2b-152\": 45587,\n  \"blake2b-160\": 45588,\n  \"blake2b-168\": 45589,\n  \"blake2b-176\": 45590,\n  \"blake2b-184\": 45591,\n  \"blake2b-192\": 45592,\n  \"blake2b-200\": 45593,\n  \"blake2b-208\": 45594,\n  \"blake2b-216\": 45595,\n  \"blake2b-224\": 45596,\n  \"blake2b-232\": 45597,\n  \"blake2b-240\": 45598,\n  \"blake2b-248\": 45599,\n  \"blake2b-256\": 45600,\n  \"blake2b-264\": 45601,\n  \"blake2b-272\": 45602,\n  \"blake2b-280\": 45603,\n  \"blake2b-288\": 45604,\n  \"blake2b-296\": 45605,\n  \"blake2b-304\": 45606,\n  \"blake2b-312\": 45607,\n  \"blake2b-320\": 45608,\n  \"blake2b-328\": 45609,\n  \"blake2b-336\": 45610,\n  \"blake2b-344\": 45611,\n  \"blake2b-352\": 45612,\n  \"blake2b-360\": 45613,\n  \"blake2b-368\": 45614,\n  \"blake2b-376\": 45615,\n  \"blake2b-384\": 45616,\n  \"blake2b-392\": 45617,\n  \"blake2b-400\": 45618,\n  \"blake2b-408\": 45619,\n  \"blake2b-416\": 45620,\n  \"blake2b-424\": 45621,\n  \"blake2b-432\": 45622,\n  \"blake2b-440\": 45623,\n  \"blake2b-448\": 45624,\n  \"blake2b-456\": 45625,\n  \"blake2b-464\": 45626,\n  \"blake2b-472\": 45627,\n  \"blake2b-480\": 45628,\n  \"blake2b-488\": 45629,\n  \"blake2b-496\": 45630,\n  \"blake2b-504\": 45631,\n  \"blake2b-512\": 45632,\n  \"blake2s-8\": 45633,\n  \"blake2s-16\": 45634,\n  \"blake2s-24\": 45635,\n  \"blake2s-32\": 45636,\n  \"blake2s-40\": 45637,\n  \"blake2s-48\": 45638,\n  \"blake2s-56\": 45639,\n  \"blake2s-64\": 45640,\n  \"blake2s-72\": 45641,\n  \"blake2s-80\": 45642,\n  \"blake2s-88\": 45643,\n  \"blake2s-96\": 45644,\n  \"blake2s-104\": 45645,\n  \"blake2s-112\": 45646,\n  \"blake2s-120\": 45647,\n  \"blake2s-128\": 45648,\n  \"blake2s-136\": 45649,\n  \"blake2s-144\": 45650,\n  \"blake2s-152\": 45651,\n  \"blake2s-160\": 45652,\n  \"blake2s-168\": 45653,\n  \"blake2s-176\": 45654,\n  \"blake2s-184\": 45655,\n  \"blake2s-192\": 45656,\n  \"blake2s-200\": 45657,\n  \"blake2s-208\": 45658,\n  \"blake2s-216\": 45659,\n  \"blake2s-224\": 45660,\n  \"blake2s-232\": 45661,\n  \"blake2s-240\": 45662,\n  \"blake2s-248\": 45663,\n  \"blake2s-256\": 45664,\n  \"skein256-8\": 45825,\n  \"skein256-16\": 45826,\n  \"skein256-24\": 45827,\n  \"skein256-32\": 45828,\n  \"skein256-40\": 45829,\n  \"skein256-48\": 45830,\n  \"skein256-56\": 45831,\n  \"skein256-64\": 45832,\n  \"skein256-72\": 45833,\n  \"skein256-80\": 45834,\n  \"skein256-88\": 45835,\n  \"skein256-96\": 45836,\n  \"skein256-104\": 45837,\n  \"skein256-112\": 45838,\n  \"skein256-120\": 45839,\n  \"skein256-128\": 45840,\n  \"skein256-136\": 45841,\n  \"skein256-144\": 45842,\n  \"skein256-152\": 45843,\n  \"skein256-160\": 45844,\n  \"skein256-168\": 45845,\n  \"skein256-176\": 45846,\n  \"skein256-184\": 45847,\n  \"skein256-192\": 45848,\n  \"skein256-200\": 45849,\n  \"skein256-208\": 45850,\n  \"skein256-216\": 45851,\n  \"skein256-224\": 45852,\n  \"skein256-232\": 45853,\n  \"skein256-240\": 45854,\n  \"skein256-248\": 45855,\n  \"skein256-256\": 45856,\n  \"skein512-8\": 45857,\n  \"skein512-16\": 45858,\n  \"skein512-24\": 45859,\n  \"skein512-32\": 45860,\n  \"skein512-40\": 45861,\n  \"skein512-48\": 45862,\n  \"skein512-56\": 45863,\n  \"skein512-64\": 45864,\n  \"skein512-72\": 45865,\n  \"skein512-80\": 45866,\n  \"skein512-88\": 45867,\n  \"skein512-96\": 45868,\n  \"skein512-104\": 45869,\n  \"skein512-112\": 45870,\n  \"skein512-120\": 45871,\n  \"skein512-128\": 45872,\n  \"skein512-136\": 45873,\n  \"skein512-144\": 45874,\n  \"skein512-152\": 45875,\n  \"skein512-160\": 45876,\n  \"skein512-168\": 45877,\n  \"skein512-176\": 45878,\n  \"skein512-184\": 45879,\n  \"skein512-192\": 45880,\n  \"skein512-200\": 45881,\n  \"skein512-208\": 45882,\n  \"skein512-216\": 45883,\n  \"skein512-224\": 45884,\n  \"skein512-232\": 45885,\n  \"skein512-240\": 45886,\n  \"skein512-248\": 45887,\n  \"skein512-256\": 45888,\n  \"skein512-264\": 45889,\n  \"skein512-272\": 45890,\n  \"skein512-280\": 45891,\n  \"skein512-288\": 45892,\n  \"skein512-296\": 45893,\n  \"skein512-304\": 45894,\n  \"skein512-312\": 45895,\n  \"skein512-320\": 45896,\n  \"skein512-328\": 45897,\n  \"skein512-336\": 45898,\n  \"skein512-344\": 45899,\n  \"skein512-352\": 45900,\n  \"skein512-360\": 45901,\n  \"skein512-368\": 45902,\n  \"skein512-376\": 45903,\n  \"skein512-384\": 45904,\n  \"skein512-392\": 45905,\n  \"skein512-400\": 45906,\n  \"skein512-408\": 45907,\n  \"skein512-416\": 45908,\n  \"skein512-424\": 45909,\n  \"skein512-432\": 45910,\n  \"skein512-440\": 45911,\n  \"skein512-448\": 45912,\n  \"skein512-456\": 45913,\n  \"skein512-464\": 45914,\n  \"skein512-472\": 45915,\n  \"skein512-480\": 45916,\n  \"skein512-488\": 45917,\n  \"skein512-496\": 45918,\n  \"skein512-504\": 45919,\n  \"skein512-512\": 45920,\n  \"skein1024-8\": 45921,\n  \"skein1024-16\": 45922,\n  \"skein1024-24\": 45923,\n  \"skein1024-32\": 45924,\n  \"skein1024-40\": 45925,\n  \"skein1024-48\": 45926,\n  \"skein1024-56\": 45927,\n  \"skein1024-64\": 45928,\n  \"skein1024-72\": 45929,\n  \"skein1024-80\": 45930,\n  \"skein1024-88\": 45931,\n  \"skein1024-96\": 45932,\n  \"skein1024-104\": 45933,\n  \"skein1024-112\": 45934,\n  \"skein1024-120\": 45935,\n  \"skein1024-128\": 45936,\n  \"skein1024-136\": 45937,\n  \"skein1024-144\": 45938,\n  \"skein1024-152\": 45939,\n  \"skein1024-160\": 45940,\n  \"skein1024-168\": 45941,\n  \"skein1024-176\": 45942,\n  \"skein1024-184\": 45943,\n  \"skein1024-192\": 45944,\n  \"skein1024-200\": 45945,\n  \"skein1024-208\": 45946,\n  \"skein1024-216\": 45947,\n  \"skein1024-224\": 45948,\n  \"skein1024-232\": 45949,\n  \"skein1024-240\": 45950,\n  \"skein1024-248\": 45951,\n  \"skein1024-256\": 45952,\n  \"skein1024-264\": 45953,\n  \"skein1024-272\": 45954,\n  \"skein1024-280\": 45955,\n  \"skein1024-288\": 45956,\n  \"skein1024-296\": 45957,\n  \"skein1024-304\": 45958,\n  \"skein1024-312\": 45959,\n  \"skein1024-320\": 45960,\n  \"skein1024-328\": 45961,\n  \"skein1024-336\": 45962,\n  \"skein1024-344\": 45963,\n  \"skein1024-352\": 45964,\n  \"skein1024-360\": 45965,\n  \"skein1024-368\": 45966,\n  \"skein1024-376\": 45967,\n  \"skein1024-384\": 45968,\n  \"skein1024-392\": 45969,\n  \"skein1024-400\": 45970,\n  \"skein1024-408\": 45971,\n  \"skein1024-416\": 45972,\n  \"skein1024-424\": 45973,\n  \"skein1024-432\": 45974,\n  \"skein1024-440\": 45975,\n  \"skein1024-448\": 45976,\n  \"skein1024-456\": 45977,\n  \"skein1024-464\": 45978,\n  \"skein1024-472\": 45979,\n  \"skein1024-480\": 45980,\n  \"skein1024-488\": 45981,\n  \"skein1024-496\": 45982,\n  \"skein1024-504\": 45983,\n  \"skein1024-512\": 45984,\n  \"skein1024-520\": 45985,\n  \"skein1024-528\": 45986,\n  \"skein1024-536\": 45987,\n  \"skein1024-544\": 45988,\n  \"skein1024-552\": 45989,\n  \"skein1024-560\": 45990,\n  \"skein1024-568\": 45991,\n  \"skein1024-576\": 45992,\n  \"skein1024-584\": 45993,\n  \"skein1024-592\": 45994,\n  \"skein1024-600\": 45995,\n  \"skein1024-608\": 45996,\n  \"skein1024-616\": 45997,\n  \"skein1024-624\": 45998,\n  \"skein1024-632\": 45999,\n  \"skein1024-640\": 46000,\n  \"skein1024-648\": 46001,\n  \"skein1024-656\": 46002,\n  \"skein1024-664\": 46003,\n  \"skein1024-672\": 46004,\n  \"skein1024-680\": 46005,\n  \"skein1024-688\": 46006,\n  \"skein1024-696\": 46007,\n  \"skein1024-704\": 46008,\n  \"skein1024-712\": 46009,\n  \"skein1024-720\": 46010,\n  \"skein1024-728\": 46011,\n  \"skein1024-736\": 46012,\n  \"skein1024-744\": 46013,\n  \"skein1024-752\": 46014,\n  \"skein1024-760\": 46015,\n  \"skein1024-768\": 46016,\n  \"skein1024-776\": 46017,\n  \"skein1024-784\": 46018,\n  \"skein1024-792\": 46019,\n  \"skein1024-800\": 46020,\n  \"skein1024-808\": 46021,\n  \"skein1024-816\": 46022,\n  \"skein1024-824\": 46023,\n  \"skein1024-832\": 46024,\n  \"skein1024-840\": 46025,\n  \"skein1024-848\": 46026,\n  \"skein1024-856\": 46027,\n  \"skein1024-864\": 46028,\n  \"skein1024-872\": 46029,\n  \"skein1024-880\": 46030,\n  \"skein1024-888\": 46031,\n  \"skein1024-896\": 46032,\n  \"skein1024-904\": 46033,\n  \"skein1024-912\": 46034,\n  \"skein1024-920\": 46035,\n  \"skein1024-928\": 46036,\n  \"skein1024-936\": 46037,\n  \"skein1024-944\": 46038,\n  \"skein1024-952\": 46039,\n  \"skein1024-960\": 46040,\n  \"skein1024-968\": 46041,\n  \"skein1024-976\": 46042,\n  \"skein1024-984\": 46043,\n  \"skein1024-992\": 46044,\n  \"skein1024-1000\": 46045,\n  \"skein1024-1008\": 46046,\n  \"skein1024-1016\": 46047,\n  \"skein1024-1024\": 46048,\n  \"poseidon-bls12_381-a2-fc1\": 46081,\n  \"poseidon-bls12_381-a2-fc1-sc\": 46082,\n  \"zeroxcert-imprint-256\": 52753,\n  \"fil-commitment-unsealed\": 61697,\n  \"fil-commitment-sealed\": 61698,\n  \"holochain-adr-v0\": 8417572,\n  \"holochain-adr-v1\": 8483108,\n  \"holochain-key-v0\": 9728292,\n  \"holochain-key-v1\": 9793828,\n  \"holochain-sig-v0\": 10645796,\n  \"holochain-sig-v1\": 10711332\n}"
        },
        {
          "id": "./node_modules/multicodec/src/constants.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/constants.js",
          "name": "./node_modules/multicodec/src/constants.js",
          "index": 39,
          "index2": 30,
          "size": 268,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
          "issuerId": "./node_modules/multicodec/src/index.js",
          "issuerName": "./node_modules/multicodec/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/cids/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
              "name": "./node_modules/cids/src/index.js"
            },
            {
              "id": "./node_modules/multicodec/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
              "name": "./node_modules/multicodec/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/multicodec/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
              "module": "./node_modules/multicodec/src/index.js",
              "moduleName": "./node_modules/multicodec/src/index.js",
              "type": "cjs require",
              "userRequest": "./constants",
              "loc": "123:18-40"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 6,
          "source": "'use strict'\n\nconst table = require('./base-table.json')\n\n// map for codecConstant -> code\nconst constants = {}\n\nfor (const [name, code] of Object.entries(table)) {\n  constants[name.toUpperCase().replace(/-/g, '_')] = code\n}\n\nmodule.exports = Object.freeze(constants)\n"
        },
        {
          "id": "./node_modules/multicodec/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
          "name": "./node_modules/multicodec/src/index.js",
          "index": 34,
          "index2": 32,
          "size": 2865,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "issuerId": "./node_modules/cids/src/index.js",
          "issuerName": "./node_modules/cids/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/cids/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
              "name": "./node_modules/cids/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/cids/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
              "module": "./node_modules/cids/src/index.js",
              "moduleName": "./node_modules/cids/src/index.js",
              "type": "cjs require",
              "userRequest": "multicodec",
              "loc": "6:19-40"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 5,
          "source": "/**\n * Implementation of the multicodec specification.\n *\n * @module multicodec\n * @example\n * const multicodec = require('multicodec')\n *\n * const prefixedProtobuf = multicodec.addPrefix('protobuf', protobufBuffer)\n * // prefixedProtobuf 0x50...\n *\n */\n'use strict'\n\nconst { Buffer } = require('buffer')\nconst varint = require('varint')\nconst intTable = require('./int-table')\nconst codecNameToCodeVarint = require('./varint-table')\nconst util = require('./util')\n\nexports = module.exports\n\n/**\n * Prefix a buffer with a multicodec-packed.\n *\n * @param {string|number} multicodecStrOrCode\n * @param {Buffer} data\n * @returns {Buffer}\n */\nexports.addPrefix = (multicodecStrOrCode, data) => {\n  let prefix\n\n  if (Buffer.isBuffer(multicodecStrOrCode)) {\n    prefix = util.varintBufferEncode(multicodecStrOrCode)\n  } else {\n    if (codecNameToCodeVarint[multicodecStrOrCode]) {\n      prefix = codecNameToCodeVarint[multicodecStrOrCode]\n    } else {\n      throw new Error('multicodec not recognized')\n    }\n  }\n  return Buffer.concat([prefix, data])\n}\n\n/**\n * Decapsulate the multicodec-packed prefix from the data.\n *\n * @param {Buffer} data\n * @returns {Buffer}\n */\nexports.rmPrefix = (data) => {\n  varint.decode(data)\n  return data.slice(varint.decode.bytes)\n}\n\n/**\n * Get the codec of the prefixed data.\n * @param {Buffer} prefixedData\n * @returns {string}\n */\nexports.getCodec = (prefixedData) => {\n  const code = varint.decode(prefixedData)\n  const codecName = intTable.get(code)\n  if (codecName === undefined) {\n    throw new Error(`Code ${code} not found`)\n  }\n  return codecName\n}\n\n/**\n * Get the name of the codec.\n * @param {number} codec\n * @returns {string}\n */\nexports.getName = (codec) => {\n  return intTable.get(codec)\n}\n\n/**\n * Get the code of the codec\n * @param {string} name\n * @returns {number}\n */\nexports.getNumber = (name) => {\n  const code = codecNameToCodeVarint[name]\n  if (code === undefined) {\n    throw new Error('Codec `' + name + '` not found')\n  }\n  return util.varintBufferDecode(code)[0]\n}\n\n/**\n * Get the code of the prefixed data.\n * @param {Buffer} prefixedData\n * @returns {number}\n */\nexports.getCode = (prefixedData) => {\n  return varint.decode(prefixedData)\n}\n\n/**\n * Get the code as varint of a codec name.\n * @param {string} codecName\n * @returns {Buffer}\n */\nexports.getCodeVarint = (codecName) => {\n  const code = codecNameToCodeVarint[codecName]\n  if (code === undefined) {\n    throw new Error('Codec `' + codecName + '` not found')\n  }\n  return code\n}\n\n/**\n * Get the varint of a code.\n * @param {Number} code\n * @returns {Array.<number>}\n */\nexports.getVarint = (code) => {\n  return varint.encode(code)\n}\n\n// Make the constants top-level constants\nconst constants = require('./constants')\nObject.assign(exports, constants)\n\n// Human friendly names for printing, e.g. in error messages\nexports.print = require('./print')\n"
        },
        {
          "id": "./node_modules/multicodec/src/int-table.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/int-table.js",
          "name": "./node_modules/multicodec/src/int-table.js",
          "index": 35,
          "index2": 27,
          "size": 284,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
          "issuerId": "./node_modules/multicodec/src/index.js",
          "issuerName": "./node_modules/multicodec/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/cids/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
              "name": "./node_modules/cids/src/index.js"
            },
            {
              "id": "./node_modules/multicodec/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
              "name": "./node_modules/multicodec/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/multicodec/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
              "module": "./node_modules/multicodec/src/index.js",
              "moduleName": "./node_modules/multicodec/src/index.js",
              "type": "cjs require",
              "userRequest": "./int-table",
              "loc": "16:17-39"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 6,
          "source": "'use strict'\nconst baseTable = require('./base-table.json')\n\n// map for hexString -> codecName\nconst nameTable = new Map()\n\nfor (const encodingName in baseTable) {\n  const code = baseTable[encodingName]\n  nameTable.set(code, encodingName)\n}\n\nmodule.exports = Object.freeze(nameTable)\n"
        },
        {
          "id": "./node_modules/multicodec/src/print.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/print.js",
          "name": "./node_modules/multicodec/src/print.js",
          "index": 40,
          "index2": 31,
          "size": 284,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
          "issuerId": "./node_modules/multicodec/src/index.js",
          "issuerName": "./node_modules/multicodec/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/cids/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
              "name": "./node_modules/cids/src/index.js"
            },
            {
              "id": "./node_modules/multicodec/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
              "name": "./node_modules/multicodec/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/multicodec/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
              "module": "./node_modules/multicodec/src/index.js",
              "moduleName": "./node_modules/multicodec/src/index.js",
              "type": "cjs require",
              "userRequest": "./print",
              "loc": "127:16-34"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 6,
          "source": "'use strict'\n\nconst table = require('./base-table.json')\n\n// map for code -> print friendly name\nconst tableByCode = {}\n\nfor (const [name, code] of Object.entries(table)) {\n  if (tableByCode[code] === undefined) tableByCode[code] = name\n}\n\nmodule.exports = Object.freeze(tableByCode)\n"
        },
        {
          "id": "./node_modules/multicodec/src/util.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/util.js",
          "name": "./node_modules/multicodec/src/util.js",
          "index": 38,
          "index2": 28,
          "size": 720,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
          "issuerId": "./node_modules/multicodec/src/index.js",
          "issuerName": "./node_modules/multicodec/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/cids/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
              "name": "./node_modules/cids/src/index.js"
            },
            {
              "id": "./node_modules/multicodec/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
              "name": "./node_modules/multicodec/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/multicodec/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
              "module": "./node_modules/multicodec/src/index.js",
              "moduleName": "./node_modules/multicodec/src/index.js",
              "type": "cjs require",
              "userRequest": "./util",
              "loc": "18:13-30"
            },
            {
              "moduleId": "./node_modules/multicodec/src/varint-table.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/varint-table.js",
              "module": "./node_modules/multicodec/src/varint-table.js",
              "moduleName": "./node_modules/multicodec/src/varint-table.js",
              "type": "cjs require",
              "userRequest": "./util",
              "loc": "4:21-38"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 6,
          "source": "'use strict'\nconst varint = require('varint')\nconst { Buffer } = require('buffer')\n\nmodule.exports = {\n  numberToBuffer,\n  bufferToNumber,\n  varintBufferEncode,\n  varintBufferDecode,\n  varintEncode\n}\n\nfunction bufferToNumber (buf) {\n  return parseInt(buf.toString('hex'), 16)\n}\n\nfunction numberToBuffer (num) {\n  let hexString = num.toString(16)\n  if (hexString.length % 2 === 1) {\n    hexString = '0' + hexString\n  }\n  return Buffer.from(hexString, 'hex')\n}\n\nfunction varintBufferEncode (input) {\n  return Buffer.from(varint.encode(bufferToNumber(input)))\n}\n\nfunction varintBufferDecode (input) {\n  return numberToBuffer(varint.decode(input))\n}\n\nfunction varintEncode (num) {\n  return Buffer.from(varint.encode(num))\n}\n"
        },
        {
          "id": "./node_modules/multicodec/src/varint-table.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/varint-table.js",
          "name": "./node_modules/multicodec/src/varint-table.js",
          "index": 37,
          "index2": 29,
          "size": 354,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
          "issuerId": "./node_modules/multicodec/src/index.js",
          "issuerName": "./node_modules/multicodec/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/cids/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
              "name": "./node_modules/cids/src/index.js"
            },
            {
              "id": "./node_modules/multicodec/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
              "name": "./node_modules/multicodec/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/multicodec/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
              "module": "./node_modules/multicodec/src/index.js",
              "moduleName": "./node_modules/multicodec/src/index.js",
              "type": "cjs require",
              "userRequest": "./varint-table",
              "loc": "17:30-55"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 6,
          "source": "'use strict'\n\nconst baseTable = require('./base-table.json')\nconst varintEncode = require('./util').varintEncode\n\n// map for codecName -> codeVarintBuffer\nconst varintTable = {}\n\nfor (const encodingName in baseTable) {\n  const code = baseTable[encodingName]\n  varintTable[encodingName] = varintEncode(code)\n}\n\nmodule.exports = Object.freeze(varintTable)\n"
        },
        {
          "id": "./node_modules/multihashes/src/constants.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/constants.js",
          "name": "./node_modules/multihashes/src/constants.js",
          "index": 25,
          "index2": 20,
          "size": 22947,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
          "issuerId": "./node_modules/multihashes/src/index.js",
          "issuerName": "./node_modules/multihashes/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/multihashes/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
              "name": "./node_modules/multihashes/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/multihashes/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
              "module": "./node_modules/multihashes/src/index.js",
              "moduleName": "./node_modules/multihashes/src/index.js",
              "type": "cjs require",
              "userRequest": "./constants",
              "loc": "11:11-33"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 5,
          "source": "/* eslint quote-props: off */\n/* eslint key-spacing: off */\n'use strict'\n\nexports.names = Object.freeze({\n  'identity':   0x0,\n  'sha1':       0x11,\n  'sha2-256':   0x12,\n  'sha2-512':   0x13,\n  'dbl-sha2-256': 0x56,\n  'sha3-224':   0x17,\n  'sha3-256':   0x16,\n  'sha3-384':   0x15,\n  'sha3-512':   0x14,\n  'shake-128':  0x18,\n  'shake-256':  0x19,\n  'keccak-224': 0x1A,\n  'keccak-256': 0x1B,\n  'keccak-384': 0x1C,\n  'keccak-512': 0x1D,\n  'murmur3-128': 0x22,\n  'murmur3-32':  0x23,\n  'md4':         0xd4,\n  'md5':         0xd5,\n  'blake2b-8':   0xb201,\n  'blake2b-16':  0xb202,\n  'blake2b-24':  0xb203,\n  'blake2b-32':  0xb204,\n  'blake2b-40':  0xb205,\n  'blake2b-48':  0xb206,\n  'blake2b-56':  0xb207,\n  'blake2b-64':  0xb208,\n  'blake2b-72':  0xb209,\n  'blake2b-80':  0xb20a,\n  'blake2b-88':  0xb20b,\n  'blake2b-96':  0xb20c,\n  'blake2b-104': 0xb20d,\n  'blake2b-112': 0xb20e,\n  'blake2b-120': 0xb20f,\n  'blake2b-128': 0xb210,\n  'blake2b-136': 0xb211,\n  'blake2b-144': 0xb212,\n  'blake2b-152': 0xb213,\n  'blake2b-160': 0xb214,\n  'blake2b-168': 0xb215,\n  'blake2b-176': 0xb216,\n  'blake2b-184': 0xb217,\n  'blake2b-192': 0xb218,\n  'blake2b-200': 0xb219,\n  'blake2b-208': 0xb21a,\n  'blake2b-216': 0xb21b,\n  'blake2b-224': 0xb21c,\n  'blake2b-232': 0xb21d,\n  'blake2b-240': 0xb21e,\n  'blake2b-248': 0xb21f,\n  'blake2b-256': 0xb220,\n  'blake2b-264': 0xb221,\n  'blake2b-272': 0xb222,\n  'blake2b-280': 0xb223,\n  'blake2b-288': 0xb224,\n  'blake2b-296': 0xb225,\n  'blake2b-304': 0xb226,\n  'blake2b-312': 0xb227,\n  'blake2b-320': 0xb228,\n  'blake2b-328': 0xb229,\n  'blake2b-336': 0xb22a,\n  'blake2b-344': 0xb22b,\n  'blake2b-352': 0xb22c,\n  'blake2b-360': 0xb22d,\n  'blake2b-368': 0xb22e,\n  'blake2b-376': 0xb22f,\n  'blake2b-384': 0xb230,\n  'blake2b-392': 0xb231,\n  'blake2b-400': 0xb232,\n  'blake2b-408': 0xb233,\n  'blake2b-416': 0xb234,\n  'blake2b-424': 0xb235,\n  'blake2b-432': 0xb236,\n  'blake2b-440': 0xb237,\n  'blake2b-448': 0xb238,\n  'blake2b-456': 0xb239,\n  'blake2b-464': 0xb23a,\n  'blake2b-472': 0xb23b,\n  'blake2b-480': 0xb23c,\n  'blake2b-488': 0xb23d,\n  'blake2b-496': 0xb23e,\n  'blake2b-504': 0xb23f,\n  'blake2b-512': 0xb240,\n  'blake2s-8':   0xb241,\n  'blake2s-16':  0xb242,\n  'blake2s-24':  0xb243,\n  'blake2s-32':  0xb244,\n  'blake2s-40':  0xb245,\n  'blake2s-48':  0xb246,\n  'blake2s-56':  0xb247,\n  'blake2s-64':  0xb248,\n  'blake2s-72':  0xb249,\n  'blake2s-80':  0xb24a,\n  'blake2s-88':  0xb24b,\n  'blake2s-96':  0xb24c,\n  'blake2s-104': 0xb24d,\n  'blake2s-112': 0xb24e,\n  'blake2s-120': 0xb24f,\n  'blake2s-128': 0xb250,\n  'blake2s-136': 0xb251,\n  'blake2s-144': 0xb252,\n  'blake2s-152': 0xb253,\n  'blake2s-160': 0xb254,\n  'blake2s-168': 0xb255,\n  'blake2s-176': 0xb256,\n  'blake2s-184': 0xb257,\n  'blake2s-192': 0xb258,\n  'blake2s-200': 0xb259,\n  'blake2s-208': 0xb25a,\n  'blake2s-216': 0xb25b,\n  'blake2s-224': 0xb25c,\n  'blake2s-232': 0xb25d,\n  'blake2s-240': 0xb25e,\n  'blake2s-248': 0xb25f,\n  'blake2s-256': 0xb260,\n  'Skein256-8': 0xb301,\n  'Skein256-16': 0xb302,\n  'Skein256-24': 0xb303,\n  'Skein256-32': 0xb304,\n  'Skein256-40': 0xb305,\n  'Skein256-48': 0xb306,\n  'Skein256-56': 0xb307,\n  'Skein256-64': 0xb308,\n  'Skein256-72': 0xb309,\n  'Skein256-80': 0xb30a,\n  'Skein256-88': 0xb30b,\n  'Skein256-96': 0xb30c,\n  'Skein256-104': 0xb30d,\n  'Skein256-112': 0xb30e,\n  'Skein256-120': 0xb30f,\n  'Skein256-128': 0xb310,\n  'Skein256-136': 0xb311,\n  'Skein256-144': 0xb312,\n  'Skein256-152': 0xb313,\n  'Skein256-160': 0xb314,\n  'Skein256-168': 0xb315,\n  'Skein256-176': 0xb316,\n  'Skein256-184': 0xb317,\n  'Skein256-192': 0xb318,\n  'Skein256-200': 0xb319,\n  'Skein256-208': 0xb31a,\n  'Skein256-216': 0xb31b,\n  'Skein256-224': 0xb31c,\n  'Skein256-232': 0xb31d,\n  'Skein256-240': 0xb31e,\n  'Skein256-248': 0xb31f,\n  'Skein256-256': 0xb320,\n  'Skein512-8': 0xb321,\n  'Skein512-16': 0xb322,\n  'Skein512-24': 0xb323,\n  'Skein512-32': 0xb324,\n  'Skein512-40': 0xb325,\n  'Skein512-48': 0xb326,\n  'Skein512-56': 0xb327,\n  'Skein512-64': 0xb328,\n  'Skein512-72': 0xb329,\n  'Skein512-80': 0xb32a,\n  'Skein512-88': 0xb32b,\n  'Skein512-96': 0xb32c,\n  'Skein512-104': 0xb32d,\n  'Skein512-112': 0xb32e,\n  'Skein512-120': 0xb32f,\n  'Skein512-128': 0xb330,\n  'Skein512-136': 0xb331,\n  'Skein512-144': 0xb332,\n  'Skein512-152': 0xb333,\n  'Skein512-160': 0xb334,\n  'Skein512-168': 0xb335,\n  'Skein512-176': 0xb336,\n  'Skein512-184': 0xb337,\n  'Skein512-192': 0xb338,\n  'Skein512-200': 0xb339,\n  'Skein512-208': 0xb33a,\n  'Skein512-216': 0xb33b,\n  'Skein512-224': 0xb33c,\n  'Skein512-232': 0xb33d,\n  'Skein512-240': 0xb33e,\n  'Skein512-248': 0xb33f,\n  'Skein512-256': 0xb340,\n  'Skein512-264': 0xb341,\n  'Skein512-272': 0xb342,\n  'Skein512-280': 0xb343,\n  'Skein512-288': 0xb344,\n  'Skein512-296': 0xb345,\n  'Skein512-304': 0xb346,\n  'Skein512-312': 0xb347,\n  'Skein512-320': 0xb348,\n  'Skein512-328': 0xb349,\n  'Skein512-336': 0xb34a,\n  'Skein512-344': 0xb34b,\n  'Skein512-352': 0xb34c,\n  'Skein512-360': 0xb34d,\n  'Skein512-368': 0xb34e,\n  'Skein512-376': 0xb34f,\n  'Skein512-384': 0xb350,\n  'Skein512-392': 0xb351,\n  'Skein512-400': 0xb352,\n  'Skein512-408': 0xb353,\n  'Skein512-416': 0xb354,\n  'Skein512-424': 0xb355,\n  'Skein512-432': 0xb356,\n  'Skein512-440': 0xb357,\n  'Skein512-448': 0xb358,\n  'Skein512-456': 0xb359,\n  'Skein512-464': 0xb35a,\n  'Skein512-472': 0xb35b,\n  'Skein512-480': 0xb35c,\n  'Skein512-488': 0xb35d,\n  'Skein512-496': 0xb35e,\n  'Skein512-504': 0xb35f,\n  'Skein512-512': 0xb360,\n  'Skein1024-8': 0xb361,\n  'Skein1024-16': 0xb362,\n  'Skein1024-24': 0xb363,\n  'Skein1024-32': 0xb364,\n  'Skein1024-40': 0xb365,\n  'Skein1024-48': 0xb366,\n  'Skein1024-56': 0xb367,\n  'Skein1024-64': 0xb368,\n  'Skein1024-72': 0xb369,\n  'Skein1024-80': 0xb36a,\n  'Skein1024-88': 0xb36b,\n  'Skein1024-96': 0xb36c,\n  'Skein1024-104': 0xb36d,\n  'Skein1024-112': 0xb36e,\n  'Skein1024-120': 0xb36f,\n  'Skein1024-128': 0xb370,\n  'Skein1024-136': 0xb371,\n  'Skein1024-144': 0xb372,\n  'Skein1024-152': 0xb373,\n  'Skein1024-160': 0xb374,\n  'Skein1024-168': 0xb375,\n  'Skein1024-176': 0xb376,\n  'Skein1024-184': 0xb377,\n  'Skein1024-192': 0xb378,\n  'Skein1024-200': 0xb379,\n  'Skein1024-208': 0xb37a,\n  'Skein1024-216': 0xb37b,\n  'Skein1024-224': 0xb37c,\n  'Skein1024-232': 0xb37d,\n  'Skein1024-240': 0xb37e,\n  'Skein1024-248': 0xb37f,\n  'Skein1024-256': 0xb380,\n  'Skein1024-264': 0xb381,\n  'Skein1024-272': 0xb382,\n  'Skein1024-280': 0xb383,\n  'Skein1024-288': 0xb384,\n  'Skein1024-296': 0xb385,\n  'Skein1024-304': 0xb386,\n  'Skein1024-312': 0xb387,\n  'Skein1024-320': 0xb388,\n  'Skein1024-328': 0xb389,\n  'Skein1024-336': 0xb38a,\n  'Skein1024-344': 0xb38b,\n  'Skein1024-352': 0xb38c,\n  'Skein1024-360': 0xb38d,\n  'Skein1024-368': 0xb38e,\n  'Skein1024-376': 0xb38f,\n  'Skein1024-384': 0xb390,\n  'Skein1024-392': 0xb391,\n  'Skein1024-400': 0xb392,\n  'Skein1024-408': 0xb393,\n  'Skein1024-416': 0xb394,\n  'Skein1024-424': 0xb395,\n  'Skein1024-432': 0xb396,\n  'Skein1024-440': 0xb397,\n  'Skein1024-448': 0xb398,\n  'Skein1024-456': 0xb399,\n  'Skein1024-464': 0xb39a,\n  'Skein1024-472': 0xb39b,\n  'Skein1024-480': 0xb39c,\n  'Skein1024-488': 0xb39d,\n  'Skein1024-496': 0xb39e,\n  'Skein1024-504': 0xb39f,\n  'Skein1024-512': 0xb3a0,\n  'Skein1024-520': 0xb3a1,\n  'Skein1024-528': 0xb3a2,\n  'Skein1024-536': 0xb3a3,\n  'Skein1024-544': 0xb3a4,\n  'Skein1024-552': 0xb3a5,\n  'Skein1024-560': 0xb3a6,\n  'Skein1024-568': 0xb3a7,\n  'Skein1024-576': 0xb3a8,\n  'Skein1024-584': 0xb3a9,\n  'Skein1024-592': 0xb3aa,\n  'Skein1024-600': 0xb3ab,\n  'Skein1024-608': 0xb3ac,\n  'Skein1024-616': 0xb3ad,\n  'Skein1024-624': 0xb3ae,\n  'Skein1024-632': 0xb3af,\n  'Skein1024-640': 0xb3b0,\n  'Skein1024-648': 0xb3b1,\n  'Skein1024-656': 0xb3b2,\n  'Skein1024-664': 0xb3b3,\n  'Skein1024-672': 0xb3b4,\n  'Skein1024-680': 0xb3b5,\n  'Skein1024-688': 0xb3b6,\n  'Skein1024-696': 0xb3b7,\n  'Skein1024-704': 0xb3b8,\n  'Skein1024-712': 0xb3b9,\n  'Skein1024-720': 0xb3ba,\n  'Skein1024-728': 0xb3bb,\n  'Skein1024-736': 0xb3bc,\n  'Skein1024-744': 0xb3bd,\n  'Skein1024-752': 0xb3be,\n  'Skein1024-760': 0xb3bf,\n  'Skein1024-768': 0xb3c0,\n  'Skein1024-776': 0xb3c1,\n  'Skein1024-784': 0xb3c2,\n  'Skein1024-792': 0xb3c3,\n  'Skein1024-800': 0xb3c4,\n  'Skein1024-808': 0xb3c5,\n  'Skein1024-816': 0xb3c6,\n  'Skein1024-824': 0xb3c7,\n  'Skein1024-832': 0xb3c8,\n  'Skein1024-840': 0xb3c9,\n  'Skein1024-848': 0xb3ca,\n  'Skein1024-856': 0xb3cb,\n  'Skein1024-864': 0xb3cc,\n  'Skein1024-872': 0xb3cd,\n  'Skein1024-880': 0xb3ce,\n  'Skein1024-888': 0xb3cf,\n  'Skein1024-896': 0xb3d0,\n  'Skein1024-904': 0xb3d1,\n  'Skein1024-912': 0xb3d2,\n  'Skein1024-920': 0xb3d3,\n  'Skein1024-928': 0xb3d4,\n  'Skein1024-936': 0xb3d5,\n  'Skein1024-944': 0xb3d6,\n  'Skein1024-952': 0xb3d7,\n  'Skein1024-960': 0xb3d8,\n  'Skein1024-968': 0xb3d9,\n  'Skein1024-976': 0xb3da,\n  'Skein1024-984': 0xb3db,\n  'Skein1024-992': 0xb3dc,\n  'Skein1024-1000': 0xb3dd,\n  'Skein1024-1008': 0xb3de,\n  'Skein1024-1016': 0xb3df,\n  'Skein1024-1024': 0xb3e0\n})\n\nexports.codes = Object.freeze({\n  0x0: 'identity',\n\n  // sha family\n  0x11: 'sha1',\n  0x12: 'sha2-256',\n  0x13: 'sha2-512',\n  0x56: 'dbl-sha2-256',\n  0x17: 'sha3-224',\n  0x16: 'sha3-256',\n  0x15: 'sha3-384',\n  0x14: 'sha3-512',\n  0x18: 'shake-128',\n  0x19: 'shake-256',\n  0x1A: 'keccak-224',\n  0x1B: 'keccak-256',\n  0x1C: 'keccak-384',\n  0x1D: 'keccak-512',\n\n  0x22: 'murmur3-128',\n  0x23: 'murmur3-32',\n\n  0xd4: 'md4',\n  0xd5: 'md5',\n\n  // blake2\n  0xb201: 'blake2b-8',\n  0xb202: 'blake2b-16',\n  0xb203: 'blake2b-24',\n  0xb204: 'blake2b-32',\n  0xb205: 'blake2b-40',\n  0xb206: 'blake2b-48',\n  0xb207: 'blake2b-56',\n  0xb208: 'blake2b-64',\n  0xb209: 'blake2b-72',\n  0xb20a: 'blake2b-80',\n  0xb20b: 'blake2b-88',\n  0xb20c: 'blake2b-96',\n  0xb20d: 'blake2b-104',\n  0xb20e: 'blake2b-112',\n  0xb20f: 'blake2b-120',\n  0xb210: 'blake2b-128',\n  0xb211: 'blake2b-136',\n  0xb212: 'blake2b-144',\n  0xb213: 'blake2b-152',\n  0xb214: 'blake2b-160',\n  0xb215: 'blake2b-168',\n  0xb216: 'blake2b-176',\n  0xb217: 'blake2b-184',\n  0xb218: 'blake2b-192',\n  0xb219: 'blake2b-200',\n  0xb21a: 'blake2b-208',\n  0xb21b: 'blake2b-216',\n  0xb21c: 'blake2b-224',\n  0xb21d: 'blake2b-232',\n  0xb21e: 'blake2b-240',\n  0xb21f: 'blake2b-248',\n  0xb220: 'blake2b-256',\n  0xb221: 'blake2b-264',\n  0xb222: 'blake2b-272',\n  0xb223: 'blake2b-280',\n  0xb224: 'blake2b-288',\n  0xb225: 'blake2b-296',\n  0xb226: 'blake2b-304',\n  0xb227: 'blake2b-312',\n  0xb228: 'blake2b-320',\n  0xb229: 'blake2b-328',\n  0xb22a: 'blake2b-336',\n  0xb22b: 'blake2b-344',\n  0xb22c: 'blake2b-352',\n  0xb22d: 'blake2b-360',\n  0xb22e: 'blake2b-368',\n  0xb22f: 'blake2b-376',\n  0xb230: 'blake2b-384',\n  0xb231: 'blake2b-392',\n  0xb232: 'blake2b-400',\n  0xb233: 'blake2b-408',\n  0xb234: 'blake2b-416',\n  0xb235: 'blake2b-424',\n  0xb236: 'blake2b-432',\n  0xb237: 'blake2b-440',\n  0xb238: 'blake2b-448',\n  0xb239: 'blake2b-456',\n  0xb23a: 'blake2b-464',\n  0xb23b: 'blake2b-472',\n  0xb23c: 'blake2b-480',\n  0xb23d: 'blake2b-488',\n  0xb23e: 'blake2b-496',\n  0xb23f: 'blake2b-504',\n  0xb240: 'blake2b-512',\n  0xb241: 'blake2s-8',\n  0xb242: 'blake2s-16',\n  0xb243: 'blake2s-24',\n  0xb244: 'blake2s-32',\n  0xb245: 'blake2s-40',\n  0xb246: 'blake2s-48',\n  0xb247: 'blake2s-56',\n  0xb248: 'blake2s-64',\n  0xb249: 'blake2s-72',\n  0xb24a: 'blake2s-80',\n  0xb24b: 'blake2s-88',\n  0xb24c: 'blake2s-96',\n  0xb24d: 'blake2s-104',\n  0xb24e: 'blake2s-112',\n  0xb24f: 'blake2s-120',\n  0xb250: 'blake2s-128',\n  0xb251: 'blake2s-136',\n  0xb252: 'blake2s-144',\n  0xb253: 'blake2s-152',\n  0xb254: 'blake2s-160',\n  0xb255: 'blake2s-168',\n  0xb256: 'blake2s-176',\n  0xb257: 'blake2s-184',\n  0xb258: 'blake2s-192',\n  0xb259: 'blake2s-200',\n  0xb25a: 'blake2s-208',\n  0xb25b: 'blake2s-216',\n  0xb25c: 'blake2s-224',\n  0xb25d: 'blake2s-232',\n  0xb25e: 'blake2s-240',\n  0xb25f: 'blake2s-248',\n  0xb260: 'blake2s-256',\n\n  // skein\n  0xb301: 'Skein256-8',\n  0xb302: 'Skein256-16',\n  0xb303: 'Skein256-24',\n  0xb304: 'Skein256-32',\n  0xb305: 'Skein256-40',\n  0xb306: 'Skein256-48',\n  0xb307: 'Skein256-56',\n  0xb308: 'Skein256-64',\n  0xb309: 'Skein256-72',\n  0xb30a: 'Skein256-80',\n  0xb30b: 'Skein256-88',\n  0xb30c: 'Skein256-96',\n  0xb30d: 'Skein256-104',\n  0xb30e: 'Skein256-112',\n  0xb30f: 'Skein256-120',\n  0xb310: 'Skein256-128',\n  0xb311: 'Skein256-136',\n  0xb312: 'Skein256-144',\n  0xb313: 'Skein256-152',\n  0xb314: 'Skein256-160',\n  0xb315: 'Skein256-168',\n  0xb316: 'Skein256-176',\n  0xb317: 'Skein256-184',\n  0xb318: 'Skein256-192',\n  0xb319: 'Skein256-200',\n  0xb31a: 'Skein256-208',\n  0xb31b: 'Skein256-216',\n  0xb31c: 'Skein256-224',\n  0xb31d: 'Skein256-232',\n  0xb31e: 'Skein256-240',\n  0xb31f: 'Skein256-248',\n  0xb320: 'Skein256-256',\n  0xb321: 'Skein512-8',\n  0xb322: 'Skein512-16',\n  0xb323: 'Skein512-24',\n  0xb324: 'Skein512-32',\n  0xb325: 'Skein512-40',\n  0xb326: 'Skein512-48',\n  0xb327: 'Skein512-56',\n  0xb328: 'Skein512-64',\n  0xb329: 'Skein512-72',\n  0xb32a: 'Skein512-80',\n  0xb32b: 'Skein512-88',\n  0xb32c: 'Skein512-96',\n  0xb32d: 'Skein512-104',\n  0xb32e: 'Skein512-112',\n  0xb32f: 'Skein512-120',\n  0xb330: 'Skein512-128',\n  0xb331: 'Skein512-136',\n  0xb332: 'Skein512-144',\n  0xb333: 'Skein512-152',\n  0xb334: 'Skein512-160',\n  0xb335: 'Skein512-168',\n  0xb336: 'Skein512-176',\n  0xb337: 'Skein512-184',\n  0xb338: 'Skein512-192',\n  0xb339: 'Skein512-200',\n  0xb33a: 'Skein512-208',\n  0xb33b: 'Skein512-216',\n  0xb33c: 'Skein512-224',\n  0xb33d: 'Skein512-232',\n  0xb33e: 'Skein512-240',\n  0xb33f: 'Skein512-248',\n  0xb340: 'Skein512-256',\n  0xb341: 'Skein512-264',\n  0xb342: 'Skein512-272',\n  0xb343: 'Skein512-280',\n  0xb344: 'Skein512-288',\n  0xb345: 'Skein512-296',\n  0xb346: 'Skein512-304',\n  0xb347: 'Skein512-312',\n  0xb348: 'Skein512-320',\n  0xb349: 'Skein512-328',\n  0xb34a: 'Skein512-336',\n  0xb34b: 'Skein512-344',\n  0xb34c: 'Skein512-352',\n  0xb34d: 'Skein512-360',\n  0xb34e: 'Skein512-368',\n  0xb34f: 'Skein512-376',\n  0xb350: 'Skein512-384',\n  0xb351: 'Skein512-392',\n  0xb352: 'Skein512-400',\n  0xb353: 'Skein512-408',\n  0xb354: 'Skein512-416',\n  0xb355: 'Skein512-424',\n  0xb356: 'Skein512-432',\n  0xb357: 'Skein512-440',\n  0xb358: 'Skein512-448',\n  0xb359: 'Skein512-456',\n  0xb35a: 'Skein512-464',\n  0xb35b: 'Skein512-472',\n  0xb35c: 'Skein512-480',\n  0xb35d: 'Skein512-488',\n  0xb35e: 'Skein512-496',\n  0xb35f: 'Skein512-504',\n  0xb360: 'Skein512-512',\n  0xb361: 'Skein1024-8',\n  0xb362: 'Skein1024-16',\n  0xb363: 'Skein1024-24',\n  0xb364: 'Skein1024-32',\n  0xb365: 'Skein1024-40',\n  0xb366: 'Skein1024-48',\n  0xb367: 'Skein1024-56',\n  0xb368: 'Skein1024-64',\n  0xb369: 'Skein1024-72',\n  0xb36a: 'Skein1024-80',\n  0xb36b: 'Skein1024-88',\n  0xb36c: 'Skein1024-96',\n  0xb36d: 'Skein1024-104',\n  0xb36e: 'Skein1024-112',\n  0xb36f: 'Skein1024-120',\n  0xb370: 'Skein1024-128',\n  0xb371: 'Skein1024-136',\n  0xb372: 'Skein1024-144',\n  0xb373: 'Skein1024-152',\n  0xb374: 'Skein1024-160',\n  0xb375: 'Skein1024-168',\n  0xb376: 'Skein1024-176',\n  0xb377: 'Skein1024-184',\n  0xb378: 'Skein1024-192',\n  0xb379: 'Skein1024-200',\n  0xb37a: 'Skein1024-208',\n  0xb37b: 'Skein1024-216',\n  0xb37c: 'Skein1024-224',\n  0xb37d: 'Skein1024-232',\n  0xb37e: 'Skein1024-240',\n  0xb37f: 'Skein1024-248',\n  0xb380: 'Skein1024-256',\n  0xb381: 'Skein1024-264',\n  0xb382: 'Skein1024-272',\n  0xb383: 'Skein1024-280',\n  0xb384: 'Skein1024-288',\n  0xb385: 'Skein1024-296',\n  0xb386: 'Skein1024-304',\n  0xb387: 'Skein1024-312',\n  0xb388: 'Skein1024-320',\n  0xb389: 'Skein1024-328',\n  0xb38a: 'Skein1024-336',\n  0xb38b: 'Skein1024-344',\n  0xb38c: 'Skein1024-352',\n  0xb38d: 'Skein1024-360',\n  0xb38e: 'Skein1024-368',\n  0xb38f: 'Skein1024-376',\n  0xb390: 'Skein1024-384',\n  0xb391: 'Skein1024-392',\n  0xb392: 'Skein1024-400',\n  0xb393: 'Skein1024-408',\n  0xb394: 'Skein1024-416',\n  0xb395: 'Skein1024-424',\n  0xb396: 'Skein1024-432',\n  0xb397: 'Skein1024-440',\n  0xb398: 'Skein1024-448',\n  0xb399: 'Skein1024-456',\n  0xb39a: 'Skein1024-464',\n  0xb39b: 'Skein1024-472',\n  0xb39c: 'Skein1024-480',\n  0xb39d: 'Skein1024-488',\n  0xb39e: 'Skein1024-496',\n  0xb39f: 'Skein1024-504',\n  0xb3a0: 'Skein1024-512',\n  0xb3a1: 'Skein1024-520',\n  0xb3a2: 'Skein1024-528',\n  0xb3a3: 'Skein1024-536',\n  0xb3a4: 'Skein1024-544',\n  0xb3a5: 'Skein1024-552',\n  0xb3a6: 'Skein1024-560',\n  0xb3a7: 'Skein1024-568',\n  0xb3a8: 'Skein1024-576',\n  0xb3a9: 'Skein1024-584',\n  0xb3aa: 'Skein1024-592',\n  0xb3ab: 'Skein1024-600',\n  0xb3ac: 'Skein1024-608',\n  0xb3ad: 'Skein1024-616',\n  0xb3ae: 'Skein1024-624',\n  0xb3af: 'Skein1024-632',\n  0xb3b0: 'Skein1024-640',\n  0xb3b1: 'Skein1024-648',\n  0xb3b2: 'Skein1024-656',\n  0xb3b3: 'Skein1024-664',\n  0xb3b4: 'Skein1024-672',\n  0xb3b5: 'Skein1024-680',\n  0xb3b6: 'Skein1024-688',\n  0xb3b7: 'Skein1024-696',\n  0xb3b8: 'Skein1024-704',\n  0xb3b9: 'Skein1024-712',\n  0xb3ba: 'Skein1024-720',\n  0xb3bb: 'Skein1024-728',\n  0xb3bc: 'Skein1024-736',\n  0xb3bd: 'Skein1024-744',\n  0xb3be: 'Skein1024-752',\n  0xb3bf: 'Skein1024-760',\n  0xb3c0: 'Skein1024-768',\n  0xb3c1: 'Skein1024-776',\n  0xb3c2: 'Skein1024-784',\n  0xb3c3: 'Skein1024-792',\n  0xb3c4: 'Skein1024-800',\n  0xb3c5: 'Skein1024-808',\n  0xb3c6: 'Skein1024-816',\n  0xb3c7: 'Skein1024-824',\n  0xb3c8: 'Skein1024-832',\n  0xb3c9: 'Skein1024-840',\n  0xb3ca: 'Skein1024-848',\n  0xb3cb: 'Skein1024-856',\n  0xb3cc: 'Skein1024-864',\n  0xb3cd: 'Skein1024-872',\n  0xb3ce: 'Skein1024-880',\n  0xb3cf: 'Skein1024-888',\n  0xb3d0: 'Skein1024-896',\n  0xb3d1: 'Skein1024-904',\n  0xb3d2: 'Skein1024-912',\n  0xb3d3: 'Skein1024-920',\n  0xb3d4: 'Skein1024-928',\n  0xb3d5: 'Skein1024-936',\n  0xb3d6: 'Skein1024-944',\n  0xb3d7: 'Skein1024-952',\n  0xb3d8: 'Skein1024-960',\n  0xb3d9: 'Skein1024-968',\n  0xb3da: 'Skein1024-976',\n  0xb3db: 'Skein1024-984',\n  0xb3dc: 'Skein1024-992',\n  0xb3dd: 'Skein1024-1000',\n  0xb3de: 'Skein1024-1008',\n  0xb3df: 'Skein1024-1016',\n  0xb3e0: 'Skein1024-1024'\n})\n\nexports.defaultLengths = Object.freeze({\n  0x11: 20,\n  0x12: 32,\n  0x13: 64,\n  0x56: 32,\n  0x17: 28,\n  0x16: 32,\n  0x15: 48,\n  0x14: 64,\n  0x18: 32,\n  0x19: 64,\n  0x1A: 28,\n  0x1B: 32,\n  0x1C: 48,\n  0x1D: 64,\n  0x22: 32,\n\n  0xb201: 0x01,\n  0xb202: 0x02,\n  0xb203: 0x03,\n  0xb204: 0x04,\n  0xb205: 0x05,\n  0xb206: 0x06,\n  0xb207: 0x07,\n  0xb208: 0x08,\n  0xb209: 0x09,\n  0xb20a: 0x0a,\n  0xb20b: 0x0b,\n  0xb20c: 0x0c,\n  0xb20d: 0x0d,\n  0xb20e: 0x0e,\n  0xb20f: 0x0f,\n  0xb210: 0x10,\n  0xb211: 0x11,\n  0xb212: 0x12,\n  0xb213: 0x13,\n  0xb214: 0x14,\n  0xb215: 0x15,\n  0xb216: 0x16,\n  0xb217: 0x17,\n  0xb218: 0x18,\n  0xb219: 0x19,\n  0xb21a: 0x1a,\n  0xb21b: 0x1b,\n  0xb21c: 0x1c,\n  0xb21d: 0x1d,\n  0xb21e: 0x1e,\n  0xb21f: 0x1f,\n  0xb220: 0x20,\n  0xb221: 0x21,\n  0xb222: 0x22,\n  0xb223: 0x23,\n  0xb224: 0x24,\n  0xb225: 0x25,\n  0xb226: 0x26,\n  0xb227: 0x27,\n  0xb228: 0x28,\n  0xb229: 0x29,\n  0xb22a: 0x2a,\n  0xb22b: 0x2b,\n  0xb22c: 0x2c,\n  0xb22d: 0x2d,\n  0xb22e: 0x2e,\n  0xb22f: 0x2f,\n  0xb230: 0x30,\n  0xb231: 0x31,\n  0xb232: 0x32,\n  0xb233: 0x33,\n  0xb234: 0x34,\n  0xb235: 0x35,\n  0xb236: 0x36,\n  0xb237: 0x37,\n  0xb238: 0x38,\n  0xb239: 0x39,\n  0xb23a: 0x3a,\n  0xb23b: 0x3b,\n  0xb23c: 0x3c,\n  0xb23d: 0x3d,\n  0xb23e: 0x3e,\n  0xb23f: 0x3f,\n  0xb240: 0x40,\n  0xb241: 0x01,\n  0xb242: 0x02,\n  0xb243: 0x03,\n  0xb244: 0x04,\n  0xb245: 0x05,\n  0xb246: 0x06,\n  0xb247: 0x07,\n  0xb248: 0x08,\n  0xb249: 0x09,\n  0xb24a: 0x0a,\n  0xb24b: 0x0b,\n  0xb24c: 0x0c,\n  0xb24d: 0x0d,\n  0xb24e: 0x0e,\n  0xb24f: 0x0f,\n  0xb250: 0x10,\n  0xb251: 0x11,\n  0xb252: 0x12,\n  0xb253: 0x13,\n  0xb254: 0x14,\n  0xb255: 0x15,\n  0xb256: 0x16,\n  0xb257: 0x17,\n  0xb258: 0x18,\n  0xb259: 0x19,\n  0xb25a: 0x1a,\n  0xb25b: 0x1b,\n  0xb25c: 0x1c,\n  0xb25d: 0x1d,\n  0xb25e: 0x1e,\n  0xb25f: 0x1f,\n  0xb260: 0x20,\n  0xb301: 0x01,\n  0xb302: 0x02,\n  0xb303: 0x03,\n  0xb304: 0x04,\n  0xb305: 0x05,\n  0xb306: 0x06,\n  0xb307: 0x07,\n  0xb308: 0x08,\n  0xb309: 0x09,\n  0xb30a: 0x0a,\n  0xb30b: 0x0b,\n  0xb30c: 0x0c,\n  0xb30d: 0x0d,\n  0xb30e: 0x0e,\n  0xb30f: 0x0f,\n  0xb310: 0x10,\n  0xb311: 0x11,\n  0xb312: 0x12,\n  0xb313: 0x13,\n  0xb314: 0x14,\n  0xb315: 0x15,\n  0xb316: 0x16,\n  0xb317: 0x17,\n  0xb318: 0x18,\n  0xb319: 0x19,\n  0xb31a: 0x1a,\n  0xb31b: 0x1b,\n  0xb31c: 0x1c,\n  0xb31d: 0x1d,\n  0xb31e: 0x1e,\n  0xb31f: 0x1f,\n  0xb320: 0x20,\n  0xb321: 0x01,\n  0xb322: 0x02,\n  0xb323: 0x03,\n  0xb324: 0x04,\n  0xb325: 0x05,\n  0xb326: 0x06,\n  0xb327: 0x07,\n  0xb328: 0x08,\n  0xb329: 0x09,\n  0xb32a: 0x0a,\n  0xb32b: 0x0b,\n  0xb32c: 0x0c,\n  0xb32d: 0x0d,\n  0xb32e: 0x0e,\n  0xb32f: 0x0f,\n  0xb330: 0x10,\n  0xb331: 0x11,\n  0xb332: 0x12,\n  0xb333: 0x13,\n  0xb334: 0x14,\n  0xb335: 0x15,\n  0xb336: 0x16,\n  0xb337: 0x17,\n  0xb338: 0x18,\n  0xb339: 0x19,\n  0xb33a: 0x1a,\n  0xb33b: 0x1b,\n  0xb33c: 0x1c,\n  0xb33d: 0x1d,\n  0xb33e: 0x1e,\n  0xb33f: 0x1f,\n  0xb340: 0x20,\n  0xb341: 0x21,\n  0xb342: 0x22,\n  0xb343: 0x23,\n  0xb344: 0x24,\n  0xb345: 0x25,\n  0xb346: 0x26,\n  0xb347: 0x27,\n  0xb348: 0x28,\n  0xb349: 0x29,\n  0xb34a: 0x2a,\n  0xb34b: 0x2b,\n  0xb34c: 0x2c,\n  0xb34d: 0x2d,\n  0xb34e: 0x2e,\n  0xb34f: 0x2f,\n  0xb350: 0x30,\n  0xb351: 0x31,\n  0xb352: 0x32,\n  0xb353: 0x33,\n  0xb354: 0x34,\n  0xb355: 0x35,\n  0xb356: 0x36,\n  0xb357: 0x37,\n  0xb358: 0x38,\n  0xb359: 0x39,\n  0xb35a: 0x3a,\n  0xb35b: 0x3b,\n  0xb35c: 0x3c,\n  0xb35d: 0x3d,\n  0xb35e: 0x3e,\n  0xb35f: 0x3f,\n  0xb360: 0x40,\n  0xb361: 0x01,\n  0xb362: 0x02,\n  0xb363: 0x03,\n  0xb364: 0x04,\n  0xb365: 0x05,\n  0xb366: 0x06,\n  0xb367: 0x07,\n  0xb368: 0x08,\n  0xb369: 0x09,\n  0xb36a: 0x0a,\n  0xb36b: 0x0b,\n  0xb36c: 0x0c,\n  0xb36d: 0x0d,\n  0xb36e: 0x0e,\n  0xb36f: 0x0f,\n  0xb370: 0x10,\n  0xb371: 0x11,\n  0xb372: 0x12,\n  0xb373: 0x13,\n  0xb374: 0x14,\n  0xb375: 0x15,\n  0xb376: 0x16,\n  0xb377: 0x17,\n  0xb378: 0x18,\n  0xb379: 0x19,\n  0xb37a: 0x1a,\n  0xb37b: 0x1b,\n  0xb37c: 0x1c,\n  0xb37d: 0x1d,\n  0xb37e: 0x1e,\n  0xb37f: 0x1f,\n  0xb380: 0x20,\n  0xb381: 0x21,\n  0xb382: 0x22,\n  0xb383: 0x23,\n  0xb384: 0x24,\n  0xb385: 0x25,\n  0xb386: 0x26,\n  0xb387: 0x27,\n  0xb388: 0x28,\n  0xb389: 0x29,\n  0xb38a: 0x2a,\n  0xb38b: 0x2b,\n  0xb38c: 0x2c,\n  0xb38d: 0x2d,\n  0xb38e: 0x2e,\n  0xb38f: 0x2f,\n  0xb390: 0x30,\n  0xb391: 0x31,\n  0xb392: 0x32,\n  0xb393: 0x33,\n  0xb394: 0x34,\n  0xb395: 0x35,\n  0xb396: 0x36,\n  0xb397: 0x37,\n  0xb398: 0x38,\n  0xb399: 0x39,\n  0xb39a: 0x3a,\n  0xb39b: 0x3b,\n  0xb39c: 0x3c,\n  0xb39d: 0x3d,\n  0xb39e: 0x3e,\n  0xb39f: 0x3f,\n  0xb3a0: 0x40,\n  0xb3a1: 0x41,\n  0xb3a2: 0x42,\n  0xb3a3: 0x43,\n  0xb3a4: 0x44,\n  0xb3a5: 0x45,\n  0xb3a6: 0x46,\n  0xb3a7: 0x47,\n  0xb3a8: 0x48,\n  0xb3a9: 0x49,\n  0xb3aa: 0x4a,\n  0xb3ab: 0x4b,\n  0xb3ac: 0x4c,\n  0xb3ad: 0x4d,\n  0xb3ae: 0x4e,\n  0xb3af: 0x4f,\n  0xb3b0: 0x50,\n  0xb3b1: 0x51,\n  0xb3b2: 0x52,\n  0xb3b3: 0x53,\n  0xb3b4: 0x54,\n  0xb3b5: 0x55,\n  0xb3b6: 0x56,\n  0xb3b7: 0x57,\n  0xb3b8: 0x58,\n  0xb3b9: 0x59,\n  0xb3ba: 0x5a,\n  0xb3bb: 0x5b,\n  0xb3bc: 0x5c,\n  0xb3bd: 0x5d,\n  0xb3be: 0x5e,\n  0xb3bf: 0x5f,\n  0xb3c0: 0x60,\n  0xb3c1: 0x61,\n  0xb3c2: 0x62,\n  0xb3c3: 0x63,\n  0xb3c4: 0x64,\n  0xb3c5: 0x65,\n  0xb3c6: 0x66,\n  0xb3c7: 0x67,\n  0xb3c8: 0x68,\n  0xb3c9: 0x69,\n  0xb3ca: 0x6a,\n  0xb3cb: 0x6b,\n  0xb3cc: 0x6c,\n  0xb3cd: 0x6d,\n  0xb3ce: 0x6e,\n  0xb3cf: 0x6f,\n  0xb3d0: 0x70,\n  0xb3d1: 0x71,\n  0xb3d2: 0x72,\n  0xb3d3: 0x73,\n  0xb3d4: 0x74,\n  0xb3d5: 0x75,\n  0xb3d6: 0x76,\n  0xb3d7: 0x77,\n  0xb3d8: 0x78,\n  0xb3d9: 0x79,\n  0xb3da: 0x7a,\n  0xb3db: 0x7b,\n  0xb3dc: 0x7c,\n  0xb3dd: 0x7d,\n  0xb3de: 0x7e,\n  0xb3df: 0x7f,\n  0xb3e0: 0x80\n})\n"
        },
        {
          "id": "./node_modules/multihashes/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
          "name": "./node_modules/multihashes/src/index.js",
          "index": 14,
          "index2": 21,
          "size": 4983,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "issuerId": "./node_modules/is-ipfs/src/index.js",
          "issuerName": "./node_modules/is-ipfs/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/cids/src/cid-util.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/cid-util.js",
              "module": "./node_modules/cids/src/cid-util.js",
              "moduleName": "./node_modules/cids/src/cid-util.js",
              "type": "cjs require",
              "userRequest": "multihashes",
              "loc": "3:11-33"
            },
            {
              "moduleId": "./node_modules/cids/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
              "module": "./node_modules/cids/src/index.js",
              "moduleName": "./node_modules/cids/src/index.js",
              "type": "cjs require",
              "userRequest": "multihashes",
              "loc": "4:11-33"
            },
            {
              "moduleId": "./node_modules/is-ipfs/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "module": "./node_modules/is-ipfs/src/index.js",
              "moduleName": "./node_modules/is-ipfs/src/index.js",
              "type": "cjs require",
              "userRequest": "multihashes",
              "loc": "4:18-40"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 4,
          "source": "/**\n * Multihash implementation in JavaScript.\n *\n * @module multihash\n */\n'use strict'\n\nconst { Buffer } = require('buffer')\nconst multibase = require('multibase')\nconst varint = require('varint')\nconst cs = require('./constants')\n\nexports.names = cs.names\nexports.codes = cs.codes\nexports.defaultLengths = cs.defaultLengths\n\n/**\n * Convert the given multihash to a hex encoded string.\n *\n * @param {Buffer} hash\n * @returns {string}\n */\nexports.toHexString = function toHexString (hash) {\n  if (!Buffer.isBuffer(hash)) {\n    throw new Error('must be passed a buffer')\n  }\n\n  return hash.toString('hex')\n}\n\n/**\n * Convert the given hex encoded string to a multihash.\n *\n * @param {string} hash\n * @returns {Buffer}\n */\nexports.fromHexString = function fromHexString (hash) {\n  return Buffer.from(hash, 'hex')\n}\n\n/**\n * Convert the given multihash to a base58 encoded string.\n *\n * @param {Buffer} hash\n * @returns {string}\n */\nexports.toB58String = function toB58String (hash) {\n  if (!Buffer.isBuffer(hash)) {\n    throw new Error('must be passed a buffer')\n  }\n\n  return multibase.encode('base58btc', hash).toString().slice(1)\n}\n\n/**\n * Convert the given base58 encoded string to a multihash.\n *\n * @param {string|Buffer} hash\n * @returns {Buffer}\n */\nexports.fromB58String = function fromB58String (hash) {\n  let encoded = hash\n  if (Buffer.isBuffer(hash)) {\n    encoded = hash.toString()\n  }\n\n  return multibase.decode('z' + encoded)\n}\n\n/**\n * Decode a hash from the given multihash.\n *\n * @param {Buffer} buf\n * @returns {{code: number, name: string, length: number, digest: Buffer}} result\n */\nexports.decode = function decode (buf) {\n  if (!(Buffer.isBuffer(buf))) {\n    throw new Error('multihash must be a Buffer')\n  }\n\n  if (buf.length < 2) {\n    throw new Error('multihash too short. must be > 2 bytes.')\n  }\n\n  const code = varint.decode(buf)\n  if (!exports.isValidCode(code)) {\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\n  }\n  buf = buf.slice(varint.decode.bytes)\n\n  const len = varint.decode(buf)\n  if (len < 0) {\n    throw new Error(`multihash invalid length: ${len}`)\n  }\n  buf = buf.slice(varint.decode.bytes)\n\n  if (buf.length !== len) {\n    throw new Error(`multihash length inconsistent: 0x${buf.toString('hex')}`)\n  }\n\n  return {\n    code: code,\n    name: cs.codes[code],\n    length: len,\n    digest: buf\n  }\n}\n\n/**\n *  Encode a hash digest along with the specified function code.\n *\n * > **Note:** the length is derived from the length of the digest itself.\n *\n * @param {Buffer} digest\n * @param {string|number} code\n * @param {number} [length]\n * @returns {Buffer}\n */\nexports.encode = function encode (digest, code, length) {\n  if (!digest || code === undefined) {\n    throw new Error('multihash encode requires at least two args: digest, code')\n  }\n\n  // ensure it's a hashfunction code.\n  const hashfn = exports.coerceCode(code)\n\n  if (!(Buffer.isBuffer(digest))) {\n    throw new Error('digest should be a Buffer')\n  }\n\n  if (length == null) {\n    length = digest.length\n  }\n\n  if (length && digest.length !== length) {\n    throw new Error('digest length should be equal to specified length.')\n  }\n\n  return Buffer.concat([\n    Buffer.from(varint.encode(hashfn)),\n    Buffer.from(varint.encode(length)),\n    digest\n  ])\n}\n\n/**\n * Converts a hash function name into the matching code.\n * If passed a number it will return the number if it's a valid code.\n * @param {string|number} name\n * @returns {number}\n */\nexports.coerceCode = function coerceCode (name) {\n  let code = name\n\n  if (typeof name === 'string') {\n    if (cs.names[name] === undefined) {\n      throw new Error(`Unrecognized hash function named: ${name}`)\n    }\n    code = cs.names[name]\n  }\n\n  if (typeof code !== 'number') {\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\n  }\n\n  if (cs.codes[code] === undefined && !exports.isAppCode(code)) {\n    throw new Error(`Unrecognized function code: ${code}`)\n  }\n\n  return code\n}\n\n/**\n * Checks wether a code is part of the app range\n *\n * @param {number} code\n * @returns {boolean}\n */\nexports.isAppCode = function appCode (code) {\n  return code > 0 && code < 0x10\n}\n\n/**\n * Checks whether a multihash code is valid.\n *\n * @param {number} code\n * @returns {boolean}\n */\nexports.isValidCode = function validCode (code) {\n  if (exports.isAppCode(code)) {\n    return true\n  }\n\n  if (cs.codes[code]) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\n *\n * @param {Buffer} multihash\n * @returns {undefined}\n * @throws {Error}\n */\nfunction validate (multihash) {\n  exports.decode(multihash) // throws if bad.\n}\nexports.validate = validate\n\n/**\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\n *\n * @param {Buffer} multihash\n * @returns {undefined}\n * @throws {Error}\n */\nexports.prefix = function prefix (multihash) {\n  validate(multihash)\n\n  return multihash.slice(0, 2)\n}\n"
        },
        {
          "id": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
          "name": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "index": 7,
          "index2": 6,
          "size": 48590,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "issuerId": "./node_modules/is-ipfs/src/index.js",
          "issuerName": "./node_modules/is-ipfs/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/cids/src/cid-util.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/cid-util.js",
              "module": "./node_modules/cids/src/cid-util.js",
              "moduleName": "./node_modules/cids/src/cid-util.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "4:19-36"
            },
            {
              "moduleId": "./node_modules/cids/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
              "module": "./node_modules/cids/src/index.js",
              "moduleName": "./node_modules/cids/src/index.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "3:19-36"
            },
            {
              "moduleId": "./node_modules/is-ipfs/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "module": "./node_modules/is-ipfs/src/index.js",
              "moduleName": "./node_modules/is-ipfs/src/index.js",
              "type": "cjs require",
              "userRequest": "Buffer",
              "loc": "1:0-65"
            },
            {
              "moduleId": "./node_modules/multiaddr/src/codec.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
              "module": "./node_modules/multiaddr/src/codec.js",
              "moduleName": "./node_modules/multiaddr/src/codec.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "3:19-36"
            },
            {
              "moduleId": "./node_modules/multiaddr/src/convert.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
              "module": "./node_modules/multiaddr/src/convert.js",
              "moduleName": "./node_modules/multiaddr/src/convert.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "3:19-36"
            },
            {
              "moduleId": "./node_modules/multiaddr/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
              "module": "./node_modules/multiaddr/src/index.js",
              "moduleName": "./node_modules/multiaddr/src/index.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "4:19-36"
            },
            {
              "moduleId": "./node_modules/multiaddr/src/ip.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/ip.js",
              "module": "./node_modules/multiaddr/src/ip.js",
              "moduleName": "./node_modules/multiaddr/src/ip.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "3:19-36"
            },
            {
              "moduleId": "./node_modules/multibase/src/base16.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/base16.js",
              "module": "./node_modules/multibase/src/base16.js",
              "moduleName": "./node_modules/multibase/src/base16.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "2:19-36"
            },
            {
              "moduleId": "./node_modules/multibase/src/base64.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/base64.js",
              "module": "./node_modules/multibase/src/base64.js",
              "moduleName": "./node_modules/multibase/src/base64.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "2:19-36"
            },
            {
              "moduleId": "./node_modules/multibase/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/index.js",
              "module": "./node_modules/multibase/src/index.js",
              "moduleName": "./node_modules/multibase/src/index.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "7:19-36"
            },
            {
              "moduleId": "./node_modules/multicodec/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
              "module": "./node_modules/multicodec/src/index.js",
              "moduleName": "./node_modules/multicodec/src/index.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "14:19-36"
            },
            {
              "moduleId": "./node_modules/multicodec/src/util.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/util.js",
              "module": "./node_modules/multicodec/src/util.js",
              "moduleName": "./node_modules/multicodec/src/util.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "3:19-36"
            },
            {
              "moduleId": "./node_modules/multihashes/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
              "module": "./node_modules/multihashes/src/index.js",
              "moduleName": "./node_modules/multihashes/src/index.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "8:19-36"
            },
            {
              "moduleId": "./node_modules/safe-buffer/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/safe-buffer/index.js",
              "module": "./node_modules/safe-buffer/index.js",
              "moduleName": "./node_modules/safe-buffer/index.js",
              "type": "cjs require",
              "userRequest": "buffer",
              "loc": "3:13-30"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 4,
          "source": "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n"
        },
        {
          "id": "./node_modules/safe-buffer/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/safe-buffer/index.js",
          "name": "./node_modules/safe-buffer/index.js",
          "index": 13,
          "index2": 7,
          "size": 1670,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/base-x/src/index.js",
          "issuerId": "./node_modules/base-x/src/index.js",
          "issuerName": "./node_modules/base-x/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/bs58/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/bs58/index.js",
              "name": "./node_modules/bs58/index.js"
            },
            {
              "id": "./node_modules/base-x/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/base-x/src/index.js",
              "name": "./node_modules/base-x/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/base-x/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/base-x/src/index.js",
              "module": "./node_modules/base-x/src/index.js",
              "moduleName": "./node_modules/base-x/src/index.js",
              "type": "cjs require",
              "userRequest": "safe-buffer",
              "loc": "8:14-36"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 6,
          "source": "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n"
        },
        {
          "id": "./node_modules/varint/decode.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/decode.js",
          "name": "./node_modules/varint/decode.js",
          "index": 23,
          "index2": 17,
          "size": 508,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
          "issuerId": "./node_modules/varint/index.js",
          "issuerName": "./node_modules/varint/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/multihashes/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
              "name": "./node_modules/multihashes/src/index.js"
            },
            {
              "id": "./node_modules/varint/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
              "name": "./node_modules/varint/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/varint/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
              "module": "./node_modules/varint/index.js",
              "moduleName": "./node_modules/varint/index.js",
              "type": "cjs require",
              "userRequest": "./decode.js",
              "loc": "3:12-34"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 6,
          "source": "module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n"
        },
        {
          "id": "./node_modules/varint/encode.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/encode.js",
          "name": "./node_modules/varint/encode.js",
          "index": 22,
          "index2": 16,
          "size": 452,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
          "issuerId": "./node_modules/varint/index.js",
          "issuerName": "./node_modules/varint/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/multihashes/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
              "name": "./node_modules/multihashes/src/index.js"
            },
            {
              "id": "./node_modules/varint/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
              "name": "./node_modules/varint/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/varint/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
              "module": "./node_modules/varint/index.js",
              "moduleName": "./node_modules/varint/index.js",
              "type": "cjs require",
              "userRequest": "./encode.js",
              "loc": "2:12-34"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 6,
          "source": "module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n"
        },
        {
          "id": "./node_modules/varint/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
          "name": "./node_modules/varint/index.js",
          "index": 21,
          "index2": 19,
          "size": 134,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
          "issuerId": "./node_modules/multihashes/src/index.js",
          "issuerName": "./node_modules/multihashes/src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/multihashes/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
              "name": "./node_modules/multihashes/src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/multiaddr/src/codec.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
              "module": "./node_modules/multiaddr/src/codec.js",
              "moduleName": "./node_modules/multiaddr/src/codec.js",
              "type": "cjs require",
              "userRequest": "varint",
              "loc": "6:15-32"
            },
            {
              "moduleId": "./node_modules/multiaddr/src/convert.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
              "module": "./node_modules/multiaddr/src/convert.js",
              "moduleName": "./node_modules/multiaddr/src/convert.js",
              "type": "cjs require",
              "userRequest": "varint",
              "loc": "8:15-32"
            },
            {
              "moduleId": "./node_modules/multiaddr/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
              "module": "./node_modules/multiaddr/src/index.js",
              "moduleName": "./node_modules/multiaddr/src/index.js",
              "type": "cjs require",
              "userRequest": "varint",
              "loc": "6:15-32"
            },
            {
              "moduleId": "./node_modules/multicodec/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
              "module": "./node_modules/multicodec/src/index.js",
              "moduleName": "./node_modules/multicodec/src/index.js",
              "type": "cjs require",
              "userRequest": "varint",
              "loc": "15:15-32"
            },
            {
              "moduleId": "./node_modules/multicodec/src/util.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/util.js",
              "module": "./node_modules/multicodec/src/util.js",
              "moduleName": "./node_modules/multicodec/src/util.js",
              "type": "cjs require",
              "userRequest": "varint",
              "loc": "2:15-32"
            },
            {
              "moduleId": "./node_modules/multihashes/src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
              "module": "./node_modules/multihashes/src/index.js",
              "moduleName": "./node_modules/multihashes/src/index.js",
              "type": "cjs require",
              "userRequest": "varint",
              "loc": "10:15-32"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 5,
          "source": "module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n"
        },
        {
          "id": "./node_modules/varint/length.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/length.js",
          "name": "./node_modules/varint/length.js",
          "index": 24,
          "index2": 18,
          "size": 471,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
          "issuerId": "./node_modules/varint/index.js",
          "issuerName": "./node_modules/varint/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/util/validators.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
              "name": "./src/util/validators.js"
            },
            {
              "id": "./node_modules/is-ipfs/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
              "name": "./node_modules/is-ipfs/src/index.js"
            },
            {
              "id": "./node_modules/multihashes/src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
              "name": "./node_modules/multihashes/src/index.js"
            },
            {
              "id": "./node_modules/varint/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
              "name": "./node_modules/varint/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/varint/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
              "module": "./node_modules/varint/index.js",
              "moduleName": "./node_modules/varint/index.js",
              "type": "cjs require",
              "userRequest": "./length.js",
              "loc": "4:20-42"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 6,
          "source": "\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n"
        },
        {
          "id": "./node_modules/webpack/buildin/global.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/webpack/buildin/global.js",
          "name": "(webpack)/buildin/global.js",
          "index": 3,
          "index2": 0,
          "size": 472,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/lodash.merge/index.js",
          "issuerId": "./node_modules/lodash.merge/index.js",
          "issuerName": "./node_modules/lodash.merge/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./node_modules/lodash.merge/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/lodash.merge/index.js",
              "name": "./node_modules/lodash.merge/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/lodash.merge/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/lodash.merge/index.js",
              "module": "./node_modules/lodash.merge/index.js",
              "moduleName": "./node_modules/lodash.merge/index.js",
              "type": "cjs require",
              "userRequest": "global",
              "loc": "1:0-41"
            },
            {
              "moduleId": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
              "module": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
              "moduleName": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
              "type": "cjs require",
              "userRequest": "global",
              "loc": "1:0-47"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 3,
          "source": "var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"
        },
        {
          "id": "./node_modules/webpack/buildin/module.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/webpack/buildin/module.js",
          "name": "(webpack)/buildin/module.js",
          "index": 4,
          "index2": 1,
          "size": 497,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/lodash.merge/index.js",
          "issuerId": "./node_modules/lodash.merge/index.js",
          "issuerName": "./node_modules/lodash.merge/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./node_modules/lodash.merge/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/lodash.merge/index.js",
              "name": "./node_modules/lodash.merge/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./node_modules/lodash.merge/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/lodash.merge/index.js",
              "module": "./node_modules/lodash.merge/index.js",
              "moduleName": "./node_modules/lodash.merge/index.js",
              "type": "cjs require",
              "userRequest": "module",
              "loc": "1:0-41"
            }
          ],
          "providedExports": null,
          "optimizationBailout": [],
          "depth": 3,
          "source": "module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"
        },
        {
          "id": "./src/commands/data/pinList/pinList.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/data/pinList/pinList.js",
          "name": "./src/commands/data/pinList/pinList.js",
          "index": 55,
          "index2": 54,
          "size": 2293,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "issuerId": "./src/index.js",
          "issuerName": "./src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./commands/data/pinList/pinList",
              "loc": "23:0-54"
            },
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony import specifier",
              "userRequest": "./commands/data/pinList/pinList",
              "loc": "59:19-26"
            }
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport queryBuilder from './queryBuilder';\n/**\n * Pin List\n * @param {string} filters\n * @returns {Promise}\n */\n\nfunction pinList(_x) {\n  return _pinList.apply(this, arguments);\n}\n\nfunction _pinList() {\n  _pinList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(filters) {\n    var baseEndpoint, endpoint, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            baseEndpoint = 'data/pinList';\n            endpoint = queryBuilder(baseEndpoint, filters);\n            _context.prev = 2;\n            _context.next = 5;\n            return this.fetch(endpoint);\n\n          case 5:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 10;\n              break;\n            }\n\n            throw new Error(\"unknown server response while attempting to retrieve user pin list: \".concat(result));\n\n          case 10:\n            _context.next = 12;\n            return result.json();\n\n          case 12:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 13:\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](2);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[2, 15]]);\n  }));\n  return _pinList.apply(this, arguments);\n}\n\nexport default pinList;"
        },
        {
          "id": "./src/commands/data/pinList/queryBuilder.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/data/pinList/queryBuilder.js",
          "name": "./src/commands/data/pinList/queryBuilder.js",
          "index": 56,
          "index2": 53,
          "size": 8598,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/data/pinList/pinList.js",
          "issuerId": "./src/commands/data/pinList/pinList.js",
          "issuerName": "./src/commands/data/pinList/pinList.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/commands/data/pinList/pinList.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/data/pinList/pinList.js",
              "name": "./src/commands/data/pinList/pinList.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./src/commands/data/pinList/pinList.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/data/pinList/pinList.js",
              "module": "./src/commands/data/pinList/pinList.js",
              "moduleName": "./src/commands/data/pinList/pinList.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./queryBuilder",
              "loc": "5:0-42"
            },
            {
              "moduleId": "./src/commands/data/pinList/pinList.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/data/pinList/pinList.js",
              "module": "./src/commands/data/pinList/pinList.js",
              "moduleName": "./src/commands/data/pinList/pinList.js",
              "type": "harmony import specifier",
              "userRequest": "./queryBuilder",
              "loc": "24:23-35"
            }
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 3,
          "source": "function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Validate and return data\n * @param {*} dateToValidate\n * @returns {*}\n */\nfunction validateAndReturnDate(dateToValidate) {\n  var dateParsed = new Date(Date.parse(dateToValidate));\n\n  try {\n    if (dateParsed.toISOString() === dateToValidate) return dateToValidate;\n    throw new Error('dates must be in valid ISO_8601 format');\n  } catch (e) {\n    throw new Error('dates must be in valid ISO_8601 format');\n  }\n}\n/**\n * Query Builder\n * @param {string} baseUrl\n * @param {*} filters\n * @returns {string}\n */\n\n\nexport default function queryBuilder(baseEndpoint, filters) {\n  //  preset filter values\n  var filterQuery = \"\".concat(baseEndpoint, \"?\");\n  var metadataQuery = '';\n\n  if (filters) {\n    //  now we need to construct the actual URL based on the given filters provided\n    if (filters.hashContains) {\n      if (typeof filters.hashContains !== 'string') throw new Error('hashContains value is not a string');\n      filterQuery = filterQuery + \"hashContains=\".concat(filters.hashContains, \"&\");\n    }\n\n    if (filters.pinStart) filterQuery = filterQuery + \"pinStart=\".concat(validateAndReturnDate(filters.pinStart), \"&\");\n    if (filters.pinEnd) filterQuery = filterQuery + \"pinEnd=\".concat(validateAndReturnDate(filters.pinEnd), \"&\");\n    if (filters.unpinStart) filterQuery = filterQuery + \"unpinStart=\".concat(validateAndReturnDate(filters.unpinStart), \"&\");\n    if (filters.unpinEnd) filterQuery = filterQuery + \"unpinEnd=\".concat(validateAndReturnDate(filters.unpinEnd), \"&\");\n\n    if (filters.pinSizeMin) {\n      if (isNaN(filters.pinSizeMin) || filters.pinSizeMin < 0) throw new Error('Please make sure the pinSizeMin is a valid positive integer');\n      filterQuery = filterQuery + \"pinSizeMin=\".concat(filters.pinSizeMin, \"&\");\n    }\n\n    if (filters.pinSizeMax) {\n      if (isNaN(filters.pinSizeMax) || filters.pinSizeMax < 0) throw new Error('Please make sure the pinSizeMax is a valid positive integer');\n      filterQuery = filterQuery + \"pinSizeMax=\".concat(filters.pinSizeMax, \"&\");\n    }\n\n    if (filters.status) {\n      if (filters.status !== 'all' && filters.status !== 'pinned' && filters.status !== 'unpinned') throw new Error('status value must be either: all, pinned, or unpinned');\n      filterQuery = filterQuery + \"status=\".concat(filters.status, \"&\");\n    }\n\n    if (filters.pageLimit) {\n      if (isNaN(filters.pageLimit) || filters.pageLimit <= 0 || filters.pageLimit > 1000) throw new Error('Please make sure the pageLimit is a valid integer between 1-1000');\n      filterQuery = filterQuery + \"pageLimit=\".concat(parseInt(filters.pageLimit), \"&\"); // we want to make sure that decimals get rounded to integers\n    }\n\n    if (filters.pageOffset) {\n      if (isNaN(filters.pageOffset) || filters.pageOffset <= 0) {\n        throw new Error('Please make sure the pageOffset is a positive integer');\n      }\n\n      filterQuery = filterQuery + \"pageOffset=\".concat(parseInt(filters.pageOffset), \"&\"); // we want to make sure that decimals get rounded to integers\n    }\n\n    if (filters.metadata) {\n      if (_typeof(filters.metadata) !== 'object') throw new Error('metadata value must be an object');\n      if (filters.metadata.name) metadataQuery = \"metadata[name]=\".concat(filters.metadata.name, \"&\");\n\n      if (filters.metadata.keyvalues) {\n        metadataQuery = metadataQuery + 'metadata[keyvalues]=';\n        if (_typeof(filters.metadata.keyvalues) !== 'object') throw new Error('metadata keyvalues must be an object'); // we want to make sure we're only grabbing the values we want for the query, and nothing extra\n\n        var prunedKeyValues = {};\n        Object.entries(filters.metadata.keyvalues).forEach(function (keyValue) {\n          var key = keyValue[0];\n          var value = keyValue[1];\n          if (_typeof(value) !== 'object') throw new Error(\"keyValue: \".concat(key, \" is not an object\"));\n          if (!value || !value.value || !value.op) throw new Error(\"keyValue: \".concat(key, \" must have both value and op attributes\"));\n          if (typeof value.value !== 'string' && typeof value.value !== 'boolean' && typeof value.value !== 'number') throw new Error('Metadata keyvalue values must be strings, booleans, or numbers'); // Run checks to make sure all of the keyvalues are valid\n\n          switch (value.op) {\n            case 'gt':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            //greater than or equal\n\n            case 'gte':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // less than\n\n            case 'lt':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // less than or equal\n\n            case 'lte':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // not equal to\n\n            case 'ne':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // equal to\n\n            case 'eq':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // between\n\n            case 'between':\n              if (!value.secondValue) throw new Error(\"Because between op code was passed in, keyValue: \".concat(keyValue[0], \" must have both also include a secondValue\"));\n              if (typeof value.secondValue !== 'string' && typeof value.secondValue !== 'boolean' && typeof value.secondValue !== 'number') throw new Error('Metadata keyvalue secondValue must be a string, boolean, or number');\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op,\n                secondValue: value.secondValue\n              };\n              break;\n            // not between\n\n            case 'notBetween':\n              if (!value.secondValue) throw new Error(\"Because notBetween op code was passed in, keyValue: \".concat(keyValue[0], \" must have both also include a secondValue\"));\n              if (typeof value.secondValue !== 'string' && typeof value.secondValue !== 'boolean' && typeof value.secondValue !== 'number') throw new Error('Metadata keyvalue secondValue must be a string, boolean, or number');\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op,\n                secondValue: value.secondValue\n              };\n              break;\n            // like\n\n            case 'like':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // not like\n\n            case 'notLike':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // case insensitive like\n\n            case 'iLike':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // case insensitive not like\n\n            case 'notILike':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // regex\n\n            case 'regexp':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // case insensitive regex\n\n            case 'iRegexp':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n\n            default:\n              throw new Error(\"keyValue op: \".concat(value.op, \" is not a valid op code\"));\n          }\n        });\n        metadataQuery = metadataQuery + \"\".concat(JSON.stringify(prunedKeyValues));\n      }\n    }\n  }\n\n  return \"\".concat(filterQuery).concat(metadataQuery);\n}"
        },
        {
          "id": "./src/commands/data/testAuthentication.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/data/testAuthentication.js",
          "name": "./src/commands/data/testAuthentication.js",
          "index": 54,
          "index2": 52,
          "size": 2217,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "issuerId": "./src/index.js",
          "issuerName": "./src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./commands/data/testAuthentication",
              "loc": "22:0-68"
            },
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony import specifier",
              "userRequest": "./commands/data/testAuthentication",
              "loc": "58:30-48"
            }
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * Test Authentication\n * @returns {Promise}\n */\nexport default function testAuthentication() {\n  return _testAuthentication.apply(this, arguments);\n}\n\nfunction _testAuthentication() {\n  _testAuthentication = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var endpoint, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //  test authentication to make sure that the user's provided keys are legit\n            endpoint = 'data/testAuthentication';\n            _context.prev = 1;\n            _context.next = 4;\n            return this.fetch(endpoint);\n\n          case 4:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 9;\n              break;\n            }\n\n            throw new Error(\"unknown server response while authenticating: \".concat(result));\n\n          case 9:\n            return _context.abrupt(\"return\", {\n              authenticated: true\n            });\n\n          case 10:\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[1, 12]]);\n  }));\n  return _testAuthentication.apply(this, arguments);\n}"
        },
        {
          "id": "./src/commands/data/userPinnedDataTotal.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/data/userPinnedDataTotal.js",
          "name": "./src/commands/data/userPinnedDataTotal.js",
          "index": 57,
          "index2": 55,
          "size": 2213,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "issuerId": "./src/index.js",
          "issuerName": "./src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./commands/data/userPinnedDataTotal",
              "loc": "24:0-70"
            },
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony import specifier",
              "userRequest": "./commands/data/userPinnedDataTotal",
              "loc": "60:31-50"
            }
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * User Pinned Data Total\n * @returns {Promise}\n */\nexport default function userPinnedDataTotal() {\n  return _userPinnedDataTotal.apply(this, arguments);\n}\n\nfunction _userPinnedDataTotal() {\n  _userPinnedDataTotal = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var endpoint, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            endpoint = 'data/userPinnedDataTotal';\n            _context.prev = 1;\n            _context.next = 4;\n            return this.fetch(endpoint);\n\n          case 4:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 9;\n              break;\n            }\n\n            throw new Error(\"unknown server response while attempting to retrieve pinned data total: \".concat(result));\n\n          case 9:\n            _context.next = 11;\n            return result.json();\n\n          case 11:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 12:\n            _context.next = 18;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](1);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[1, 14]]);\n  }));\n  return _userPinnedDataTotal.apply(this, arguments);\n}"
        },
        {
          "id": "./src/commands/pinning/hashMetadata.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/hashMetadata.js",
          "name": "./src/commands/pinning/hashMetadata.js",
          "index": 46,
          "index2": 44,
          "size": 3135,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "issuerId": "./src/index.js",
          "issuerName": "./src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./commands/pinning/hashMetadata",
              "loc": "15:0-59"
            },
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony import specifier",
              "userRequest": "./commands/pinning/hashMetadata",
              "loc": "51:24-36"
            }
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport isIPFS from 'is-ipfs';\n/**\n * Hash Meta Data\n * @param {*} ipfsPinHash\n * @param {*} metadata\n * @returns {Promise<unknown>}\n */\n\nexport default function hashMetadata(_x, _x2) {\n  return _hashMetadata.apply(this, arguments);\n}\n\nfunction _hashMetadata() {\n  _hashMetadata = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(ipfsPinHash, metadata) {\n    var endpoint, body, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (ipfsPinHash) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error('ipfsPinHash value is required for changing the pin policy of a pin');\n\n          case 2:\n            if (isIPFS.cid(ipfsPinHash)) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error('ipfsPinHash value is an invalid IPFS CID');\n\n          case 4:\n            if (metadata) {\n              _context.next = 6;\n              break;\n            }\n\n            throw new Error('no metadata object provided');\n\n          case 6:\n            this.validateMetadata(metadata);\n            endpoint = 'pinning/hashMetadata';\n            body = {\n              ipfsPinHash: ipfsPinHash\n            };\n            if (metadata.name) body.name = metadata.name;\n            if (metadata.keyvalues) body.keyvalues = metadata.keyvalues;\n            _context.prev = 11;\n            _context.next = 14;\n            return this.put(endpoint, body);\n\n          case 14:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 19;\n              break;\n            }\n\n            throw new Error(\"unknown server response while changing metadata for hash: \".concat(result));\n\n          case 19:\n            _context.next = 21;\n            return result.json();\n\n          case 21:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 22:\n            _context.next = 28;\n            break;\n\n          case 24:\n            _context.prev = 24;\n            _context.t0 = _context[\"catch\"](11);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 28:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[11, 24]]);\n  }));\n  return _hashMetadata.apply(this, arguments);\n}"
        },
        {
          "id": "./src/commands/pinning/hashPinPolicy.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/hashPinPolicy.js",
          "name": "./src/commands/pinning/hashPinPolicy.js",
          "index": 47,
          "index2": 45,
          "size": 3033,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "issuerId": "./src/index.js",
          "issuerName": "./src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./commands/pinning/hashPinPolicy",
              "loc": "16:0-61"
            },
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony import specifier",
              "userRequest": "./commands/pinning/hashPinPolicy",
              "loc": "52:25-38"
            }
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport isIPFS from 'is-ipfs';\n/**\n * Hash Pin Policy\n * @param {*} ipfsPinHash\n * @param {*} newPinPolicy\n * @returns {Promise}\n */\n\nexport default function hashPinPolicy(_x, _x2) {\n  return _hashPinPolicy.apply(this, arguments);\n}\n\nfunction _hashPinPolicy() {\n  _hashPinPolicy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(ipfsPinHash, newPinPolicy) {\n    var endpoint, body, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            this.validatePinPolicyStructure(newPinPolicy);\n\n            if (ipfsPinHash) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error('ipfsPinHash value is required for changing the pin policy of a pin');\n\n          case 3:\n            if (isIPFS.cid(ipfsPinHash)) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error('ipfsPinHash value is an invalid IPFS CID');\n\n          case 5:\n            if (newPinPolicy) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error('newPinPolicy is required for changing the pin policy of a pin');\n\n          case 7:\n            endpoint = 'pinning/hashPinPolicy';\n            body = {\n              ipfsPinHash: ipfsPinHash,\n              newPinPolicy: newPinPolicy\n            };\n            _context.prev = 9;\n            _context.next = 12;\n            return this.put(endpoint, body);\n\n          case 12:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 15;\n              break;\n            }\n\n            throw new Error(\"unknown server response while changing pin policy for hash: \".concat(result));\n\n          case 15:\n            _context.next = 17;\n            return result.json();\n\n          case 17:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](9);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[9, 20]]);\n  }));\n  return _hashPinPolicy.apply(this, arguments);\n}"
        },
        {
          "id": "./src/commands/pinning/pinByHash.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinByHash.js",
          "name": "./src/commands/pinning/pinByHash.js",
          "index": 45,
          "index2": 43,
          "size": 2989,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "issuerId": "./src/index.js",
          "issuerName": "./src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./commands/pinning/pinByHash",
              "loc": "14:0-53"
            },
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony import specifier",
              "userRequest": "./commands/pinning/pinByHash",
              "loc": "50:21-30"
            }
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport isIPFS from 'is-ipfs';\n/**\n * Pin By Hash\n * @param {*} hashToPin\n * @param {*} options\n * @returns {Promise<unknown>}\n */\n\nexport default function pinByHash(_x, _x2) {\n  return _pinByHash.apply(this, arguments);\n}\n\nfunction _pinByHash() {\n  _pinByHash = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(hashToPin, options) {\n    var endpoint, body, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (hashToPin) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error('hashToPin value is required for pinning by hash');\n\n          case 2:\n            if (isIPFS.cid(hashToPin)) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error('hashToPin value is an invalid IPFS CID');\n\n          case 4:\n            endpoint = 'pinning/pinByHash';\n            body = {\n              hashToPin: hashToPin,\n              pinataOptions: {}\n            };\n\n            if (options) {\n              if (options.pinataOptions) body.pinataOptions = options.pinataOptions;\n\n              if (options.pinataMetadata) {\n                this.validateMetadata(options.pinataMetadata);\n                body.pinataMetadata = options.pinataMetadata;\n              }\n            }\n\n            _context.prev = 7;\n            _context.next = 10;\n            return this.post(endpoint, body);\n\n          case 10:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 13;\n              break;\n            }\n\n            throw new Error(\"unknown server response while adding to pin queue: \".concat(result));\n\n          case 13:\n            _context.next = 15;\n            return result.json();\n\n          case 15:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](7);\n            formattedError = handleError(_context.t0);\n            throw formattedError;\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[7, 18]]);\n  }));\n  return _pinByHash.apply(this, arguments);\n}"
        },
        {
          "id": "./src/commands/pinning/pinFileToIPFS.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinFileToIPFS.js",
          "name": "./src/commands/pinning/pinFileToIPFS.js",
          "index": 48,
          "index2": 46,
          "size": 2702,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "issuerId": "./src/index.js",
          "issuerName": "./src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./commands/pinning/pinFileToIPFS",
              "loc": "17:0-61"
            },
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony import specifier",
              "userRequest": "./commands/pinning/pinFileToIPFS",
              "loc": "53:25-38"
            }
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * Pin File to IPFS\n * @param {*} readStream\n * @param {*} options\n * @returns {Promise}\n */\nexport default function pinFileToIPFS(_x, _x2) {\n  return _pinFileToIPFS.apply(this, arguments);\n}\n\nfunction _pinFileToIPFS() {\n  _pinFileToIPFS = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(file, options) {\n    var data, endpoint, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = new FormData();\n            endpoint = 'pinning/pinFileToIPFS';\n            data.append('file', file);\n\n            if (options) {\n              if (options.pinataMetadata) {\n                this.validateMetadata(options.pinataMetadata);\n                data.append('pinataMetadata', JSON.stringify(options.pinataMetadata));\n              }\n\n              if (options.pinataOptions) {\n                this.validatePinataOptions(options.pinataOptions);\n                data.append('pinataOptions', JSON.stringify(options.pinataOptions));\n              }\n            }\n\n            _context.prev = 4;\n            _context.next = 7;\n            return this.post(endpoint, data);\n\n          case 7:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 10;\n              break;\n            }\n\n            throw new Error(\"unknown server response while pinning File to IPFS: \".concat(result));\n\n          case 10:\n            _context.next = 12;\n            return result.json();\n\n          case 12:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](4);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[4, 15]]);\n  }));\n  return _pinFileToIPFS.apply(this, arguments);\n}"
        },
        {
          "id": "./src/commands/pinning/pinJSONToIPFS.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinJSONToIPFS.js",
          "name": "./src/commands/pinning/pinJSONToIPFS.js",
          "index": 49,
          "index2": 47,
          "size": 3298,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "issuerId": "./src/index.js",
          "issuerName": "./src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./commands/pinning/pinJSONToIPFS",
              "loc": "18:0-61"
            },
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony import specifier",
              "userRequest": "./commands/pinning/pinJSONToIPFS",
              "loc": "54:25-38"
            }
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * Pin JSON to IPFS\n * @param {*} body\n * @param {*} options\n * @returns {Promise}\n */\nexport default function pinJSONToIPFS(_x, _x2) {\n  return _pinJSONToIPFS.apply(this, arguments);\n}\n\nfunction _pinJSONToIPFS() {\n  _pinJSONToIPFS = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(body, options) {\n    var requestBody, endpoint, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            requestBody = body;\n\n            if (!(_typeof(body) !== 'object')) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error('body must be a valid JSON object');\n\n          case 3:\n            if (options) {\n              requestBody = {\n                pinataContent: body\n              };\n\n              if (options.pinataMetadata) {\n                this.validateMetadata(options.pinataMetadata);\n                requestBody.pinataMetadata = options.pinataMetadata;\n              }\n\n              if (options.pinataOptions) {\n                this.validatePinataOptions(options.pinataOptions);\n                requestBody.pinataOptions = options.pinataOptions;\n              }\n            }\n\n            endpoint = 'pinning/pinJSONToIPFS';\n            _context.prev = 5;\n            _context.next = 8;\n            return this.post(endpoint, requestBody);\n\n          case 8:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 11;\n              break;\n            }\n\n            throw new Error(\"unknown server response while pinning JSON to IPFS: \".concat(result));\n\n          case 11:\n            _context.next = 13;\n            return result.json();\n\n          case 13:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](5);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[5, 16]]);\n  }));\n  return _pinJSONToIPFS.apply(this, arguments);\n}"
        },
        {
          "id": "./src/commands/pinning/pinJobs/pinJobs.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinJobs/pinJobs.js",
          "name": "./src/commands/pinning/pinJobs/pinJobs.js",
          "index": 50,
          "index2": 49,
          "size": 2267,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "issuerId": "./src/index.js",
          "issuerName": "./src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./commands/pinning/pinJobs/pinJobs",
              "loc": "19:0-57"
            },
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony import specifier",
              "userRequest": "./commands/pinning/pinJobs/pinJobs",
              "loc": "55:19-26"
            }
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport queryBuilder from './queryBuilder';\n/**\n * Pin Jobs\n * @param {*} filters\n * @returns {Promise}\n */\n\nexport default function pinJobs(_x) {\n  return _pinJobs.apply(this, arguments);\n}\n\nfunction _pinJobs() {\n  _pinJobs = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(filters) {\n    var endpoint, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            endpoint = 'pinning/pinJobs';\n            if (filters) endpoint = queryBuilder(endpoint, filters);\n            _context.prev = 2;\n            _context.next = 5;\n            return this.fetch(endpoint);\n\n          case 5:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 10;\n              break;\n            }\n\n            throw new Error(\"unknown server response while attempting to retrieve pin jobs: \".concat(result));\n\n          case 10:\n            _context.next = 12;\n            return result.json();\n\n          case 12:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 13:\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](2);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[2, 15]]);\n  }));\n  return _pinJobs.apply(this, arguments);\n}"
        },
        {
          "id": "./src/commands/pinning/pinJobs/queryBuilder.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinJobs/queryBuilder.js",
          "name": "./src/commands/pinning/pinJobs/queryBuilder.js",
          "index": 51,
          "index2": 48,
          "size": 2184,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinJobs/pinJobs.js",
          "issuerId": "./src/commands/pinning/pinJobs/pinJobs.js",
          "issuerName": "./src/commands/pinning/pinJobs/pinJobs.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            },
            {
              "id": "./src/commands/pinning/pinJobs/pinJobs.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinJobs/pinJobs.js",
              "name": "./src/commands/pinning/pinJobs/pinJobs.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./src/commands/pinning/pinJobs/pinJobs.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinJobs/pinJobs.js",
              "module": "./src/commands/pinning/pinJobs/pinJobs.js",
              "moduleName": "./src/commands/pinning/pinJobs/pinJobs.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./queryBuilder",
              "loc": "5:0-42"
            },
            {
              "moduleId": "./src/commands/pinning/pinJobs/pinJobs.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinJobs/pinJobs.js",
              "module": "./src/commands/pinning/pinJobs/pinJobs.js",
              "moduleName": "./src/commands/pinning/pinJobs/pinJobs.js",
              "type": "harmony import specifier",
              "userRequest": "./queryBuilder",
              "loc": "24:36-48"
            }
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 3,
          "source": "import isIPFS from 'is-ipfs';\n/**\n * Query Buidler\n * @param {*} filters\n * @returns {*}\n */\n\nexport default function queryBuilder(filters) {\n  if (!filters) return this.baseUrl;\n  var newUrl = baseUrl; // we want to make sure that the \"?\" character is only applied once\n\n  var firstFilterApplied = false;\n\n  function addFilter(newFilter) {\n    if (firstFilterApplied) {\n      newUrl = \"\".concat(newUrl, \"&\").concat(newFilter);\n    } else {\n      firstFilterApplied = true;\n      newUrl = \"\".concat(newUrl, \"?\").concat(newFilter);\n    }\n  }\n\n  if (filters) {\n    //  now we need to construct the actual URL based on the given filters provided\n    if (filters.sort) {\n      if (filters.sort === 'ASC' || filters.sort === 'DESC') {\n        addFilter(\"sort=\".concat(filters.sort));\n      } else {\n        throw new Error(\"Unknown sort value: \".concat(filters.sort, \" provided\"));\n      }\n    }\n\n    if (filters.status) {\n      if (filters.status === 'searching' || filters.status === 'expired' || filters.status === 'over_free_limit' || filters.status === 'over_max_size' || filters.status === 'invalid_object' || filters.status === 'bad_host_node') {\n        addFilter(\"status=\".concat(filters.status));\n      } else {\n        throw new Error(\"Unknown status value: \".concat(filters.status, \" provided\"));\n      }\n    }\n\n    if (filters.ipfs_pin_hash) {\n      if (isIPFS.cid(filters.ipfs_pin_hash)) {\n        addFilter(\"ipfs_pin_hash=\".concat(filters.ipfs_pin_hash));\n      } else {\n        throw new Error(\"Invalid IPFS hash: \".concat(filters.ipfs_pin_hash));\n      }\n    }\n\n    if (filters.limit) {\n      if (Number.isInteger(filters.limit) && filters.limit > 0 && filters.limit < 100) {\n        addFilter(\"limit=\".concat(filters.limit));\n      } else {\n        throw new Error(\"Invalid limit: \".concat(filters.limit, \". Valid limits are 1-100\"));\n      }\n    }\n\n    if (filters.offset) {\n      if (Number.isInteger(filters.offset) && filters.offset > 0) {\n        addFilter(\"offset=\".concat(filters.offset));\n      } else {\n        throw new Error(\"Invalid offset: \".concat(filters.offset, \". Please provide a positive integer for the offset\"));\n      }\n    }\n  }\n\n  return newUrl;\n}"
        },
        {
          "id": "./src/commands/pinning/unpin.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/unpin.js",
          "name": "./src/commands/pinning/unpin.js",
          "index": 52,
          "index2": 50,
          "size": 2545,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "issuerId": "./src/index.js",
          "issuerName": "./src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./commands/pinning/unpin",
              "loc": "20:0-45"
            },
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony import specifier",
              "userRequest": "./commands/pinning/unpin",
              "loc": "56:17-22"
            }
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport isIPFS from 'is-ipfs';\n/**\n * Unpin\n * @param {string} hashToUnpin\n * @returns {Promise}\n */\n\nexport default function unpin(_x) {\n  return _unpin.apply(this, arguments);\n}\n\nfunction _unpin() {\n  _unpin = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(hashToUnpin) {\n    var endpoint, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (hashToUnpin) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error('hashToUnpin value is required for removing a pin from Pinata');\n\n          case 2:\n            if (isIPFS.cid(hashToUnpin)) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error(\"\".concat(hashToUnpin, \" is an invalid IPFS CID\"));\n\n          case 4:\n            endpoint = \"pinning/unpin/\".concat(hashToUnpin);\n            _context.prev = 5;\n            _context.next = 8;\n            return this.del(endpoint);\n\n          case 8:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 11;\n              break;\n            }\n\n            throw new Error(\"unknown server response while removing pin from IPFS: \".concat(result));\n\n          case 11:\n            _context.next = 13;\n            return result.json();\n\n          case 13:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](5);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[5, 16]]);\n  }));\n  return _unpin.apply(this, arguments);\n}"
        },
        {
          "id": "./src/commands/pinning/userPinPolicy.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/userPinPolicy.js",
          "name": "./src/commands/pinning/userPinPolicy.js",
          "index": 53,
          "index2": 51,
          "size": 2494,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "issuerId": "./src/index.js",
          "issuerName": "./src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./commands/pinning/userPinPolicy",
              "loc": "21:0-61"
            },
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony import specifier",
              "userRequest": "./commands/pinning/userPinPolicy",
              "loc": "57:25-38"
            }
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * User Pin Policy\n * @param {*} newPinPolicy\n * @returns {Promise}\n */\nexport default function userPinPolicy(_x) {\n  return _userPinPolicy.apply(this, arguments);\n}\n\nfunction _userPinPolicy() {\n  _userPinPolicy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(newPinPolicy) {\n    var endpoint, body, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            this.validatePinPolicyStructure(newPinPolicy);\n\n            if (newPinPolicy) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error('newPinPolicy is required for changing the pin policy of a pin');\n\n          case 3:\n            endpoint = 'pinning/userPinPolicy';\n            body = {\n              newPinPolicy: newPinPolicy\n            };\n            _context.prev = 5;\n            _context.next = 8;\n            return this.put(endpoint, body);\n\n          case 8:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 11;\n              break;\n            }\n\n            throw new Error(\"unknown server response while changing pin policy for user: \".concat(result));\n\n          case 11:\n            _context.next = 13;\n            return result.json();\n\n          case 13:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](5);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[5, 16]]);\n  }));\n  return _userPinPolicy.apply(this, arguments);\n}"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js",
          "index": 1,
          "index2": 56,
          "size": 10990,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "issuerId": 0,
          "issuerName": "multi ./src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": 0,
              "moduleIdentifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "multi ./src/index.js",
              "moduleName": "multi ./src/index.js",
              "type": "single entry",
              "userRequest": "/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "loc": "main[0]"
            }
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 1,
          "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport merge from 'lodash.merge';\nimport { validateJWT, validateHostNodes, validateMetadata, validatePinPolicyStructure, validatePinataOptions } from './util/validators';\nimport handleError from './util/errorResponse';\nimport pinByHash from './commands/pinning/pinByHash';\nimport hashMetadata from './commands/pinning/hashMetadata';\nimport hashPinPolicy from './commands/pinning/hashPinPolicy';\nimport pinFileToIPFS from './commands/pinning/pinFileToIPFS';\nimport pinJSONToIPFS from './commands/pinning/pinJSONToIPFS';\nimport pinJobs from './commands/pinning/pinJobs/pinJobs';\nimport unpin from './commands/pinning/unpin';\nimport userPinPolicy from './commands/pinning/userPinPolicy';\nimport testAuthentication from './commands/data/testAuthentication';\nimport pinList from './commands/data/pinList/pinList';\nimport userPinnedDataTotal from './commands/data/userPinnedDataTotal';\n/**\n * Pinata Client\n *\n * @param {string} pinataJWT\n * @returns {PinataClient}\n */\n\nvar PinataSDK = /*#__PURE__*/function () {\n  function PinataSDK(pinataJWT) {\n    _classCallCheck(this, PinataSDK);\n\n    if (!pinataJWT || !pinataJWT.length) throw new Error('Invalid Pinata JWT: ' + pinataJWT);\n    this.jwt = pinataJWT;\n    this.baseURL = 'https://api.pinata.cloud';\n    this.defaultOpts = {\n      headers: {\n        Authorization: \"Bearer \".concat(this.jwt)\n      }\n    };\n    this.handleError = handleError.bind(this);\n    this.validateJWT = validateJWT.bind(this);\n    this.validateHostNodes = validateHostNodes.bind(this);\n    this.validateMetadata = validateMetadata.bind(this);\n    this.validatePinPolicyStructure = validatePinPolicyStructure.bind(this);\n    this.validatePinataOptions = validatePinataOptions.bind(this);\n    this.pinByHash = pinByHash.bind(this);\n    this.hashMetadata = hashMetadata.bind(this);\n    this.hashPinPolicy = hashPinPolicy.bind(this);\n    this.pinFileToIPFS = pinFileToIPFS.bind(this);\n    this.pinJSONToIPFS = pinJSONToIPFS.bind(this);\n    this.pinJobs = pinJobs.bind(this);\n    this.unpin = unpin.bind(this);\n    this.userPinPolicy = userPinPolicy.bind(this);\n    this.testAuthentication = testAuthentication.bind(this);\n    this.pinList = pinList.bind(this);\n    this.userPinnedDataTotal = userPinnedDataTotal.bind(this);\n  }\n\n  _createClass(PinataSDK, [{\n    key: \"makeUrl\",\n    value: function makeUrl(endpoint) {\n      return \"\".concat(this.baseURL, \"/\").concat(endpoint);\n    }\n  }, {\n    key: \"makeOpts\",\n    value: function makeOpts() {\n      for (var _len = arguments.length, opts = new Array(_len), _key = 0; _key < _len; _key++) {\n        opts[_key] = arguments[_key];\n      }\n\n      var newOpts = merge.apply(void 0, [this.defaultOpts].concat(opts)); // Make sure nobody nukes the auth header on accident\n\n      newOpts.headers.Authorization = this.defaultOpts.headers.Authorization;\n      return newOpts;\n    }\n  }, {\n    key: \"defaultInterceptor\",\n    value: function defaultInterceptor(url, opts) {\n      return {\n        url: url,\n        options: opts\n      };\n    }\n  }, {\n    key: \"fetch\",\n    value: function (_fetch) {\n      function fetch(_x) {\n        return _fetch.apply(this, arguments);\n      }\n\n      fetch.toString = function () {\n        return _fetch.toString();\n      };\n\n      return fetch;\n    }( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(endpoint) {\n        var opts,\n            intercept,\n            _intercept,\n            url,\n            options,\n            response,\n            _args = arguments;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                opts = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                intercept = _args.length > 2 && _args[2] !== undefined ? _args[2] : this.defaultInterceptor;\n                _intercept = intercept(this.makeUrl(endpoint), this.makeOpts(opts)), url = _intercept.url, options = _intercept.options;\n                _context.next = 5;\n                return fetch(url, options);\n\n              case 5:\n                response = _context.sent;\n                return _context.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x2) {\n        return _ref.apply(this, arguments);\n      };\n    }())\n  }, {\n    key: \"post\",\n    value: function () {\n      var _post = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(endpoint, data) {\n        var opts,\n            intercept,\n            _intercept2,\n            url,\n            options,\n            response,\n            _args2 = arguments;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                opts = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};\n                intercept = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : this.defaultInterceptor;\n                _intercept2 = intercept(this.makeUrl(endpoint), this.makeOpts(opts, {\n                  method: 'POST',\n                  body: data\n                })), url = _intercept2.url, options = _intercept2.options;\n                console.log('@@post with opts', url, options);\n                _context2.next = 6;\n                return fetch(url, options);\n\n              case 6:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", response);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function post(_x3, _x4) {\n        return _post.apply(this, arguments);\n      }\n\n      return post;\n    }()\n  }, {\n    key: \"postJSON\",\n    value: function () {\n      var _postJSON = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(endpoint, data) {\n        var opts,\n            _args3 = arguments;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                opts = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : {};\n                _context3.next = 3;\n                return this.post(endpoint, typeof data === 'string' ? data : JSON.stringify(data), opts);\n\n              case 3:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function postJSON(_x5, _x6) {\n        return _postJSON.apply(this, arguments);\n      }\n\n      return postJSON;\n    }()\n  }, {\n    key: \"put\",\n    value: function () {\n      var _put = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(endpoint, data) {\n        var opts,\n            intercept,\n            _intercept3,\n            url,\n            options,\n            response,\n            _args4 = arguments;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                opts = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};\n                intercept = _args4.length > 3 && _args4[3] !== undefined ? _args4[3] : this.defaultInterceptor;\n                _intercept3 = intercept(this.makeUrl(endpoint), this.makeOpts(opts, {\n                  method: 'PUT',\n                  body: typeof data === 'string' ? data : JSON.stringify(data)\n                })), url = _intercept3.url, options = _intercept3.options;\n                _context4.next = 5;\n                return fetch(url, options);\n\n              case 5:\n                response = _context4.sent;\n                return _context4.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function put(_x7, _x8) {\n        return _put.apply(this, arguments);\n      }\n\n      return put;\n    }()\n  }, {\n    key: \"del\",\n    value: function () {\n      var _del = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(endpoint) {\n        var intercept,\n            _intercept4,\n            url,\n            options,\n            response,\n            _args5 = arguments;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                intercept = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : this.defaultInterceptor;\n                _intercept4 = intercept(this.makeUrl(endpoint), this.makeOpts(opts, {\n                  method: 'DELETE'\n                })), url = _intercept4.url, options = _intercept4.options;\n                _context5.next = 4;\n                return fetch(url, options);\n\n              case 4:\n                response = _context5.sent;\n                return _context5.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function del(_x9) {\n        return _del.apply(this, arguments);\n      }\n\n      return del;\n    }()\n  }]);\n\n  return PinataSDK;\n}();\n\nexport default PinataSDK;"
        },
        {
          "id": "./src/util/errorResponse.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/errorResponse.js",
          "name": "./src/util/errorResponse.js",
          "index": 44,
          "index2": 42,
          "size": 339,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "issuerId": "./src/index.js",
          "issuerName": "./src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./util/errorResponse",
              "loc": "13:0-47"
            },
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony import specifier",
              "userRequest": "./util/errorResponse",
              "loc": "44:23-34"
            }
          ],
          "providedExports": [
            "default"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "export default function handleError(error) {\n  if (error && error.response && error.response && error.response.data && error.response.data.error) return error.response.data.error;else if (error.data && error.data.error) return error.data.error;else if (error.response && error.response.error) return error.response.error;\n  return error;\n}"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js",
          "index": 5,
          "index2": 41,
          "size": 3495,
          "cacheable": true,
          "built": true,
          "optional": false,
          "prefetched": false,
          "chunks": [
            "main"
          ],
          "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "issuerId": "./src/index.js",
          "issuerName": "./src/index.js",
          "issuerPath": [
            {
              "id": 0,
              "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "multi ./src/index.js"
            },
            {
              "id": "./src/index.js",
              "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "name": "./src/index.js"
            }
          ],
          "failed": false,
          "errors": 0,
          "warnings": 0,
          "assets": [],
          "reasons": [
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony side effect evaluation",
              "userRequest": "./util/validators",
              "loc": "12:0-136"
            },
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony import specifier",
              "userRequest": "./util/validators",
              "loc": "45:23-34"
            },
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony import specifier",
              "userRequest": "./util/validators",
              "loc": "46:29-46"
            },
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony import specifier",
              "userRequest": "./util/validators",
              "loc": "47:28-44"
            },
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony import specifier",
              "userRequest": "./util/validators",
              "loc": "48:38-64"
            },
            {
              "moduleId": "./src/index.js",
              "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
              "module": "./src/index.js",
              "moduleName": "./src/index.js",
              "type": "harmony import specifier",
              "userRequest": "./util/validators",
              "loc": "49:33-54"
            }
          ],
          "providedExports": [
            "validateJWT",
            "validateHostNodes",
            "validateMetadata",
            "validatePinPolicyStructure",
            "validatePinataOptions"
          ],
          "optimizationBailout": [],
          "depth": 2,
          "source": "function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport isIPFS from 'is-ipfs';\n/**\n * Validate JWT Keys\n * @param {string} pinataJWT\n */\n\nexport function validateJWT(pinataJWT) {\n  if (!pinataJWT || pinataJWT === '') throw new Error('No pinataJWT provided! Please provide your pinata api key as an argument when you start this script');\n}\n/**\n * Validate host Nodes\n * @param {*} hostNodes\n */\n\nexport function validateHostNodes(hostNodes) {\n  if (!Array.isArray(hostNodes)) throw new Error('host_nodes value must be an array');\n  hostNodes.forEach(function (node) {\n    if (!isIPFS.peerMultiaddr(node)) throw new Error(\"host_node array entry: \".concat(node, \" is not a valid peer multiaddr\"));\n  });\n}\n/**\n * Validate MetaData\n * @param {*} metadata\n */\n\nexport function validateMetadata(metadata) {\n  if (metadata.name) if (!(typeof metadata.name === 'string' || metadata.name instanceof String)) throw new Error('metadata name must be of type string');\n\n  if (metadata.keyvalues) {\n    if (!(_typeof(metadata.keyvalues) === 'object')) throw new Error('metatadata keyvalues must be an object'); // @todo wtf is this\n\n    var i = 0;\n    Object.entries(metadata.keyvalues).forEach(function (keyValue) {\n      if (i > 9) throw new Error('No more than 10 keyvalues can be provided for metadata entries'); //  we want to make sure that the input is a string, a boolean, or a number, so we don't get an object passed in by accident\n\n      if (!(typeof keyValue[1] === 'string' || typeof keyValue[1] === 'boolean' || !isNaN(keyValue[1]))) throw new Error('Metadata keyvalue values must be strings, booleans, or numbers');\n      i++;\n    });\n  }\n}\n/**\n * Validate Pin Policy Structure\n * @param {*} pinPolicy\n */\n\nexport function validatePinPolicyStructure(pinPolicy) {\n  //this function takes in a pin policy and checks the JSON structure to make sure it's valid\n  if (!pinPolicy) throw new Error('No pin policy provided');\n  if (!pinPolicy.regions) throw new Error('No regions provided in pin policy');\n  if (pinPolicy.regions.length) pinPolicy.regions.forEach(function (region) {\n    if (!region.id || !(Object.prototype.toString.call(region.id) === '[object String]')) throw new Error('region id must be a string');\n    if (!(region.desiredReplicationCount || region.desiredReplicationCount === 0) || !Number.isInteger(region.desiredReplicationCount)) throw new Error('desiredReplicationCount must be an integer');\n  });\n}\n/**\n * Validate Pinata Options\n * @param {*} options\n */\n\nexport function validatePinataOptions(options) {\n  if (_typeof(options) !== 'object') throw new Error('options must be an object');\n  if (options.cidVersion) // eslint-disable-next-line eqeqeq\n    if (options.cidVersion != 0 && options.cidVersion != 1) throw new Error('unsupported or invalid cidVersion');\n  if (options.wrapWithDirectory) // eslint-disable-next-line eqeqeq\n    if (options.wrapWithDirectory !== true && options.wrapWithDirectory !== false) throw new Error('wrapWithDirectory must be a boolean value of true or false');\n  if (options.hostNodes) validateHostNodes(options.hostNodes);\n  if (options.customPinPolicy) validatePinPolicyStructure(options.customPinPolicy);\n}"
        }
      ],
      "filteredModules": 0,
      "origins": [
        {
          "module": "",
          "moduleIdentifier": "",
          "moduleName": "",
          "loc": "main",
          "request": null,
          "reasons": []
        }
      ]
    }
  ],
  "modules": [
    {
      "id": 0,
      "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
      "name": "multi ./src/index.js",
      "index": 0,
      "index2": 57,
      "size": 28,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": null,
      "issuerId": null,
      "issuerName": null,
      "issuerPath": null,
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": null,
          "moduleIdentifier": null,
          "module": null,
          "moduleName": null,
          "type": "multi entry"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 0
    },
    {
      "id": "./node_modules/base-x/src/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/base-x/src/index.js",
      "name": "./node_modules/base-x/src/index.js",
      "index": 12,
      "index2": 8,
      "size": 4204,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/bs58/index.js",
      "issuerId": "./node_modules/bs58/index.js",
      "issuerName": "./node_modules/bs58/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/bs58/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/bs58/index.js",
          "name": "./node_modules/bs58/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/bs58/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/bs58/index.js",
          "module": "./node_modules/bs58/index.js",
          "moduleName": "./node_modules/bs58/index.js",
          "type": "cjs require",
          "userRequest": "base-x",
          "loc": "1:12-29"
        },
        {
          "moduleId": "./node_modules/multibase/src/constants.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
          "module": "./node_modules/multibase/src/constants.js",
          "moduleName": "./node_modules/multibase/src/constants.js",
          "type": "cjs require",
          "userRequest": "base-x",
          "loc": "4:14-31"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 5,
      "source": "'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n"
    },
    {
      "id": "./node_modules/base64-js/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/base64-js/index.js",
      "name": "./node_modules/base64-js/index.js",
      "index": 8,
      "index2": 3,
      "size": 3932,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
      "issuerId": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
      "issuerName": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
          "name": "./node_modules/node-libs-browser/node_modules/buffer/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
          "module": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "moduleName": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "type": "cjs require",
          "userRequest": "base64-js",
          "loc": "11:13-33"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 5,
      "source": "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n"
    },
    {
      "id": "./node_modules/bs58/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/bs58/index.js",
      "name": "./node_modules/bs58/index.js",
      "index": 11,
      "index2": 9,
      "size": 140,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
      "issuerId": "./node_modules/is-ipfs/src/index.js",
      "issuerName": "./node_modules/is-ipfs/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/is-ipfs/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "module": "./node_modules/is-ipfs/src/index.js",
          "moduleName": "./node_modules/is-ipfs/src/index.js",
          "type": "cjs require",
          "userRequest": "bs58",
          "loc": "3:15-30"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 4,
      "source": "var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n"
    },
    {
      "id": "./node_modules/cids/src/cid-util.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/cid-util.js",
      "name": "./node_modules/cids/src/cid-util.js",
      "index": 41,
      "index2": 33,
      "size": 1295,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
      "issuerId": "./node_modules/cids/src/index.js",
      "issuerName": "./node_modules/cids/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/cids/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "name": "./node_modules/cids/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/cids/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "module": "./node_modules/cids/src/index.js",
          "moduleName": "./node_modules/cids/src/index.js",
          "type": "cjs require",
          "userRequest": "./cid-util",
          "loc": "8:16-37"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 5,
      "source": "'use strict'\n\nconst mh = require('multihashes')\nconst { Buffer } = require('buffer')\nvar CIDUtil = {\n  /**\n   * Test if the given input is a valid CID object.\n   * Returns an error message if it is not.\n   * Returns undefined if it is a valid CID.\n   *\n   * @param {any} other\n   * @returns {string}\n   */\n  checkCIDComponents: function (other) {\n    if (other == null) {\n      return 'null values are not valid CIDs'\n    }\n\n    if (!(other.version === 0 || other.version === 1)) {\n      return 'Invalid version, must be a number equal to 1 or 0'\n    }\n\n    if (typeof other.codec !== 'string') {\n      return 'codec must be string'\n    }\n\n    if (other.version === 0) {\n      if (other.codec !== 'dag-pb') {\n        return \"codec must be 'dag-pb' for CIDv0\"\n      }\n      if (other.multibaseName !== 'base58btc') {\n        return \"multibaseName must be 'base58btc' for CIDv0\"\n      }\n    }\n\n    if (!Buffer.isBuffer(other.multihash)) {\n      return 'multihash must be a Buffer'\n    }\n\n    try {\n      mh.validate(other.multihash)\n    } catch (err) {\n      let errorMsg = err.message\n      if (!errorMsg) { // Just in case mh.validate() throws an error with empty error message\n        errorMsg = 'Multihash validation failed'\n      }\n      return errorMsg\n    }\n  }\n}\n\nmodule.exports = CIDUtil\n"
    },
    {
      "id": "./node_modules/cids/src/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
      "name": "./node_modules/cids/src/index.js",
      "index": 33,
      "index2": 35,
      "size": 7427,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
      "issuerId": "./node_modules/is-ipfs/src/index.js",
      "issuerName": "./node_modules/is-ipfs/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/is-ipfs/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "module": "./node_modules/is-ipfs/src/index.js",
          "moduleName": "./node_modules/is-ipfs/src/index.js",
          "type": "cjs require",
          "userRequest": "cids",
          "loc": "8:12-27"
        },
        {
          "moduleId": "./node_modules/multiaddr/src/convert.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
          "module": "./node_modules/multiaddr/src/convert.js",
          "moduleName": "./node_modules/multiaddr/src/convert.js",
          "type": "cjs require",
          "userRequest": "cids",
          "loc": "6:12-27"
        },
        {
          "moduleId": "./node_modules/multiaddr/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
          "module": "./node_modules/multiaddr/src/index.js",
          "moduleName": "./node_modules/multiaddr/src/index.js",
          "type": "cjs require",
          "userRequest": "cids",
          "loc": "8:12-27"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 4,
      "source": "'use strict'\n\nconst { Buffer } = require('buffer')\nconst mh = require('multihashes')\nconst multibase = require('multibase')\nconst multicodec = require('multicodec')\nconst codecs = require('multicodec/src/base-table.json')\nconst CIDUtil = require('./cid-util')\nconst withIs = require('class-is')\n\n/**\n * @typedef {Object} SerializedCID\n * @param {string} codec\n * @param {number} version\n * @param {Buffer} multihash\n */\n\n/**\n * Test if the given input is a CID.\n * @function isCID\n * @memberof CID\n * @static\n * @param {any} other\n * @returns {bool}\n */\n\n/**\n * Class representing a CID `<mbase><version><mcodec><mhash>`\n * , as defined in [ipld/cid](https://github.com/multiformats/cid).\n * @class CID\n */\nclass CID {\n  /**\n   * Create a new CID.\n   *\n   * The algorithm for argument input is roughly:\n   * ```\n   * if (cid)\n   *   -> create a copy\n   * else if (str)\n   *   if (1st char is on multibase table) -> CID String\n   *   else -> bs58 encoded multihash\n   * else if (Buffer)\n   *   if (1st byte is 0 or 1) -> CID\n   *   else -> multihash\n   * else if (Number)\n   *   -> construct CID by parts\n   * ```\n   *\n   * @param {string|Buffer|CID} version\n   * @param {string} [codec]\n   * @param {Buffer} [multihash]\n   * @param {string} [multibaseName]\n   *\n   * @example\n   * new CID(<version>, <codec>, <multihash>, <multibaseName>)\n   * new CID(<cidStr>)\n   * new CID(<cid.buffer>)\n   * new CID(<multihash>)\n   * new CID(<bs58 encoded multihash>)\n   * new CID(<cid>)\n   */\n  constructor (version, codec, multihash, multibaseName) {\n    if (_CID.isCID(version)) {\n      // version is an exising CID instance\n      const cid = version\n      this.version = cid.version\n      this.codec = cid.codec\n      this.multihash = Buffer.from(cid.multihash)\n      // Default guard for when a CID < 0.7 is passed with no multibaseName\n      this.multibaseName = cid.multibaseName || (cid.version === 0 ? 'base58btc' : 'base32')\n      return\n    }\n\n    if (typeof version === 'string') {\n      // e.g. 'base32' or false\n      const baseName = multibase.isEncoded(version)\n      if (baseName) {\n        // version is a CID String encoded with multibase, so v1\n        const cid = multibase.decode(version)\n        this.version = parseInt(cid.slice(0, 1).toString('hex'), 16)\n        this.codec = multicodec.getCodec(cid.slice(1))\n        this.multihash = multicodec.rmPrefix(cid.slice(1))\n        this.multibaseName = baseName\n      } else {\n        // version is a base58btc string multihash, so v0\n        this.version = 0\n        this.codec = 'dag-pb'\n        this.multihash = mh.fromB58String(version)\n        this.multibaseName = 'base58btc'\n      }\n      CID.validateCID(this)\n      Object.defineProperty(this, 'string', { value: version })\n      return\n    }\n\n    if (Buffer.isBuffer(version)) {\n      const firstByte = version.slice(0, 1)\n      const v = parseInt(firstByte.toString('hex'), 16)\n      if (v === 1) {\n        // version is a CID buffer\n        const cid = version\n        this.version = v\n        this.codec = multicodec.getCodec(cid.slice(1))\n        this.multihash = multicodec.rmPrefix(cid.slice(1))\n        this.multibaseName = 'base32'\n      } else {\n        // version is a raw multihash buffer, so v0\n        this.version = 0\n        this.codec = 'dag-pb'\n        this.multihash = version\n        this.multibaseName = 'base58btc'\n      }\n      CID.validateCID(this)\n      return\n    }\n\n    // otherwise, assemble the CID from the parameters\n\n    /**\n     * @type {number}\n     */\n    this.version = version\n\n    /**\n     * @type {string}\n     */\n    this.codec = codec\n\n    /**\n     * @type {Buffer}\n     */\n    this.multihash = multihash\n\n    /**\n     * @type {string}\n     */\n    this.multibaseName = multibaseName || (version === 0 ? 'base58btc' : 'base32')\n\n    CID.validateCID(this)\n  }\n\n  /**\n   * The CID as a `Buffer`\n   *\n   * @return {Buffer}\n   * @readonly\n   *\n   * @memberOf CID\n   */\n  get buffer () {\n    let buffer = this._buffer\n\n    if (!buffer) {\n      if (this.version === 0) {\n        buffer = this.multihash\n      } else if (this.version === 1) {\n        buffer = Buffer.concat([\n          Buffer.from('01', 'hex'),\n          multicodec.getCodeVarint(this.codec),\n          this.multihash\n        ])\n      } else {\n        throw new Error('unsupported version')\n      }\n\n      // Cache this buffer so it doesn't have to be recreated\n      Object.defineProperty(this, '_buffer', { value: buffer })\n    }\n\n    return buffer\n  }\n\n  /**\n   * Get the prefix of the CID.\n   *\n   * @returns {Buffer}\n   * @readonly\n   */\n  get prefix () {\n    return Buffer.concat([\n      Buffer.from(`0${this.version}`, 'hex'),\n      multicodec.getCodeVarint(this.codec),\n      mh.prefix(this.multihash)\n    ])\n  }\n\n  /**\n   * Convert to a CID of version `0`.\n   *\n   * @returns {CID}\n   */\n  toV0 () {\n    if (this.codec !== 'dag-pb') {\n      throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n    }\n\n    const { name, length } = mh.decode(this.multihash)\n\n    if (name !== 'sha2-256') {\n      throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n    }\n\n    if (length !== 32) {\n      throw new Error('Cannot convert non 32 byte multihash CID to CIDv0')\n    }\n\n    return new _CID(0, this.codec, this.multihash)\n  }\n\n  /**\n   * Convert to a CID of version `1`.\n   *\n   * @returns {CID}\n   */\n  toV1 () {\n    return new _CID(1, this.codec, this.multihash)\n  }\n\n  /**\n   * Encode the CID into a string.\n   *\n   * @param {string} [base=this.multibaseName] - Base encoding to use.\n   * @returns {string}\n   */\n  toBaseEncodedString (base = this.multibaseName) {\n    if (this.string && base === this.multibaseName) {\n      return this.string\n    }\n    let str = null\n    if (this.version === 0) {\n      if (base !== 'base58btc') {\n        throw new Error('not supported with CIDv0, to support different bases, please migrate the instance do CIDv1, you can do that through cid.toV1()')\n      }\n      str = mh.toB58String(this.multihash)\n    } else if (this.version === 1) {\n      str = multibase.encode(base, this.buffer).toString()\n    } else {\n      throw new Error('unsupported version')\n    }\n    if (base === this.multibaseName) {\n      // cache the string value\n      Object.defineProperty(this, 'string', { value: str })\n    }\n    return str\n  }\n\n  /**\n   * CID(QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n)\n   *\n   * @returns {String}\n   */\n  [Symbol.for('nodejs.util.inspect.custom')] () {\n    return 'CID(' + this.toString() + ')'\n  }\n\n  toString (base) {\n    return this.toBaseEncodedString(base)\n  }\n\n  /**\n   * Serialize to a plain object.\n   *\n   * @returns {SerializedCID}\n   */\n  toJSON () {\n    return {\n      codec: this.codec,\n      version: this.version,\n      hash: this.multihash\n    }\n  }\n\n  /**\n   * Compare equality with another CID.\n   *\n   * @param {CID} other\n   * @returns {bool}\n   */\n  equals (other) {\n    return this.codec === other.codec &&\n      this.version === other.version &&\n      this.multihash.equals(other.multihash)\n  }\n\n  /**\n   * Test if the given input is a valid CID object.\n   * Throws if it is not.\n   *\n   * @param {any} other\n   * @returns {void}\n   */\n  static validateCID (other) {\n    const errorMsg = CIDUtil.checkCIDComponents(other)\n    if (errorMsg) {\n      throw new Error(errorMsg)\n    }\n  }\n}\n\nconst _CID = withIs(CID, {\n  className: 'CID',\n  symbolName: '@ipld/js-cid/CID'\n})\n\n_CID.codecs = codecs\n\nmodule.exports = _CID\n"
    },
    {
      "id": "./node_modules/class-is/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/class-is/index.js",
      "name": "./node_modules/class-is/index.js",
      "index": 42,
      "index2": 34,
      "size": 2027,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
      "issuerId": "./node_modules/cids/src/index.js",
      "issuerName": "./node_modules/cids/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/cids/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "name": "./node_modules/cids/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/cids/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "module": "./node_modules/cids/src/index.js",
          "moduleName": "./node_modules/cids/src/index.js",
          "type": "cjs require",
          "userRequest": "class-is",
          "loc": "9:15-34"
        },
        {
          "moduleId": "./node_modules/multiaddr/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
          "module": "./node_modules/multiaddr/src/index.js",
          "moduleName": "./node_modules/multiaddr/src/index.js",
          "type": "cjs require",
          "userRequest": "class-is",
          "loc": "9:15-34"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 5,
      "source": "'use strict';\n\nfunction withIs(Class, { className, symbolName }) {\n    const symbol = Symbol.for(symbolName);\n\n    const ClassIsWrapper = {\n        // The code below assigns the class wrapper to an object to trick\n        // JavaScript engines to show the name of the extended class when\n        // logging an instances.\n        // We are assigning an anonymous class (class wrapper) to the object\n        // with key `className` to keep the correct name.\n        // If this is not supported it falls back to logging `ClassIsWrapper`.\n        [className]: class extends Class {\n            constructor(...args) {\n                super(...args);\n                Object.defineProperty(this, symbol, { value: true });\n            }\n\n            get [Symbol.toStringTag]() {\n                return className;\n            }\n        },\n    }[className];\n\n    ClassIsWrapper[`is${className}`] = (obj) => !!(obj && obj[symbol]);\n\n    return ClassIsWrapper;\n}\n\nfunction withIsProto(Class, { className, symbolName, withoutNew }) {\n    const symbol = Symbol.for(symbolName);\n\n    /* eslint-disable object-shorthand */\n    const ClassIsWrapper = {\n        [className]: function (...args) {\n            if (withoutNew && !(this instanceof ClassIsWrapper)) {\n                return new ClassIsWrapper(...args);\n            }\n\n            const _this = Class.call(this, ...args) || this;\n\n            if (_this && !_this[symbol]) {\n                Object.defineProperty(_this, symbol, { value: true });\n            }\n\n            return _this;\n        },\n    }[className];\n    /* eslint-enable object-shorthand */\n\n    ClassIsWrapper.prototype = Object.create(Class.prototype);\n    ClassIsWrapper.prototype.constructor = ClassIsWrapper;\n\n    Object.defineProperty(ClassIsWrapper.prototype, Symbol.toStringTag, {\n        get() {\n            return className;\n        },\n    });\n\n    ClassIsWrapper[`is${className}`] = (obj) => !!(obj && obj[symbol]);\n\n    return ClassIsWrapper;\n}\n\nmodule.exports = withIs;\nmodule.exports.proto = withIsProto;\n"
    },
    {
      "id": "./node_modules/ieee754/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/ieee754/index.js",
      "name": "./node_modules/ieee754/index.js",
      "index": 9,
      "index2": 4,
      "size": 2154,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
      "issuerId": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
      "issuerName": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
          "name": "./node_modules/node-libs-browser/node_modules/buffer/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
          "module": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "moduleName": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "type": "cjs require",
          "userRequest": "ieee754",
          "loc": "12:14-32"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 5,
      "source": "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n"
    },
    {
      "id": "./node_modules/ip-regex/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/ip-regex/index.js",
      "name": "./node_modules/ip-regex/index.js",
      "index": 31,
      "index2": 22,
      "size": 2168,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ip/index.js",
      "issuerId": "./node_modules/is-ip/index.js",
      "issuerName": "./node_modules/is-ip/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/multiaddr/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
          "name": "./node_modules/multiaddr/src/index.js"
        },
        {
          "id": "./node_modules/multiaddr/src/codec.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
          "name": "./node_modules/multiaddr/src/codec.js"
        },
        {
          "id": "./node_modules/multiaddr/src/convert.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
          "name": "./node_modules/multiaddr/src/convert.js"
        },
        {
          "id": "./node_modules/multiaddr/src/ip.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/ip.js",
          "name": "./node_modules/multiaddr/src/ip.js"
        },
        {
          "id": "./node_modules/is-ip/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ip/index.js",
          "name": "./node_modules/is-ip/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/is-ip/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ip/index.js",
          "module": "./node_modules/is-ip/index.js",
          "moduleName": "./node_modules/is-ip/index.js",
          "type": "cjs require",
          "userRequest": "ip-regex",
          "loc": "2:16-35"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 9,
      "source": "'use strict';\n\nconst word = '[a-fA-F\\\\d:]';\nconst b = options => options && options.includeBoundaries ?\n\t`(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))` :\n\t'';\n\nconst v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\n\nconst v6seg = '[a-fA-F\\\\d]{1,4}';\nconst v6 = `\n(?:\n(?:${v6seg}:){7}(?:${v6seg}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6seg}:){6}(?:${v4}|:${v6seg}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6seg}:){5}(?::${v4}|(?::${v6seg}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6seg}:){4}(?:(?::${v6seg}){0,1}:${v4}|(?::${v6seg}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6seg}:){3}(?:(?::${v6seg}){0,2}:${v4}|(?::${v6seg}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6seg}:){2}(?:(?::${v6seg}){0,3}:${v4}|(?::${v6seg}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6seg}:){1}(?:(?::${v6seg}){0,4}:${v4}|(?::${v6seg}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6seg}){0,5}:${v4}|(?::${v6seg}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim();\n\n// Pre-compile only the exact regexes because adding a global flag make regexes stateful\nconst v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\nconst v4exact = new RegExp(`^${v4}$`);\nconst v6exact = new RegExp(`^${v6}$`);\n\nconst ip = options => options && options.exact ?\n\tv46Exact :\n\tnew RegExp(`(?:${b(options)}${v4}${b(options)})|(?:${b(options)}${v6}${b(options)})`, 'g');\n\nip.v4 = options => options && options.exact ? v4exact : new RegExp(`${b(options)}${v4}${b(options)}`, 'g');\nip.v6 = options => options && options.exact ? v6exact : new RegExp(`${b(options)}${v6}${b(options)}`, 'g');\n\nmodule.exports = ip;\n"
    },
    {
      "id": "./node_modules/is-ip/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ip/index.js",
      "name": "./node_modules/is-ip/index.js",
      "index": 30,
      "index2": 23,
      "size": 335,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/ip.js",
      "issuerId": "./node_modules/multiaddr/src/ip.js",
      "issuerName": "./node_modules/multiaddr/src/ip.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/multiaddr/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
          "name": "./node_modules/multiaddr/src/index.js"
        },
        {
          "id": "./node_modules/multiaddr/src/codec.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
          "name": "./node_modules/multiaddr/src/codec.js"
        },
        {
          "id": "./node_modules/multiaddr/src/convert.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
          "name": "./node_modules/multiaddr/src/convert.js"
        },
        {
          "id": "./node_modules/multiaddr/src/ip.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/ip.js",
          "name": "./node_modules/multiaddr/src/ip.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/multiaddr/src/ip.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/ip.js",
          "module": "./node_modules/multiaddr/src/ip.js",
          "moduleName": "./node_modules/multiaddr/src/ip.js",
          "type": "cjs require",
          "userRequest": "is-ip",
          "loc": "4:13-29"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 8,
      "source": "'use strict';\nconst ipRegex = require('ip-regex');\n\nconst isIp = string => ipRegex({exact: true}).test(string);\nisIp.v4 = string => ipRegex.v4({exact: true}).test(string);\nisIp.v6 = string => ipRegex.v6({exact: true}).test(string);\nisIp.version = string => isIp(string) ? (isIp.v4(string) ? 4 : 6) : undefined;\n\nmodule.exports = isIp;\n"
    },
    {
      "id": "./node_modules/is-ipfs/src/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
      "name": "./node_modules/is-ipfs/src/index.js",
      "index": 6,
      "index2": 40,
      "size": 3886,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
      "issuerId": "./src/util/validators.js",
      "issuerName": "./src/util/validators.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./src/commands/pinning/hashMetadata.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/hashMetadata.js",
          "module": "./src/commands/pinning/hashMetadata.js",
          "moduleName": "./src/commands/pinning/hashMetadata.js",
          "type": "harmony side effect evaluation",
          "userRequest": "is-ipfs",
          "loc": "5:0-29"
        },
        {
          "moduleId": "./src/commands/pinning/hashMetadata.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/hashMetadata.js",
          "module": "./src/commands/pinning/hashMetadata.js",
          "moduleName": "./src/commands/pinning/hashMetadata.js",
          "type": "harmony import specifier",
          "userRequest": "is-ipfs",
          "loc": "32:16-22"
        },
        {
          "moduleId": "./src/commands/pinning/hashPinPolicy.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/hashPinPolicy.js",
          "module": "./src/commands/pinning/hashPinPolicy.js",
          "moduleName": "./src/commands/pinning/hashPinPolicy.js",
          "type": "harmony side effect evaluation",
          "userRequest": "is-ipfs",
          "loc": "5:0-29"
        },
        {
          "moduleId": "./src/commands/pinning/hashPinPolicy.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/hashPinPolicy.js",
          "module": "./src/commands/pinning/hashPinPolicy.js",
          "moduleName": "./src/commands/pinning/hashPinPolicy.js",
          "type": "harmony import specifier",
          "userRequest": "is-ipfs",
          "loc": "34:16-22"
        },
        {
          "moduleId": "./src/commands/pinning/pinByHash.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinByHash.js",
          "module": "./src/commands/pinning/pinByHash.js",
          "moduleName": "./src/commands/pinning/pinByHash.js",
          "type": "harmony side effect evaluation",
          "userRequest": "is-ipfs",
          "loc": "5:0-29"
        },
        {
          "moduleId": "./src/commands/pinning/pinByHash.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinByHash.js",
          "module": "./src/commands/pinning/pinByHash.js",
          "moduleName": "./src/commands/pinning/pinByHash.js",
          "type": "harmony import specifier",
          "userRequest": "is-ipfs",
          "loc": "32:16-22"
        },
        {
          "moduleId": "./src/commands/pinning/pinJobs/queryBuilder.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinJobs/queryBuilder.js",
          "module": "./src/commands/pinning/pinJobs/queryBuilder.js",
          "moduleName": "./src/commands/pinning/pinJobs/queryBuilder.js",
          "type": "harmony side effect evaluation",
          "userRequest": "is-ipfs",
          "loc": "1:0-29"
        },
        {
          "moduleId": "./src/commands/pinning/pinJobs/queryBuilder.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinJobs/queryBuilder.js",
          "module": "./src/commands/pinning/pinJobs/queryBuilder.js",
          "moduleName": "./src/commands/pinning/pinJobs/queryBuilder.js",
          "type": "harmony import specifier",
          "userRequest": "is-ipfs",
          "loc": "42:10-16"
        },
        {
          "moduleId": "./src/commands/pinning/unpin.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/unpin.js",
          "module": "./src/commands/pinning/unpin.js",
          "moduleName": "./src/commands/pinning/unpin.js",
          "type": "harmony side effect evaluation",
          "userRequest": "is-ipfs",
          "loc": "5:0-29"
        },
        {
          "moduleId": "./src/commands/pinning/unpin.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/unpin.js",
          "module": "./src/commands/pinning/unpin.js",
          "moduleName": "./src/commands/pinning/unpin.js",
          "type": "harmony import specifier",
          "userRequest": "is-ipfs",
          "loc": "31:16-22"
        },
        {
          "moduleId": "./src/util/validators.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "module": "./src/util/validators.js",
          "moduleName": "./src/util/validators.js",
          "type": "harmony side effect evaluation",
          "userRequest": "is-ipfs",
          "loc": "3:0-29"
        },
        {
          "moduleId": "./src/util/validators.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "module": "./src/util/validators.js",
          "moduleName": "./src/util/validators.js",
          "type": "harmony import specifier",
          "userRequest": "is-ipfs",
          "loc": "20:9-15"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 3,
      "source": "'use strict'\n\nconst base58 = require('bs58')\nconst multihash = require('multihashes')\nconst multibase = require('multibase')\nconst Multiaddr = require('multiaddr')\nconst mafmt = require('mafmt')\nconst CID = require('cids')\n\nconst urlPattern = /^https?:\\/\\/[^/]+\\/(ip(f|n)s)\\/((\\w+).*)/\nconst pathPattern = /^\\/(ip(f|n)s)\\/((\\w+).*)/\nconst defaultProtocolMatch = 1\nconst defaultHashMath = 4\n\nconst fqdnPattern = /^https?:\\/\\/([^/]+)\\.(ip(?:f|n)s)\\.[^/]+/\nconst fqdnHashMatch = 1\nconst fqdnProtocolMatch = 2\n\nfunction isMultihash (hash) {\n  const formatted = convertToString(hash)\n  try {\n    const buffer = Buffer.from(base58.decode(formatted))\n    multihash.decode(buffer)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nfunction isMultibase (hash) {\n  try {\n    return multibase.isEncoded(hash)\n  } catch (e) {\n    return false\n  }\n}\n\nfunction isCID (hash) {\n  try {\n    new CID(hash) // eslint-disable-line no-new\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nfunction isMultiaddr (input) {\n  if (!input) return false\n  if (Multiaddr.isMultiaddr(input)) return true\n  try {\n    new Multiaddr(input) // eslint-disable-line no-new\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nfunction isPeerMultiaddr (input) {\n  return isMultiaddr(input) && mafmt.IPFS.matches(input)\n}\n\nfunction isIpfs (input, pattern, protocolMatch = defaultProtocolMatch, hashMatch = defaultHashMath) {\n  const formatted = convertToString(input)\n  if (!formatted) {\n    return false\n  }\n\n  const match = formatted.match(pattern)\n  if (!match) {\n    return false\n  }\n\n  if (match[protocolMatch] !== 'ipfs') {\n    return false\n  }\n\n  let hash = match[hashMatch]\n\n  if (hash && pattern === fqdnPattern) {\n    // when doing checks for subdomain context\n    // ensure hash is case-insensitive\n    // (browsers force-lowercase authority compotent anyway)\n    hash = hash.toLowerCase()\n  }\n\n  return isCID(hash)\n}\n\nfunction isIpns (input, pattern, protocolMatch = defaultProtocolMatch, hashMatch) {\n  const formatted = convertToString(input)\n  if (!formatted) {\n    return false\n  }\n  const match = formatted.match(pattern)\n  if (!match) {\n    return false\n  }\n\n  if (match[protocolMatch] !== 'ipns') {\n    return false\n  }\n\n  if (hashMatch && pattern === fqdnPattern) {\n    let hash = match[hashMatch]\n    // when doing checks for subdomain context\n    // ensure hash is case-insensitive\n    // (browsers force-lowercase authority compotent anyway)\n    hash = hash.toLowerCase()\n    return isCID(hash)\n  }\n\n  return true\n}\n\nfunction isString (input) {\n  return typeof input === 'string'\n}\n\nfunction convertToString (input) {\n  if (Buffer.isBuffer(input)) {\n    return base58.encode(input)\n  }\n\n  if (isString(input)) {\n    return input\n  }\n\n  return false\n}\n\nconst ipfsSubdomain = (url) => isIpfs(url, fqdnPattern, fqdnProtocolMatch, fqdnHashMatch)\nconst ipnsSubdomain = (url) => isIpns(url, fqdnPattern, fqdnProtocolMatch, fqdnHashMatch)\n\nmodule.exports = {\n  multihash: isMultihash,\n  multiaddr: isMultiaddr,\n  peerMultiaddr: isPeerMultiaddr,\n  cid: isCID,\n  base32cid: (cid) => (isMultibase(cid) === 'base32' && isCID(cid)),\n  ipfsSubdomain: ipfsSubdomain,\n  ipnsSubdomain: ipnsSubdomain,\n  subdomain: (url) => (ipfsSubdomain(url) || ipnsSubdomain(url)),\n  subdomainPattern: fqdnPattern,\n  ipfsUrl: (url) => isIpfs(url, urlPattern),\n  ipnsUrl: (url) => isIpns(url, urlPattern),\n  url: (url) => (isIpfs(url, urlPattern) || isIpns(url, urlPattern)),\n  urlPattern: urlPattern,\n  ipfsPath: (path) => isIpfs(path, pathPattern),\n  ipnsPath: (path) => isIpns(path, pathPattern),\n  path: (path) => (isIpfs(path, pathPattern) || isIpns(path, pathPattern)),\n  pathPattern: pathPattern,\n  urlOrPath: (x) => (isIpfs(x, urlPattern) || isIpns(x, urlPattern) || isIpfs(x, pathPattern) || isIpns(x, pathPattern)),\n  cidPath: path => isString(path) && !isCID(path) && isIpfs(`/ipfs/${path}`, pathPattern)\n}\n"
    },
    {
      "id": "./node_modules/isarray/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/isarray/index.js",
      "name": "./node_modules/isarray/index.js",
      "index": 10,
      "index2": 5,
      "size": 132,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
      "issuerId": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
      "issuerName": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
          "name": "./node_modules/node-libs-browser/node_modules/buffer/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
          "module": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "moduleName": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "type": "cjs require",
          "userRequest": "isarray",
          "loc": "13:14-32"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 5,
      "source": "var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n"
    },
    {
      "id": "./node_modules/lodash.merge/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/lodash.merge/index.js",
      "name": "./node_modules/lodash.merge/index.js",
      "index": 2,
      "index2": 2,
      "size": 51155,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
      "issuerId": "./src/index.js",
      "issuerName": "./src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony side effect evaluation",
          "userRequest": "lodash.merge",
          "loc": "11:0-33"
        },
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony import specifier",
          "userRequest": "lodash.merge",
          "loc": "75:20-25"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 2,
      "source": "/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeMax = Math.max,\n    nativeNow = Date.now;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = merge;\n"
    },
    {
      "id": "./node_modules/mafmt/src/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/mafmt/src/index.js",
      "name": "./node_modules/mafmt/src/index.js",
      "index": 43,
      "index2": 39,
      "size": 4966,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
      "issuerId": "./node_modules/is-ipfs/src/index.js",
      "issuerName": "./node_modules/is-ipfs/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/is-ipfs/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "module": "./node_modules/is-ipfs/src/index.js",
          "moduleName": "./node_modules/is-ipfs/src/index.js",
          "type": "cjs require",
          "userRequest": "mafmt",
          "loc": "7:14-30"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 4,
      "source": "'use strict'\n\nconst multiaddr = require('multiaddr')\n\n/*\n * Valid combinations\n */\nconst DNS4 = base('dns4')\nconst DNS6 = base('dns6')\nconst DNS = or(\n  base('dns'),\n  base('dnsaddr'),\n  DNS4,\n  DNS6\n)\n\nconst IP = or(base('ip4'), base('ip6'))\nconst TCP = or(\n  and(IP, base('tcp')),\n  and(DNS, base('tcp'))\n)\nconst UDP = and(IP, base('udp'))\nconst UTP = and(UDP, base('utp'))\n\nconst WebSockets = or(\n  and(TCP, base('ws')),\n  and(DNS, base('ws'))\n)\n\nconst WebSocketsSecure = or(\n  and(TCP, base('wss')),\n  and(DNS, base('wss'))\n)\n\nconst HTTP = or(\n  and(TCP, base('http')),\n  and(IP, base('http')),\n  and(DNS, base('http'))\n)\n\nconst HTTPS = or(\n  and(TCP, base('https')),\n  and(IP, base('https')),\n  and(DNS, base('https'))\n)\n\nconst WebRTCStar = or(\n  and(WebSockets, base('p2p-webrtc-star'), base('p2p')),\n  and(WebSocketsSecure, base('p2p-webrtc-star'), base('p2p')),\n  and(WebSockets, base('p2p-webrtc-star')),\n  and(WebSocketsSecure, base('p2p-webrtc-star'))\n)\n\nconst WebSocketStar = or(\n  and(WebSockets, base('p2p-websocket-star'), base('p2p')),\n  and(WebSocketsSecure, base('p2p-websocket-star'), base('p2p')),\n  and(WebSockets, base('p2p-websocket-star')),\n  and(WebSocketsSecure, base('p2p-websocket-star'))\n)\n\nconst WebRTCDirect = or(\n  and(HTTP, base('p2p-webrtc-direct')),\n  and(HTTPS, base('p2p-webrtc-direct'))\n)\n\nconst Reliable = or(\n  WebSockets,\n  WebSocketsSecure,\n  HTTP,\n  HTTPS,\n  WebRTCStar,\n  WebRTCDirect,\n  TCP,\n  UTP\n)\n\n// Unlike ws-star, stardust can run over any transport thus removing the requirement for websockets (but don't even think about running a stardust server over webrtc-star ;) )\nconst Stardust = or(\n  and(Reliable, base('p2p-stardust'), base('p2p')),\n  and(Reliable, base('p2p-stardust'))\n)\n\nconst _P2P = or(\n  and(Reliable, base('p2p')),\n  WebRTCStar,\n  base('p2p')\n)\n\nconst _Circuit = or(\n  and(_P2P, base('p2p-circuit'), _P2P),\n  and(_P2P, base('p2p-circuit')),\n  and(base('p2p-circuit'), _P2P),\n  and(Reliable, base('p2p-circuit')),\n  and(base('p2p-circuit'), Reliable),\n  base('p2p-circuit')\n)\n\nconst CircuitRecursive = () => or(\n  and(_Circuit, CircuitRecursive),\n  _Circuit\n)\n\nconst Circuit = CircuitRecursive()\n\nconst P2P = or(\n  and(Circuit, _P2P, Circuit),\n  and(_P2P, Circuit),\n  and(Circuit, _P2P),\n  Circuit,\n  _P2P\n)\n\nexports.DNS = DNS\nexports.DNS4 = DNS4\nexports.DNS6 = DNS6\nexports.IP = IP\nexports.TCP = TCP\nexports.UDP = UDP\nexports.UTP = UTP\nexports.HTTP = HTTP\nexports.HTTPS = HTTPS\nexports.WebSockets = WebSockets\nexports.WebSocketsSecure = WebSocketsSecure\nexports.WebSocketStar = WebSocketStar\nexports.WebRTCStar = WebRTCStar\nexports.WebRTCDirect = WebRTCDirect\nexports.Reliable = Reliable\nexports.Stardust = Stardust\nexports.Circuit = Circuit\nexports.P2P = P2P\nexports.IPFS = P2P\n\n/*\n * Validation funcs\n */\n\nfunction makeMatchesFunction (partialMatch) {\n  return function matches (a) {\n    if (!multiaddr.isMultiaddr(a)) {\n      try {\n        a = multiaddr(a)\n      } catch (err) { // catch error\n        return false // also if it's invalid it's propably not matching as well so return false\n      }\n    }\n    const out = partialMatch(a.protoNames())\n    if (out === null) {\n      return false\n    }\n    return out.length === 0\n  }\n}\n\nfunction and () {\n  const args = Array.from(arguments)\n  function partialMatch (a) {\n    if (a.length < args.length) {\n      return null\n    }\n    args.some((arg) => {\n      a = typeof arg === 'function'\n        ? arg().partialMatch(a)\n        : arg.partialMatch(a)\n\n      if (a === null) {\n        return true\n      }\n    })\n\n    return a\n  }\n\n  return {\n    toString: function () { return '{ ' + args.join(' ') + ' }' },\n    input: args,\n    matches: makeMatchesFunction(partialMatch),\n    partialMatch: partialMatch\n  }\n}\n\nfunction or () {\n  const args = Array.from(arguments)\n\n  function partialMatch (a) {\n    let out = null\n    args.some((arg) => {\n      const res = typeof arg === 'function'\n        ? arg().partialMatch(a)\n        : arg.partialMatch(a)\n      if (res) {\n        out = res\n        return true\n      }\n    })\n\n    return out\n  }\n\n  const result = {\n    toString: function () { return '{ ' + args.join(' ') + ' }' },\n    input: args,\n    matches: makeMatchesFunction(partialMatch),\n    partialMatch: partialMatch\n  }\n\n  return result\n}\n\nfunction base (n) {\n  const name = n\n\n  function matches (a) {\n    if (typeof a === 'string') {\n      try {\n        a = multiaddr(a)\n      } catch (err) { // catch error\n        return false // also if it's invalid it's propably not matching as well so return false\n      }\n    }\n\n    const pnames = a.protoNames()\n    if (pnames.length === 1 && pnames[0] === name) {\n      return true\n    }\n    return false\n  }\n\n  function partialMatch (protos) {\n    if (protos.length === 0) {\n      return null\n    }\n\n    if (protos[0] === name) {\n      return protos.slice(1)\n    }\n    return null\n  }\n\n  return {\n    toString: function () { return name },\n    matches: matches,\n    partialMatch: partialMatch\n  }\n}\n"
    },
    {
      "id": "./node_modules/multiaddr/src/codec.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
      "name": "./node_modules/multiaddr/src/codec.js",
      "index": 27,
      "index2": 37,
      "size": 4685,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
      "issuerId": "./node_modules/multiaddr/src/index.js",
      "issuerName": "./node_modules/multiaddr/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/multiaddr/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
          "name": "./node_modules/multiaddr/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/multiaddr/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
          "module": "./node_modules/multiaddr/src/index.js",
          "moduleName": "./node_modules/multiaddr/src/index.js",
          "type": "cjs require",
          "userRequest": "./codec",
          "loc": "3:14-32"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 5,
      "source": "'use strict'\n\nconst { Buffer } = require('buffer')\nconst convert = require('./convert')\nconst protocols = require('./protocols-table')\nconst varint = require('varint')\n\n// export codec\nmodule.exports = {\n  stringToStringTuples,\n  stringTuplesToString,\n\n  tuplesToStringTuples,\n  stringTuplesToTuples,\n\n  bufferToTuples,\n  tuplesToBuffer,\n\n  bufferToString,\n  stringToBuffer,\n\n  fromString,\n  fromBuffer,\n  validateBuffer,\n  isValidBuffer,\n  cleanPath,\n\n  ParseError,\n  protoFromTuple,\n\n  sizeForAddr\n}\n\n// string -> [[str name, str addr]... ]\nfunction stringToStringTuples (str) {\n  const tuples = []\n  const parts = str.split('/').slice(1) // skip first empty elem\n  if (parts.length === 1 && parts[0] === '') {\n    return []\n  }\n\n  for (let p = 0; p < parts.length; p++) {\n    const part = parts[p]\n    const proto = protocols(part)\n\n    if (proto.size === 0) {\n      tuples.push([part])\n      continue\n    }\n\n    p++ // advance addr part\n    if (p >= parts.length) {\n      throw ParseError('invalid address: ' + str)\n    }\n\n    // if it's a path proto, take the rest\n    if (proto.path) {\n      tuples.push([\n        part,\n        // TODO: should we need to check each path part to see if it's a proto?\n        // This would allow for other protocols to be added after a unix path,\n        // however it would have issues if the path had a protocol name in the path\n        cleanPath(parts.slice(p).join('/'))\n      ])\n      break\n    }\n\n    tuples.push([part, parts[p]])\n  }\n\n  return tuples\n}\n\n// [[str name, str addr]... ] -> string\nfunction stringTuplesToString (tuples) {\n  const parts = []\n  tuples.map(tup => {\n    const proto = protoFromTuple(tup)\n    parts.push(proto.name)\n    if (tup.length > 1) {\n      parts.push(tup[1])\n    }\n  })\n\n  return cleanPath(parts.join('/'))\n}\n\n// [[str name, str addr]... ] -> [[int code, Buffer]... ]\nfunction stringTuplesToTuples (tuples) {\n  return tuples.map(tup => {\n    if (!Array.isArray(tup)) {\n      tup = [tup]\n    }\n    const proto = protoFromTuple(tup)\n    if (tup.length > 1) {\n      return [proto.code, convert.toBuffer(proto.code, tup[1])]\n    }\n    return [proto.code]\n  })\n}\n\n// [[int code, Buffer]... ] -> [[str name, str addr]... ]\nfunction tuplesToStringTuples (tuples) {\n  return tuples.map(tup => {\n    const proto = protoFromTuple(tup)\n    if (tup.length > 1) {\n      return [proto.code, convert.toString(proto.code, tup[1])]\n    }\n    return [proto.code]\n  })\n}\n\n// [[int code, Buffer ]... ] -> Buffer\nfunction tuplesToBuffer (tuples) {\n  return fromBuffer(Buffer.concat(tuples.map(tup => {\n    const proto = protoFromTuple(tup)\n    let buf = Buffer.from(varint.encode(proto.code))\n\n    if (tup.length > 1) {\n      buf = Buffer.concat([buf, tup[1]]) // add address buffer\n    }\n\n    return buf\n  })))\n}\n\nfunction sizeForAddr (p, addr) {\n  if (p.size > 0) {\n    return p.size / 8\n  } else if (p.size === 0) {\n    return 0\n  } else {\n    const size = varint.decode(addr)\n    return size + varint.decode.bytes\n  }\n}\n\n// Buffer -> [[int code, Buffer ]... ]\nfunction bufferToTuples (buf) {\n  const tuples = []\n  let i = 0\n  while (i < buf.length) {\n    const code = varint.decode(buf, i)\n    const n = varint.decode.bytes\n\n    const p = protocols(code)\n\n    const size = sizeForAddr(p, buf.slice(i + n))\n\n    if (size === 0) {\n      tuples.push([code])\n      i += n\n      continue\n    }\n\n    const addr = buf.slice(i + n, i + n + size)\n\n    i += (size + n)\n\n    if (i > buf.length) { // did not end _exactly_ at buffer.length\n      throw ParseError('Invalid address buffer: ' + buf.toString('hex'))\n    }\n\n    // ok, tuple seems good.\n    tuples.push([code, addr])\n  }\n\n  return tuples\n}\n\n// Buffer -> String\nfunction bufferToString (buf) {\n  const a = bufferToTuples(buf)\n  const b = tuplesToStringTuples(a)\n  return stringTuplesToString(b)\n}\n\n// String -> Buffer\nfunction stringToBuffer (str) {\n  str = cleanPath(str)\n  const a = stringToStringTuples(str)\n  const b = stringTuplesToTuples(a)\n\n  return tuplesToBuffer(b)\n}\n\n// String -> Buffer\nfunction fromString (str) {\n  return stringToBuffer(str)\n}\n\n// Buffer -> Buffer\nfunction fromBuffer (buf) {\n  const err = validateBuffer(buf)\n  if (err) throw err\n  return Buffer.from(buf) // copy\n}\n\nfunction validateBuffer (buf) {\n  try {\n    bufferToTuples(buf) // try to parse. will throw if breaks\n  } catch (err) {\n    return err\n  }\n}\n\nfunction isValidBuffer (buf) {\n  return validateBuffer(buf) === undefined\n}\n\nfunction cleanPath (str) {\n  return '/' + str.trim().split('/').filter(a => a).join('/')\n}\n\nfunction ParseError (str) {\n  return new Error('Error parsing address: ' + str)\n}\n\nfunction protoFromTuple (tup) {\n  const proto = protocols(tup[0])\n  return proto\n}\n"
    },
    {
      "id": "./node_modules/multiaddr/src/convert.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
      "name": "./node_modules/multiaddr/src/convert.js",
      "index": 28,
      "index2": 36,
      "size": 4753,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
      "issuerId": "./node_modules/multiaddr/src/codec.js",
      "issuerName": "./node_modules/multiaddr/src/codec.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/multiaddr/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
          "name": "./node_modules/multiaddr/src/index.js"
        },
        {
          "id": "./node_modules/multiaddr/src/codec.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
          "name": "./node_modules/multiaddr/src/codec.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/multiaddr/src/codec.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
          "module": "./node_modules/multiaddr/src/codec.js",
          "moduleName": "./node_modules/multiaddr/src/codec.js",
          "type": "cjs require",
          "userRequest": "./convert",
          "loc": "4:16-36"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 6,
      "source": "'use strict'\n\nconst { Buffer } = require('buffer')\nconst ip = require('./ip')\nconst protocols = require('./protocols-table')\nconst CID = require('cids')\nconst multibase = require('multibase')\nconst varint = require('varint')\n\nmodule.exports = Convert\n\n// converts (serializes) addresses\nfunction Convert (proto, a) {\n  if (a instanceof Buffer) {\n    return Convert.toString(proto, a)\n  } else {\n    return Convert.toBuffer(proto, a)\n  }\n}\n\nConvert.toString = function convertToString (proto, buf) {\n  proto = protocols(proto)\n  switch (proto.code) {\n    case 4: // ipv4\n    case 41: // ipv6\n      return buf2ip(buf)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return buf2port(buf)\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 777: // memory\n      return buf2str(buf)\n\n    case 421: // ipfs\n      return buf2mh(buf)\n    case 444: // onion\n      return buf2onion(buf)\n    case 445: // onion3\n      return buf2onion(buf)\n    default:\n      return buf.toString('hex') // no clue. convert to hex\n  }\n}\n\nConvert.toBuffer = function convertToBuffer (proto, str) {\n  proto = protocols(proto)\n  switch (proto.code) {\n    case 4: // ipv4\n      return ip2buf(str)\n    case 41: // ipv6\n      return ip2buf(str)\n\n    case 6: // tcp\n    case 273: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return port2buf(parseInt(str, 10))\n\n    case 53: // dns\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n    case 400: // unix\n    case 777: // memory\n      return str2buf(str)\n\n    case 421: // ipfs\n      return mh2buf(str)\n    case 444: // onion\n      return onion2buf(str)\n    case 445: // onion3\n      return onion32buf(str)\n    default:\n      return Buffer.from(str, 'hex') // no clue. convert from hex\n  }\n}\n\nfunction ip2buf (ipString) {\n  if (!ip.isIP(ipString)) {\n    throw new Error('invalid ip address')\n  }\n  return ip.toBuffer(ipString)\n}\n\nfunction buf2ip (ipBuff) {\n  const ipString = ip.toString(ipBuff)\n  if (!ipString || !ip.isIP(ipString)) {\n    throw new Error('invalid ip address')\n  }\n  return ipString\n}\n\nfunction port2buf (port) {\n  const buf = Buffer.alloc(2)\n  buf.writeUInt16BE(port, 0)\n  return buf\n}\n\nfunction buf2port (buf) {\n  return buf.readUInt16BE(0)\n}\n\nfunction str2buf (str) {\n  const buf = Buffer.from(str)\n  const size = Buffer.from(varint.encode(buf.length))\n  return Buffer.concat([size, buf])\n}\n\nfunction buf2str (buf) {\n  const size = varint.decode(buf)\n  buf = buf.slice(varint.decode.bytes)\n\n  if (buf.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return buf.toString()\n}\n\nfunction mh2buf (hash) {\n  // the address is a varint prefixed multihash string representation\n  const mh = new CID(hash).multihash\n  const size = Buffer.from(varint.encode(mh.length))\n  return Buffer.concat([size, mh])\n}\n\nfunction buf2mh (buf) {\n  const size = varint.decode(buf)\n  const address = buf.slice(varint.decode.bytes)\n\n  if (address.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n  return multibase.encode('base58btc', address).toString().slice(1)\n}\n\nfunction onion2buf (str) {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error('failed to parse onion addr: ' + addr + ' does not contain a port number')\n  }\n  if (addr[0].length !== 16) {\n    throw new Error('failed to parse onion addr: ' + addr[0] + ' not a Tor onion address.')\n  }\n\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = multibase.decode('b' + addr[0])\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2buf(port)\n  return Buffer.concat([buf, portBuf])\n}\n\nfunction onion32buf (str) {\n  const addr = str.split(':')\n  if (addr.length !== 2) {\n    throw new Error('failed to parse onion addr: ' + addr + ' does not contain a port number')\n  }\n  if (addr[0].length !== 56) {\n    throw new Error('failed to parse onion addr: ' + addr[0] + ' not a Tor onion3 address.')\n  }\n  // onion addresses do not include the multibase prefix, add it before decoding\n  const buf = multibase.decode('b' + addr[0])\n\n  // onion port number\n  const port = parseInt(addr[1], 10)\n  if (port < 1 || port > 65536) {\n    throw new Error('Port number is not in range(1, 65536)')\n  }\n  const portBuf = port2buf(port)\n  return Buffer.concat([buf, portBuf])\n}\n\nfunction buf2onion (buf) {\n  const addrBytes = buf.slice(0, buf.length - 2)\n  const portBytes = buf.slice(buf.length - 2)\n  const addr = multibase.encode('base32', addrBytes).toString().slice(1)\n  const port = buf2port(portBytes)\n  return addr + ':' + port\n}\n"
    },
    {
      "id": "./node_modules/multiaddr/src/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
      "name": "./node_modules/multiaddr/src/index.js",
      "index": 26,
      "index2": 38,
      "size": 16168,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
      "issuerId": "./node_modules/is-ipfs/src/index.js",
      "issuerName": "./node_modules/is-ipfs/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/is-ipfs/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "module": "./node_modules/is-ipfs/src/index.js",
          "moduleName": "./node_modules/is-ipfs/src/index.js",
          "type": "cjs require",
          "userRequest": "multiaddr",
          "loc": "6:18-38"
        },
        {
          "moduleId": "./node_modules/mafmt/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/mafmt/src/index.js",
          "module": "./node_modules/mafmt/src/index.js",
          "moduleName": "./node_modules/mafmt/src/index.js",
          "type": "cjs require",
          "userRequest": "multiaddr",
          "loc": "3:18-38"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 4,
      "source": "'use strict'\n\nconst codec = require('./codec')\nconst { Buffer } = require('buffer')\nconst protocols = require('./protocols-table')\nconst varint = require('varint')\nconst multibase = require('multibase')\nconst CID = require('cids')\nconst withIs = require('class-is')\nconst inspect = Symbol.for('nodejs.util.inspect.custom')\n\n/**\n * Creates a [multiaddr](https://github.com/multiformats/multiaddr) from\n * a Buffer, String or another Multiaddr instance\n * public key.\n * @class Multiaddr\n * @param {(String|Buffer|Multiaddr)} addr - If String or Buffer, needs to adhere\n * to the address format of a [multiaddr](https://github.com/multiformats/multiaddr#string-format)\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n */\nconst Multiaddr = withIs.proto(function (addr) {\n  if (!(this instanceof Multiaddr)) {\n    return new Multiaddr(addr)\n  }\n\n  // default\n  if (addr == null) {\n    addr = ''\n  }\n\n  if (addr instanceof Buffer) {\n    /**\n     * @type {Buffer} - The raw bytes representing this multiaddress\n     */\n    this.buffer = codec.fromBuffer(addr)\n  } else if (typeof addr === 'string' || addr instanceof String) {\n    if (addr.length > 0 && addr.charAt(0) !== '/') {\n      throw new Error(`multiaddr \"${addr}\" must start with a \"/\"`)\n    }\n    this.buffer = codec.fromString(addr)\n  } else if (addr.buffer && addr.protos && addr.protoCodes) { // Multiaddr\n    this.buffer = codec.fromBuffer(addr.buffer) // validate + copy buffer\n  } else {\n    throw new Error('addr must be a string, Buffer, or another Multiaddr')\n  }\n}, { className: 'Multiaddr', symbolName: '@multiformats/js-multiaddr/multiaddr' })\n\n/**\n * Returns Multiaddr as a String\n *\n * @returns {String}\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').toString()\n * // '/ip4/127.0.0.1/tcp/4001'\n */\nMultiaddr.prototype.toString = function toString () {\n  return codec.bufferToString(this.buffer)\n}\n\n/**\n * Returns Multiaddr as a JSON encoded object\n *\n * @returns {String}\n * @example\n * JSON.stringify(Multiaddr('/ip4/127.0.0.1/tcp/4001'))\n * // '/ip4/127.0.0.1/tcp/4001'\n */\nMultiaddr.prototype.toJSON = Multiaddr.prototype.toString\n\n/**\n * Returns Multiaddr as a convinient options object to be used with net.createConnection\n *\n * @returns {{family: String, host: String, transport: String, port: Number}}\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').toOptions()\n * // { family: 'ipv4', host: '127.0.0.1', transport: 'tcp', port: 4001 }\n */\nMultiaddr.prototype.toOptions = function toOptions () {\n  const opts = {}\n  const parsed = this.toString().split('/')\n  opts.family = parsed[1] === 'ip4' ? 'ipv4' : 'ipv6'\n  opts.host = parsed[2]\n  opts.transport = parsed[3]\n  opts.port = parseInt(parsed[4])\n  return opts\n}\n\n/**\n * Returns Multiaddr as a human-readable string.\n * For post Node.js v10.0.0.\n * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\n *\n * @returns {String}\n * @example\n * console.log(Multiaddr('/ip4/127.0.0.1/tcp/4001'))\n * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\n */\nMultiaddr.prototype[inspect] = function inspectCustom () {\n  return '<Multiaddr ' +\n    this.buffer.toString('hex') + ' - ' +\n    codec.bufferToString(this.buffer) + '>'\n}\n\n/**\n * Returns Multiaddr as a human-readable string.\n * Fallback for pre Node.js v10.0.0.\n * https://nodejs.org/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect\n *\n * @returns {String}\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').inspect()\n * // '<Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>'\n */\nMultiaddr.prototype.inspect = function inspect () {\n  return '<Multiaddr ' +\n    this.buffer.toString('hex') + ' - ' +\n    codec.bufferToString(this.buffer) + '>'\n}\n\n/**\n * Returns the protocols the Multiaddr is defined with, as an array of objects, in\n * left-to-right order. Each object contains the protocol code, protocol name,\n * and the size of its address space in bits.\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n *\n * @returns {Array.<Object>} protocols - All the protocols the address is composed of\n * @returns {Number} protocols[].code\n * @returns {Number} protocols[].size\n * @returns {String} protocols[].name\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protos()\n * // [ { code: 4, size: 32, name: 'ip4' },\n * //   { code: 6, size: 16, name: 'tcp' } ]\n */\nMultiaddr.prototype.protos = function protos () {\n  return this.protoCodes().map(code => Object.assign({}, protocols(code)))\n}\n\n/**\n * Returns the codes of the protocols in left-to-right order.\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n *\n * @returns {Array.<Number>} protocol codes\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoCodes()\n * // [ 4, 6 ]\n */\nMultiaddr.prototype.protoCodes = function protoCodes () {\n  const codes = []\n  const buf = this.buffer\n  let i = 0\n  while (i < buf.length) {\n    const code = varint.decode(buf, i)\n    const n = varint.decode.bytes\n\n    const p = protocols(code)\n    const size = codec.sizeForAddr(p, buf.slice(i + n))\n\n    i += (size + n)\n    codes.push(code)\n  }\n\n  return codes\n}\n\n/**\n * Returns the names of the protocols in left-to-right order.\n * [See list of protocols](https://github.com/multiformats/multiaddr/blob/master/protocols.csv)\n *\n * @return {Array.<String>} protocol names\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').protoNames()\n * // [ 'ip4', 'tcp' ]\n */\nMultiaddr.prototype.protoNames = function protoNames () {\n  return this.protos().map(proto => proto.name)\n}\n\n/**\n * Returns a tuple of parts\n *\n * @return {Array.<Array>} tuples\n * @return {Number} tuples[].0 code of protocol\n * @return {Buffer} tuples[].1 contents of address\n * @example\n * Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").tuples()\n * // [ [ 4, <Buffer 7f 00 00 01> ], [ 6, <Buffer 0f a1> ] ]\n */\nMultiaddr.prototype.tuples = function tuples () {\n  return codec.bufferToTuples(this.buffer)\n}\n\n/**\n * Returns a tuple of string/number parts\n *\n * @return {Array.<Array>} tuples\n * @return {Number} tuples[].0 code of protocol\n * @return {(String|Number)} tuples[].1 contents of address\n * @example\n * Multiaddr(\"/ip4/127.0.0.1/tcp/4001\").stringTuples()\n * // [ [ 4, '127.0.0.1' ], [ 6, 4001 ] ]\n */\nMultiaddr.prototype.stringTuples = function stringTuples () {\n  const t = codec.bufferToTuples(this.buffer)\n  return codec.tuplesToStringTuples(t)\n}\n\n/**\n * Encapsulates a Multiaddr in another Multiaddr\n *\n * @param {Multiaddr} addr - Multiaddr to add into this Multiaddr\n * @return {Multiaddr}\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n *\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n *\n * const mh3 = mh1.encapsulate(mh2)\n * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\n *\n * mh3.toString()\n * // '/ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001'\n */\nMultiaddr.prototype.encapsulate = function encapsulate (addr) {\n  addr = Multiaddr(addr)\n  return Multiaddr(this.toString() + addr.toString())\n}\n\n/**\n * Decapsulates a Multiaddr from another Multiaddr\n *\n * @param {Multiaddr} addr - Multiaddr to remove from this Multiaddr\n * @return {Multiaddr}\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n *\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n *\n * const mh3 = mh1.encapsulate(mh2)\n * // <Multiaddr 0408080808060438047f000001060fa1 - /ip4/8.8.8.8/tcp/1080/ip4/127.0.0.1/tcp/4001>\n *\n * mh3.decapsulate(mh2).toString()\n * // '/ip4/8.8.8.8/tcp/1080'\n */\nMultiaddr.prototype.decapsulate = function decapsulate (addr) {\n  addr = addr.toString()\n  const s = this.toString()\n  const i = s.lastIndexOf(addr)\n  if (i < 0) {\n    throw new Error('Address ' + this + ' does not contain subaddress: ' + addr)\n  }\n  return Multiaddr(s.slice(0, i))\n}\n\n/**\n * A more reliable version of `decapsulate` if you are targeting a\n * specific code, such as 421 (the `p2p` protocol code). The last index of the code\n * will be removed from the `Multiaddr`, and a new instance will be returned.\n * If the code is not present, the original `Multiaddr` is returned.\n *\n * @param {Number} code The code of the protocol to decapsulate from this Multiaddr\n * @return {Multiaddr}\n * @example\n * const addr = Multiaddr('/ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC')\n * // <Multiaddr 0400... - /ip4/0.0.0.0/tcp/8080/p2p/QmcgpsyWgH8Y8ajJz1Cu72KnS5uo2Aa2LpzU7kinSupNKC>\n *\n * addr.decapsulateCode(421).toString()\n * // '/ip4/0.0.0.0/tcp/8080'\n *\n * Multiaddr('/ip4/127.0.0.1/tcp/8080').decapsulateCode(421).toString()\n * // '/ip4/127.0.0.1/tcp/8080'\n */\nMultiaddr.prototype.decapsulateCode = function decapsulateCode (code) {\n  const tuples = this.tuples()\n  for (let i = tuples.length - 1; i >= 0; i--) {\n    if (tuples[i][0] === code) {\n      return Multiaddr(codec.tuplesToBuffer(tuples.slice(0, i)))\n    }\n  }\n  return this\n}\n\n/**\n * Extract the peerId if the multiaddr contains one\n *\n * @return {String|null} peerId - The id of the peer or null if invalid or missing from the ma\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/ipfs/QmValidBase58string>\n *\n * // should return QmValidBase58string or null if the id is missing or invalid\n * const peerId = mh1.getPeerId()\n */\nMultiaddr.prototype.getPeerId = function getPeerId () {\n  let b58str = null\n  try {\n    const tuples = this.stringTuples().filter((tuple) => {\n      if (tuple[0] === protocols.names.ipfs.code) {\n        return true\n      }\n    })\n\n    // Get the last id\n    b58str = tuples.pop()[1]\n    // Get multihash, unwrap from CID if needed\n    b58str = multibase.encode('base58btc', new CID(b58str).multihash).toString().slice(1)\n  } catch (e) {\n    b58str = null\n  }\n\n  return b58str\n}\n\n/**\n * Extract the path if the multiaddr contains one\n *\n * @return {String|null} path - The path of the multiaddr, or null if no path protocol is present\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080/unix/tmp/p2p.sock>\n *\n * // should return utf8 string or null if the id is missing or invalid\n * const path = mh1.getPath()\n */\nMultiaddr.prototype.getPath = function getPath () {\n  let path = null\n  try {\n    path = this.stringTuples().filter((tuple) => {\n      const proto = protocols(tuple[0])\n      if (proto.path) {\n        return true\n      }\n    })[0][1]\n  } catch (e) {\n    path = null\n  }\n\n  return path\n}\n\n/**\n * Checks if two Multiaddrs are the same\n *\n * @param {Multiaddr} addr\n * @return {Bool}\n * @example\n * const mh1 = Multiaddr('/ip4/8.8.8.8/tcp/1080')\n * // <Multiaddr 0408080808060438 - /ip4/8.8.8.8/tcp/1080>\n *\n * const mh2 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n *\n * mh1.equals(mh1)\n * // true\n *\n * mh1.equals(mh2)\n * // false\n */\nMultiaddr.prototype.equals = function equals (addr) {\n  return this.buffer.equals(addr.buffer)\n}\n\n/**\n * Gets a Multiaddrs node-friendly address object. Note that protocol information\n * is left out: in Node (and most network systems) the protocol is unknowable\n * given only the address.\n *\n * Has to be a ThinWaist Address, otherwise throws error\n *\n * @returns {{family: String, address: String, port: Number}}\n * @throws {Error} Throws error if Multiaddr is not a Thin Waist address\n * @example\n * Multiaddr('/ip4/127.0.0.1/tcp/4001').nodeAddress()\n * // {family: 'IPv4', address: '127.0.0.1', port: '4001'}\n */\nMultiaddr.prototype.nodeAddress = function nodeAddress () {\n  const codes = this.protoCodes()\n  const names = this.protoNames()\n  const parts = this.toString().split('/').slice(1)\n\n  if (parts.length < 4) {\n    throw new Error('multiaddr must have a valid format: \"/{ip4, ip6, dns4, dns6}/{address}/{tcp, udp}/{port}\".')\n  } else if (codes[0] !== 4 && codes[0] !== 41 && codes[0] !== 54 && codes[0] !== 55) {\n    throw new Error(`no protocol with name: \"'${names[0]}'\". Must have a valid family name: \"{ip4, ip6, dns4, dns6}\".`)\n  } else if (parts[2] !== 'tcp' && parts[2] !== 'udp') {\n    throw new Error(`no protocol with name: \"'${names[1]}'\". Must have a valid transport protocol: \"{tcp, udp}\".`)\n  }\n\n  return {\n    family: (codes[0] === 41 || codes[0] === 55) ? 6 : 4,\n    address: parts[1], // ip addr\n    port: parseInt(parts[3]) // tcp or udp port\n  }\n}\n\n/**\n * Creates a Multiaddr from a node-friendly address object\n *\n * @param {{family: String, address: String, port: Number}} addr\n * @param {String} transport\n * @returns {Multiaddr} multiaddr\n * @throws {Error} Throws error if addr is not truthy\n * @throws {Error} Throws error if transport is not truthy\n * @example\n * Multiaddr.fromNodeAddress({address: '127.0.0.1', port: '4001'}, 'tcp')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n */\nMultiaddr.fromNodeAddress = function fromNodeAddress (addr, transport) {\n  if (!addr) throw new Error('requires node address object')\n  if (!transport) throw new Error('requires transport protocol')\n  let ip\n  switch (addr.family) {\n    case 'IPv4':\n      ip = 'ip4'\n      break\n    case 'IPv6':\n      ip = 'ip6'\n      break\n    default:\n      throw Error(`Invalid addr family. Got '${addr.family}' instead of 'IPv4' or 'IPv6'`)\n  }\n  return Multiaddr('/' + [ip, addr.address, transport, addr.port].join('/'))\n}\n\n// TODO find a better example, not sure about it's good enough\n/**\n * Returns if a Multiaddr is a Thin Waist address or not.\n *\n * Thin Waist is if a Multiaddr adheres to the standard combination of:\n *\n * `{IPv4, IPv6}/{TCP, UDP}`\n *\n * @param {Multiaddr} [addr] - Defaults to using `this` instance\n * @returns {Boolean} isThinWaistAddress\n * @example\n * const mh1 = Multiaddr('/ip4/127.0.0.1/tcp/4001')\n * // <Multiaddr 047f000001060fa1 - /ip4/127.0.0.1/tcp/4001>\n * const mh2 = Multiaddr('/ip4/192.168.2.1/tcp/5001')\n * // <Multiaddr 04c0a80201061389 - /ip4/192.168.2.1/tcp/5001>\n * const mh3 = mh1.encapsulate(mh2)\n * // <Multiaddr 047f000001060fa104c0a80201061389 - /ip4/127.0.0.1/tcp/4001/ip4/192.168.2.1/tcp/5001>\n * mh1.isThinWaistAddress()\n * // true\n * mh2.isThinWaistAddress()\n * // true\n * mh3.isThinWaistAddress()\n * // false\n */\nMultiaddr.prototype.isThinWaistAddress = function isThinWaistAddress (addr) {\n  const protos = (addr || this).protos()\n\n  if (protos.length !== 2) {\n    return false\n  }\n\n  if (protos[0].code !== 4 && protos[0].code !== 41) {\n    return false\n  }\n  if (protos[1].code !== 6 && protos[1].code !== 273) {\n    return false\n  }\n  return true\n}\n\n/**\n * Object containing table, names and codes of all supported protocols.\n * To get the protocol values from a Multiaddr, you can use\n * [`.protos()`](#multiaddrprotos),\n * [`.protoCodes()`](#multiaddrprotocodes) or\n * [`.protoNames()`](#multiaddrprotonames)\n *\n * @instance\n * @returns {{table: Array, names: Object, codes: Object}}\n *\n */\nMultiaddr.protocols = protocols\n\n/**\n * Returns if something is a Multiaddr that is a name\n *\n * @param {Multiaddr} addr\n * @return {Bool} isName\n */\nMultiaddr.isName = function isName (addr) {\n  if (!Multiaddr.isMultiaddr(addr)) {\n    return false\n  }\n\n  // if a part of the multiaddr is resolvable, then return true\n  return addr.protos().some((proto) => proto.resolvable)\n}\n\n/**\n * Returns an array of multiaddrs, by resolving the multiaddr that is a name\n *\n * @async\n * @param {Multiaddr} addr\n * @return {Multiaddr[]}\n */\nMultiaddr.resolve = function resolve (addr) {\n  if (!Multiaddr.isMultiaddr(addr) || !Multiaddr.isName(addr)) {\n    return Promise.reject(Error('not a valid name'))\n  }\n\n  /*\n   * Needs more consideration from spec design:\n   *   - what to return\n   *   - how to achieve it in the browser?\n   */\n  return Promise.reject(new Error('not implemented yet'))\n}\n\nexports = module.exports = Multiaddr\n"
    },
    {
      "id": "./node_modules/multiaddr/src/ip.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/ip.js",
      "name": "./node_modules/multiaddr/src/ip.js",
      "index": 29,
      "index2": 24,
      "size": 2393,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
      "issuerId": "./node_modules/multiaddr/src/convert.js",
      "issuerName": "./node_modules/multiaddr/src/convert.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/multiaddr/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
          "name": "./node_modules/multiaddr/src/index.js"
        },
        {
          "id": "./node_modules/multiaddr/src/codec.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
          "name": "./node_modules/multiaddr/src/codec.js"
        },
        {
          "id": "./node_modules/multiaddr/src/convert.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
          "name": "./node_modules/multiaddr/src/convert.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/multiaddr/src/convert.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
          "module": "./node_modules/multiaddr/src/convert.js",
          "moduleName": "./node_modules/multiaddr/src/convert.js",
          "type": "cjs require",
          "userRequest": "./ip",
          "loc": "4:11-26"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 7,
      "source": "'use strict'\n\nconst { Buffer } = require('buffer')\nconst isIp = require('is-ip')\n\nconst isIP = isIp\nconst isV4 = isIp.v4\nconst isV6 = isIp.v6\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L7\nconst toBuffer = function (ip, buff, offset) {\n  offset = ~~offset\n\n  var result\n\n  if (isV4(ip)) {\n    result = buff || Buffer.alloc(offset + 4)\n    ip.split(/\\./g).map(function (byte) {\n      result[offset++] = parseInt(byte, 10) & 0xff\n    })\n  } else if (isV6(ip)) {\n    var sections = ip.split(':', 8)\n\n    var i\n    for (i = 0; i < sections.length; i++) {\n      var isv4 = isV4(sections[i])\n      var v4Buffer\n\n      if (isv4) {\n        v4Buffer = toBuffer(sections[i])\n        sections[i] = v4Buffer.slice(0, 2).toString('hex')\n      }\n\n      if (v4Buffer && ++i < 8) {\n        sections.splice(i, 0, v4Buffer.slice(2, 4).toString('hex'))\n      }\n    }\n\n    if (sections[0] === '') {\n      while (sections.length < 8) sections.unshift('0')\n    } else if (sections[sections.length - 1] === '') {\n      while (sections.length < 8) sections.push('0')\n    } else if (sections.length < 8) {\n      for (i = 0; i < sections.length && sections[i] !== ''; i++);\n      var argv = [i, '1']\n      for (i = 9 - sections.length; i > 0; i--) {\n        argv.push('0')\n      }\n      sections.splice.apply(sections, argv)\n    }\n\n    result = buff || Buffer.alloc(offset + 16)\n    for (i = 0; i < sections.length; i++) {\n      var word = parseInt(sections[i], 16)\n      result[offset++] = (word >> 8) & 0xff\n      result[offset++] = word & 0xff\n    }\n  }\n\n  if (!result) {\n    throw Error('Invalid ip address: ' + ip)\n  }\n\n  return result\n}\n\n// Copied from https://github.com/indutny/node-ip/blob/master/lib/ip.js#L63\nconst toString = function (buff, offset, length) {\n  offset = ~~offset\n  length = length || (buff.length - offset)\n\n  var result = []\n  var string\n  if (length === 4) {\n    // IPv4\n    for (let i = 0; i < length; i++) {\n      result.push(buff[offset + i])\n    }\n    string = result.join('.')\n  } else if (length === 16) {\n    // IPv6\n    for (let i = 0; i < length; i += 2) {\n      result.push(buff.readUInt16BE(offset + i).toString(16))\n    }\n    string = result.join(':')\n    string = string.replace(/(^|:)0(:0)*:0(:|$)/, '$1::$3')\n    string = string.replace(/:{3,4}/, '::')\n  }\n\n  return string\n}\n\nmodule.exports = {\n  isIP,\n  isV4,\n  isV6,\n  toBuffer,\n  toString\n}\n"
    },
    {
      "id": "./node_modules/multiaddr/src/protocols-table.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/protocols-table.js",
      "name": "./node_modules/multiaddr/src/protocols-table.js",
      "index": 32,
      "index2": 25,
      "size": 1921,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
      "issuerId": "./node_modules/multiaddr/src/index.js",
      "issuerName": "./node_modules/multiaddr/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/multiaddr/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
          "name": "./node_modules/multiaddr/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/multiaddr/src/codec.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
          "module": "./node_modules/multiaddr/src/codec.js",
          "moduleName": "./node_modules/multiaddr/src/codec.js",
          "type": "cjs require",
          "userRequest": "./protocols-table",
          "loc": "5:18-46"
        },
        {
          "moduleId": "./node_modules/multiaddr/src/convert.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
          "module": "./node_modules/multiaddr/src/convert.js",
          "moduleName": "./node_modules/multiaddr/src/convert.js",
          "type": "cjs require",
          "userRequest": "./protocols-table",
          "loc": "5:18-46"
        },
        {
          "moduleId": "./node_modules/multiaddr/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
          "module": "./node_modules/multiaddr/src/index.js",
          "moduleName": "./node_modules/multiaddr/src/index.js",
          "type": "cjs require",
          "userRequest": "./protocols-table",
          "loc": "5:18-46"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 5,
      "source": "'use strict'\n\nfunction Protocols (proto) {\n  if (typeof (proto) === 'number') {\n    if (Protocols.codes[proto]) {\n      return Protocols.codes[proto]\n    }\n\n    throw new Error('no protocol with code: ' + proto)\n  } else if (typeof (proto) === 'string' || proto instanceof String) {\n    if (Protocols.names[proto]) {\n      return Protocols.names[proto]\n    }\n\n    throw new Error('no protocol with name: ' + proto)\n  }\n\n  throw new Error('invalid protocol id type: ' + proto)\n}\n\nconst V = -1\nProtocols.lengthPrefixedVarSize = V\nProtocols.V = V\n\nProtocols.table = [\n  [4, 32, 'ip4'],\n  [6, 16, 'tcp'],\n  [33, 16, 'dccp'],\n  [41, 128, 'ip6'],\n  [42, V, 'ip6zone'],\n  [53, V, 'dns', 'resolvable'],\n  [54, V, 'dns4', 'resolvable'],\n  [55, V, 'dns6', 'resolvable'],\n  [56, V, 'dnsaddr', 'resolvable'],\n  [132, 16, 'sctp'],\n  [273, 16, 'udp'],\n  [275, 0, 'p2p-webrtc-star'],\n  [276, 0, 'p2p-webrtc-direct'],\n  [277, 0, 'p2p-stardust'],\n  [290, 0, 'p2p-circuit'],\n  [301, 0, 'udt'],\n  [302, 0, 'utp'],\n  [400, V, 'unix', false, 'path'],\n  // `ipfs` is added before `p2p` for legacy support.\n  // All text representations will default to `p2p`, but `ipfs` will\n  // still be supported\n  [421, V, 'ipfs'],\n  // `p2p` is the preferred name for 421, and is now the default\n  [421, V, 'p2p'],\n  [443, 0, 'https'],\n  [444, 96, 'onion'],\n  [445, 296, 'onion3'],\n  [446, V, 'garlic64'],\n  [460, 0, 'quic'],\n  [477, 0, 'ws'],\n  [478, 0, 'wss'],\n  [479, 0, 'p2p-websocket-star'],\n  [480, 0, 'http'],\n  [777, V, 'memory']\n]\n\nProtocols.names = {}\nProtocols.codes = {}\n\n// populate tables\nProtocols.table.map(row => {\n  const proto = p.apply(null, row)\n  Protocols.codes[proto.code] = proto\n  Protocols.names[proto.name] = proto\n})\n\nProtocols.object = p\n\nfunction p (code, size, name, resolvable, path) {\n  return {\n    code,\n    size,\n    name,\n    resolvable: Boolean(resolvable),\n    path: Boolean(path)\n  }\n}\n\nmodule.exports = Protocols\n"
    },
    {
      "id": "./node_modules/multibase/src/base.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/base.js",
      "name": "./node_modules/multibase/src/base.js",
      "index": 17,
      "index2": 10,
      "size": 478,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
      "issuerId": "./node_modules/multibase/src/constants.js",
      "issuerName": "./node_modules/multibase/src/constants.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/multibase/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/index.js",
          "name": "./node_modules/multibase/src/index.js"
        },
        {
          "id": "./node_modules/multibase/src/constants.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
          "name": "./node_modules/multibase/src/constants.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/multibase/src/constants.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
          "module": "./node_modules/multibase/src/constants.js",
          "moduleName": "./node_modules/multibase/src/constants.js",
          "type": "cjs require",
          "userRequest": "./base.js",
          "loc": "3:13-33"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 6,
      "source": "'use strict'\n\nclass Base {\n  constructor (name, code, implementation, alphabet) {\n    this.name = name\n    this.code = code\n    this.alphabet = alphabet\n    if (implementation && alphabet) {\n      this.engine = implementation(alphabet)\n    }\n  }\n\n  encode (stringOrBuffer) {\n    return this.engine.encode(stringOrBuffer)\n  }\n\n  decode (stringOrBuffer) {\n    return this.engine.decode(stringOrBuffer)\n  }\n\n  isImplemented () {\n    return this.engine\n  }\n}\n\nmodule.exports = Base\n"
    },
    {
      "id": "./node_modules/multibase/src/base16.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/base16.js",
      "name": "./node_modules/multibase/src/base16.js",
      "index": 18,
      "index2": 11,
      "size": 488,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
      "issuerId": "./node_modules/multibase/src/constants.js",
      "issuerName": "./node_modules/multibase/src/constants.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/multibase/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/index.js",
          "name": "./node_modules/multibase/src/index.js"
        },
        {
          "id": "./node_modules/multibase/src/constants.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
          "name": "./node_modules/multibase/src/constants.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/multibase/src/constants.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
          "module": "./node_modules/multibase/src/constants.js",
          "moduleName": "./node_modules/multibase/src/constants.js",
          "type": "cjs require",
          "userRequest": "./base16",
          "loc": "5:15-34"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 6,
      "source": "'use strict'\nconst { Buffer } = require('buffer')\n\nmodule.exports = function base16 (alphabet) {\n  return {\n    encode (input) {\n      if (typeof input === 'string') {\n        return Buffer.from(input).toString('hex')\n      }\n      return input.toString('hex')\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base16 character')\n        }\n      }\n      return Buffer.from(input, 'hex')\n    }\n  }\n}\n"
    },
    {
      "id": "./node_modules/multibase/src/base32.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/base32.js",
      "name": "./node_modules/multibase/src/base32.js",
      "index": 19,
      "index2": 12,
      "size": 1590,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
      "issuerId": "./node_modules/multibase/src/constants.js",
      "issuerName": "./node_modules/multibase/src/constants.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/multibase/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/index.js",
          "name": "./node_modules/multibase/src/index.js"
        },
        {
          "id": "./node_modules/multibase/src/constants.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
          "name": "./node_modules/multibase/src/constants.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/multibase/src/constants.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
          "module": "./node_modules/multibase/src/constants.js",
          "moduleName": "./node_modules/multibase/src/constants.js",
          "type": "cjs require",
          "userRequest": "./base32",
          "loc": "6:15-34"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 6,
      "source": "'use strict'\n\nfunction decode (input, alphabet) {\n  input = input.replace(new RegExp('=', 'g'), '')\n  const length = input.length\n\n  let bits = 0\n  let value = 0\n\n  let index = 0\n  const output = new Uint8Array((length * 5 / 8) | 0)\n\n  for (let i = 0; i < length; i++) {\n    value = (value << 5) | alphabet.indexOf(input[i])\n    bits += 5\n\n    if (bits >= 8) {\n      output[index++] = (value >>> (bits - 8)) & 255\n      bits -= 8\n    }\n  }\n\n  return output.buffer\n}\n\nfunction encode (buffer, alphabet) {\n  const length = buffer.byteLength\n  const view = new Uint8Array(buffer)\n  const padding = alphabet.indexOf('=') === alphabet.length - 1\n\n  if (padding) {\n    alphabet = alphabet.substring(0, alphabet.length - 1)\n  }\n\n  let bits = 0\n  let value = 0\n  let output = ''\n\n  for (let i = 0; i < length; i++) {\n    value = (value << 8) | view[i]\n    bits += 8\n\n    while (bits >= 5) {\n      output += alphabet[(value >>> (bits - 5)) & 31]\n      bits -= 5\n    }\n  }\n\n  if (bits > 0) {\n    output += alphabet[(value << (5 - bits)) & 31]\n  }\n\n  if (padding) {\n    while ((output.length % 8) !== 0) {\n      output += '='\n    }\n  }\n\n  return output\n}\n\nmodule.exports = function base32 (alphabet) {\n  return {\n    encode (input) {\n      if (typeof input === 'string') {\n        return encode(Uint8Array.from(input), alphabet)\n      }\n\n      return encode(input, alphabet)\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base32 character')\n        }\n      }\n\n      return decode(input, alphabet)\n    }\n  }\n}\n"
    },
    {
      "id": "./node_modules/multibase/src/base64.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/base64.js",
      "name": "./node_modules/multibase/src/base64.js",
      "index": 20,
      "index2": 13,
      "size": 1156,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
      "issuerId": "./node_modules/multibase/src/constants.js",
      "issuerName": "./node_modules/multibase/src/constants.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/multibase/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/index.js",
          "name": "./node_modules/multibase/src/index.js"
        },
        {
          "id": "./node_modules/multibase/src/constants.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
          "name": "./node_modules/multibase/src/constants.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/multibase/src/constants.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
          "module": "./node_modules/multibase/src/constants.js",
          "moduleName": "./node_modules/multibase/src/constants.js",
          "type": "cjs require",
          "userRequest": "./base64",
          "loc": "7:15-34"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 6,
      "source": "'use strict'\nconst { Buffer } = require('buffer')\n\nmodule.exports = function base64 (alphabet) {\n  // The alphabet is only used to know:\n  //   1. If padding is enabled (must contain '=')\n  //   2. If the output must be url-safe (must contain '-' and '_')\n  //   3. If the input of the output function is valid\n  // The alphabets from RFC 4648 are always used.\n  const padding = alphabet.indexOf('=') > -1\n  const url = alphabet.indexOf('-') > -1 && alphabet.indexOf('_') > -1\n\n  return {\n    encode (input) {\n      let output = ''\n\n      if (typeof input === 'string') {\n        output = Buffer.from(input).toString('base64')\n      } else {\n        output = input.toString('base64')\n      }\n\n      if (url) {\n        output = output.replace(/\\+/g, '-').replace(/\\//g, '_')\n      }\n\n      const pad = output.indexOf('=')\n      if (pad > 0 && !padding) {\n        output = output.substring(0, pad)\n      }\n\n      return output\n    },\n    decode (input) {\n      for (const char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base64 character')\n        }\n      }\n\n      return Buffer.from(input, 'base64')\n    }\n  }\n}\n"
    },
    {
      "id": "./node_modules/multibase/src/constants.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/constants.js",
      "name": "./node_modules/multibase/src/constants.js",
      "index": 16,
      "index2": 14,
      "size": 1647,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/index.js",
      "issuerId": "./node_modules/multibase/src/index.js",
      "issuerName": "./node_modules/multibase/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/multibase/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/index.js",
          "name": "./node_modules/multibase/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/multibase/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/index.js",
          "module": "./node_modules/multibase/src/index.js",
          "moduleName": "./node_modules/multibase/src/index.js",
          "type": "cjs require",
          "userRequest": "./constants",
          "loc": "8:18-40"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 5,
      "source": "'use strict'\n\nconst Base = require('./base.js')\nconst baseX = require('base-x')\nconst base16 = require('./base16')\nconst base32 = require('./base32')\nconst base64 = require('./base64')\n\n// name, code, implementation, alphabet\nconst constants = [\n  ['base1', '1', '', '1'],\n  ['base2', '0', baseX, '01'],\n  ['base8', '7', baseX, '01234567'],\n  ['base10', '9', baseX, '0123456789'],\n  ['base16', 'f', base16, '0123456789abcdef'],\n  ['base32', 'b', base32, 'abcdefghijklmnopqrstuvwxyz234567'],\n  ['base32pad', 'c', base32, 'abcdefghijklmnopqrstuvwxyz234567='],\n  ['base32hex', 'v', base32, '0123456789abcdefghijklmnopqrstuv'],\n  ['base32hexpad', 't', base32, '0123456789abcdefghijklmnopqrstuv='],\n  ['base32z', 'h', base32, 'ybndrfg8ejkmcpqxot1uwisza345h769'],\n  ['base58flickr', 'Z', baseX, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\n  ['base58btc', 'z', baseX, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\n  ['base64', 'm', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\n  ['base64pad', 'M', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\n  ['base64url', 'u', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\n  ['base64urlpad', 'U', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\n]\n\nconst names = constants.reduce((prev, tupple) => {\n  prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3])\n  return prev\n}, {})\n\nconst codes = constants.reduce((prev, tupple) => {\n  prev[tupple[1]] = names[tupple[0]]\n  return prev\n}, {})\n\nmodule.exports = {\n  names: names,\n  codes: codes\n}\n"
    },
    {
      "id": "./node_modules/multibase/src/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/index.js",
      "name": "./node_modules/multibase/src/index.js",
      "index": 15,
      "index2": 15,
      "size": 3126,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
      "issuerId": "./node_modules/is-ipfs/src/index.js",
      "issuerName": "./node_modules/is-ipfs/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/cids/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "module": "./node_modules/cids/src/index.js",
          "moduleName": "./node_modules/cids/src/index.js",
          "type": "cjs require",
          "userRequest": "multibase",
          "loc": "5:18-38"
        },
        {
          "moduleId": "./node_modules/is-ipfs/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "module": "./node_modules/is-ipfs/src/index.js",
          "moduleName": "./node_modules/is-ipfs/src/index.js",
          "type": "cjs require",
          "userRequest": "multibase",
          "loc": "5:18-38"
        },
        {
          "moduleId": "./node_modules/multiaddr/src/convert.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
          "module": "./node_modules/multiaddr/src/convert.js",
          "moduleName": "./node_modules/multiaddr/src/convert.js",
          "type": "cjs require",
          "userRequest": "multibase",
          "loc": "7:18-38"
        },
        {
          "moduleId": "./node_modules/multiaddr/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
          "module": "./node_modules/multiaddr/src/index.js",
          "moduleName": "./node_modules/multiaddr/src/index.js",
          "type": "cjs require",
          "userRequest": "multibase",
          "loc": "7:18-38"
        },
        {
          "moduleId": "./node_modules/multihashes/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
          "module": "./node_modules/multihashes/src/index.js",
          "moduleName": "./node_modules/multihashes/src/index.js",
          "type": "cjs require",
          "userRequest": "multibase",
          "loc": "9:18-38"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 4,
      "source": "/**\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\n * @module Multibase\n */\n'use strict'\n\nconst { Buffer } = require('buffer')\nconst constants = require('./constants')\n\nexports = module.exports = multibase\nexports.encode = encode\nexports.decode = decode\nexports.isEncoded = isEncoded\nexports.names = Object.freeze(Object.keys(constants.names))\nexports.codes = Object.freeze(Object.keys(constants.codes))\n\nconst errNotSupported = new Error('Unsupported encoding')\n\n/**\n * Create a new buffer with the multibase varint+code.\n *\n * @param {string|number} nameOrCode - The multibase name or code number.\n * @param {Buffer} buf - The data to be prefixed with multibase.\n * @memberof Multibase\n * @returns {Buffer}\n */\nfunction multibase (nameOrCode, buf) {\n  if (!buf) {\n    throw new Error('requires an encoded buffer')\n  }\n  const base = getBase(nameOrCode)\n  const codeBuf = Buffer.from(base.code)\n\n  const name = base.name\n  validEncode(name, buf)\n  return Buffer.concat([codeBuf, buf])\n}\n\n/**\n * Encode data with the specified base and add the multibase prefix.\n *\n * @param {string|number} nameOrCode - The multibase name or code number.\n * @param {Buffer} buf - The data to be encoded.\n * @returns {Buffer}\n * @memberof Multibase\n */\nfunction encode (nameOrCode, buf) {\n  const base = getBase(nameOrCode)\n  const name = base.name\n\n  return multibase(name, Buffer.from(base.encode(buf)))\n}\n\n/**\n * Takes a buffer or string encoded with multibase header, decodes it and\n * returns the decoded buffer\n *\n * @param {Buffer|string} bufOrString\n * @returns {Buffer}\n * @memberof Multibase\n *\n */\nfunction decode (bufOrString) {\n  if (Buffer.isBuffer(bufOrString)) {\n    bufOrString = bufOrString.toString()\n  }\n\n  const code = bufOrString.substring(0, 1)\n  bufOrString = bufOrString.substring(1, bufOrString.length)\n\n  if (typeof bufOrString === 'string') {\n    bufOrString = Buffer.from(bufOrString)\n  }\n\n  const base = getBase(code)\n  return Buffer.from(base.decode(bufOrString.toString()))\n}\n\n/**\n * Is the given data multibase encoded?\n *\n * @param {Buffer|string} bufOrString\n * @returns {boolean}\n * @memberof Multibase\n */\nfunction isEncoded (bufOrString) {\n  if (Buffer.isBuffer(bufOrString)) {\n    bufOrString = bufOrString.toString()\n  }\n\n  // Ensure bufOrString is a string\n  if (Object.prototype.toString.call(bufOrString) !== '[object String]') {\n    return false\n  }\n\n  const code = bufOrString.substring(0, 1)\n  try {\n    const base = getBase(code)\n    return base.name\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * @param {string} name\n * @param {Buffer} buf\n * @private\n * @returns {undefined}\n */\nfunction validEncode (name, buf) {\n  const base = getBase(name)\n  base.decode(buf.toString())\n}\n\nfunction getBase (nameOrCode) {\n  let base\n\n  if (constants.names[nameOrCode]) {\n    base = constants.names[nameOrCode]\n  } else if (constants.codes[nameOrCode]) {\n    base = constants.codes[nameOrCode]\n  } else {\n    throw errNotSupported\n  }\n\n  if (!base.isImplemented()) {\n    throw new Error('Base ' + nameOrCode + ' is not implemented yet')\n  }\n\n  return base\n}\n"
    },
    {
      "id": "./node_modules/multicodec/src/base-table.json",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/base-table.json",
      "name": "./node_modules/multicodec/src/base-table.json",
      "index": 36,
      "index2": 26,
      "size": 10603,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
      "issuerId": "./node_modules/cids/src/index.js",
      "issuerName": "./node_modules/cids/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/cids/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "name": "./node_modules/cids/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/cids/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "module": "./node_modules/cids/src/index.js",
          "moduleName": "./node_modules/cids/src/index.js",
          "type": "cjs require",
          "userRequest": "multicodec/src/base-table.json",
          "loc": "7:15-56"
        },
        {
          "moduleId": "./node_modules/multicodec/src/constants.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/constants.js",
          "module": "./node_modules/multicodec/src/constants.js",
          "moduleName": "./node_modules/multicodec/src/constants.js",
          "type": "cjs require",
          "userRequest": "./base-table.json",
          "loc": "3:14-42"
        },
        {
          "moduleId": "./node_modules/multicodec/src/int-table.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/int-table.js",
          "module": "./node_modules/multicodec/src/int-table.js",
          "moduleName": "./node_modules/multicodec/src/int-table.js",
          "type": "cjs require",
          "userRequest": "./base-table.json",
          "loc": "2:18-46"
        },
        {
          "moduleId": "./node_modules/multicodec/src/print.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/print.js",
          "module": "./node_modules/multicodec/src/print.js",
          "moduleName": "./node_modules/multicodec/src/print.js",
          "type": "cjs require",
          "userRequest": "./base-table.json",
          "loc": "3:14-42"
        },
        {
          "moduleId": "./node_modules/multicodec/src/varint-table.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/varint-table.js",
          "module": "./node_modules/multicodec/src/varint-table.js",
          "moduleName": "./node_modules/multicodec/src/varint-table.js",
          "type": "cjs require",
          "userRequest": "./base-table.json",
          "loc": "3:18-46"
        }
      ],
      "providedExports": [
        "identity",
        "ip4",
        "tcp",
        "sha1",
        "sha2-256",
        "sha2-512",
        "sha3-512",
        "sha3-384",
        "sha3-256",
        "sha3-224",
        "shake-128",
        "shake-256",
        "keccak-224",
        "keccak-256",
        "keccak-384",
        "keccak-512",
        "blake3",
        "dccp",
        "murmur3-128",
        "murmur3-32",
        "ip6",
        "ip6zone",
        "path",
        "multicodec",
        "multihash",
        "multiaddr",
        "multibase",
        "dns",
        "dns4",
        "dns6",
        "dnsaddr",
        "protobuf",
        "cbor",
        "raw",
        "dbl-sha2-256",
        "rlp",
        "bencode",
        "dag-pb",
        "dag-cbor",
        "libp2p-key",
        "git-raw",
        "torrent-info",
        "torrent-file",
        "leofcoin-block",
        "leofcoin-tx",
        "leofcoin-pr",
        "sctp",
        "dag-jose",
        "dag-cose",
        "eth-block",
        "eth-block-list",
        "eth-tx-trie",
        "eth-tx",
        "eth-tx-receipt-trie",
        "eth-tx-receipt",
        "eth-state-trie",
        "eth-account-snapshot",
        "eth-storage-trie",
        "bitcoin-block",
        "bitcoin-tx",
        "bitcoin-witness-commitment",
        "zcash-block",
        "zcash-tx",
        "stellar-block",
        "stellar-tx",
        "md4",
        "md5",
        "bmt",
        "decred-block",
        "decred-tx",
        "ipld-ns",
        "ipfs-ns",
        "swarm-ns",
        "ipns-ns",
        "zeronet",
        "secp256k1-pub",
        "bls12_381-g1-pub",
        "bls12_381-g2-pub",
        "x25519-pub",
        "ed25519-pub",
        "dash-block",
        "dash-tx",
        "swarm-manifest",
        "swarm-feed",
        "udp",
        "p2p-webrtc-star",
        "p2p-webrtc-direct",
        "p2p-stardust",
        "p2p-circuit",
        "dag-json",
        "udt",
        "utp",
        "unix",
        "p2p",
        "ipfs",
        "https",
        "onion",
        "onion3",
        "garlic64",
        "garlic32",
        "tls",
        "quic",
        "ws",
        "wss",
        "p2p-websocket-star",
        "http",
        "json",
        "messagepack",
        "libp2p-peer-record",
        "sha2-256-trunc254-padded",
        "ripemd-128",
        "ripemd-160",
        "ripemd-256",
        "ripemd-320",
        "x11",
        "sm3-256",
        "blake2b-8",
        "blake2b-16",
        "blake2b-24",
        "blake2b-32",
        "blake2b-40",
        "blake2b-48",
        "blake2b-56",
        "blake2b-64",
        "blake2b-72",
        "blake2b-80",
        "blake2b-88",
        "blake2b-96",
        "blake2b-104",
        "blake2b-112",
        "blake2b-120",
        "blake2b-128",
        "blake2b-136",
        "blake2b-144",
        "blake2b-152",
        "blake2b-160",
        "blake2b-168",
        "blake2b-176",
        "blake2b-184",
        "blake2b-192",
        "blake2b-200",
        "blake2b-208",
        "blake2b-216",
        "blake2b-224",
        "blake2b-232",
        "blake2b-240",
        "blake2b-248",
        "blake2b-256",
        "blake2b-264",
        "blake2b-272",
        "blake2b-280",
        "blake2b-288",
        "blake2b-296",
        "blake2b-304",
        "blake2b-312",
        "blake2b-320",
        "blake2b-328",
        "blake2b-336",
        "blake2b-344",
        "blake2b-352",
        "blake2b-360",
        "blake2b-368",
        "blake2b-376",
        "blake2b-384",
        "blake2b-392",
        "blake2b-400",
        "blake2b-408",
        "blake2b-416",
        "blake2b-424",
        "blake2b-432",
        "blake2b-440",
        "blake2b-448",
        "blake2b-456",
        "blake2b-464",
        "blake2b-472",
        "blake2b-480",
        "blake2b-488",
        "blake2b-496",
        "blake2b-504",
        "blake2b-512",
        "blake2s-8",
        "blake2s-16",
        "blake2s-24",
        "blake2s-32",
        "blake2s-40",
        "blake2s-48",
        "blake2s-56",
        "blake2s-64",
        "blake2s-72",
        "blake2s-80",
        "blake2s-88",
        "blake2s-96",
        "blake2s-104",
        "blake2s-112",
        "blake2s-120",
        "blake2s-128",
        "blake2s-136",
        "blake2s-144",
        "blake2s-152",
        "blake2s-160",
        "blake2s-168",
        "blake2s-176",
        "blake2s-184",
        "blake2s-192",
        "blake2s-200",
        "blake2s-208",
        "blake2s-216",
        "blake2s-224",
        "blake2s-232",
        "blake2s-240",
        "blake2s-248",
        "blake2s-256",
        "skein256-8",
        "skein256-16",
        "skein256-24",
        "skein256-32",
        "skein256-40",
        "skein256-48",
        "skein256-56",
        "skein256-64",
        "skein256-72",
        "skein256-80",
        "skein256-88",
        "skein256-96",
        "skein256-104",
        "skein256-112",
        "skein256-120",
        "skein256-128",
        "skein256-136",
        "skein256-144",
        "skein256-152",
        "skein256-160",
        "skein256-168",
        "skein256-176",
        "skein256-184",
        "skein256-192",
        "skein256-200",
        "skein256-208",
        "skein256-216",
        "skein256-224",
        "skein256-232",
        "skein256-240",
        "skein256-248",
        "skein256-256",
        "skein512-8",
        "skein512-16",
        "skein512-24",
        "skein512-32",
        "skein512-40",
        "skein512-48",
        "skein512-56",
        "skein512-64",
        "skein512-72",
        "skein512-80",
        "skein512-88",
        "skein512-96",
        "skein512-104",
        "skein512-112",
        "skein512-120",
        "skein512-128",
        "skein512-136",
        "skein512-144",
        "skein512-152",
        "skein512-160",
        "skein512-168",
        "skein512-176",
        "skein512-184",
        "skein512-192",
        "skein512-200",
        "skein512-208",
        "skein512-216",
        "skein512-224",
        "skein512-232",
        "skein512-240",
        "skein512-248",
        "skein512-256",
        "skein512-264",
        "skein512-272",
        "skein512-280",
        "skein512-288",
        "skein512-296",
        "skein512-304",
        "skein512-312",
        "skein512-320",
        "skein512-328",
        "skein512-336",
        "skein512-344",
        "skein512-352",
        "skein512-360",
        "skein512-368",
        "skein512-376",
        "skein512-384",
        "skein512-392",
        "skein512-400",
        "skein512-408",
        "skein512-416",
        "skein512-424",
        "skein512-432",
        "skein512-440",
        "skein512-448",
        "skein512-456",
        "skein512-464",
        "skein512-472",
        "skein512-480",
        "skein512-488",
        "skein512-496",
        "skein512-504",
        "skein512-512",
        "skein1024-8",
        "skein1024-16",
        "skein1024-24",
        "skein1024-32",
        "skein1024-40",
        "skein1024-48",
        "skein1024-56",
        "skein1024-64",
        "skein1024-72",
        "skein1024-80",
        "skein1024-88",
        "skein1024-96",
        "skein1024-104",
        "skein1024-112",
        "skein1024-120",
        "skein1024-128",
        "skein1024-136",
        "skein1024-144",
        "skein1024-152",
        "skein1024-160",
        "skein1024-168",
        "skein1024-176",
        "skein1024-184",
        "skein1024-192",
        "skein1024-200",
        "skein1024-208",
        "skein1024-216",
        "skein1024-224",
        "skein1024-232",
        "skein1024-240",
        "skein1024-248",
        "skein1024-256",
        "skein1024-264",
        "skein1024-272",
        "skein1024-280",
        "skein1024-288",
        "skein1024-296",
        "skein1024-304",
        "skein1024-312",
        "skein1024-320",
        "skein1024-328",
        "skein1024-336",
        "skein1024-344",
        "skein1024-352",
        "skein1024-360",
        "skein1024-368",
        "skein1024-376",
        "skein1024-384",
        "skein1024-392",
        "skein1024-400",
        "skein1024-408",
        "skein1024-416",
        "skein1024-424",
        "skein1024-432",
        "skein1024-440",
        "skein1024-448",
        "skein1024-456",
        "skein1024-464",
        "skein1024-472",
        "skein1024-480",
        "skein1024-488",
        "skein1024-496",
        "skein1024-504",
        "skein1024-512",
        "skein1024-520",
        "skein1024-528",
        "skein1024-536",
        "skein1024-544",
        "skein1024-552",
        "skein1024-560",
        "skein1024-568",
        "skein1024-576",
        "skein1024-584",
        "skein1024-592",
        "skein1024-600",
        "skein1024-608",
        "skein1024-616",
        "skein1024-624",
        "skein1024-632",
        "skein1024-640",
        "skein1024-648",
        "skein1024-656",
        "skein1024-664",
        "skein1024-672",
        "skein1024-680",
        "skein1024-688",
        "skein1024-696",
        "skein1024-704",
        "skein1024-712",
        "skein1024-720",
        "skein1024-728",
        "skein1024-736",
        "skein1024-744",
        "skein1024-752",
        "skein1024-760",
        "skein1024-768",
        "skein1024-776",
        "skein1024-784",
        "skein1024-792",
        "skein1024-800",
        "skein1024-808",
        "skein1024-816",
        "skein1024-824",
        "skein1024-832",
        "skein1024-840",
        "skein1024-848",
        "skein1024-856",
        "skein1024-864",
        "skein1024-872",
        "skein1024-880",
        "skein1024-888",
        "skein1024-896",
        "skein1024-904",
        "skein1024-912",
        "skein1024-920",
        "skein1024-928",
        "skein1024-936",
        "skein1024-944",
        "skein1024-952",
        "skein1024-960",
        "skein1024-968",
        "skein1024-976",
        "skein1024-984",
        "skein1024-992",
        "skein1024-1000",
        "skein1024-1008",
        "skein1024-1016",
        "skein1024-1024",
        "poseidon-bls12_381-a2-fc1",
        "poseidon-bls12_381-a2-fc1-sc",
        "zeroxcert-imprint-256",
        "fil-commitment-unsealed",
        "fil-commitment-sealed",
        "holochain-adr-v0",
        "holochain-adr-v1",
        "holochain-key-v0",
        "holochain-key-v1",
        "holochain-sig-v0",
        "holochain-sig-v1",
        "default"
      ],
      "optimizationBailout": [],
      "depth": 5,
      "source": "{\n  \"identity\": 0,\n  \"ip4\": 4,\n  \"tcp\": 6,\n  \"sha1\": 17,\n  \"sha2-256\": 18,\n  \"sha2-512\": 19,\n  \"sha3-512\": 20,\n  \"sha3-384\": 21,\n  \"sha3-256\": 22,\n  \"sha3-224\": 23,\n  \"shake-128\": 24,\n  \"shake-256\": 25,\n  \"keccak-224\": 26,\n  \"keccak-256\": 27,\n  \"keccak-384\": 28,\n  \"keccak-512\": 29,\n  \"blake3\": 30,\n  \"dccp\": 33,\n  \"murmur3-128\": 34,\n  \"murmur3-32\": 35,\n  \"ip6\": 41,\n  \"ip6zone\": 42,\n  \"path\": 47,\n  \"multicodec\": 48,\n  \"multihash\": 49,\n  \"multiaddr\": 50,\n  \"multibase\": 51,\n  \"dns\": 53,\n  \"dns4\": 54,\n  \"dns6\": 55,\n  \"dnsaddr\": 56,\n  \"protobuf\": 80,\n  \"cbor\": 81,\n  \"raw\": 85,\n  \"dbl-sha2-256\": 86,\n  \"rlp\": 96,\n  \"bencode\": 99,\n  \"dag-pb\": 112,\n  \"dag-cbor\": 113,\n  \"libp2p-key\": 114,\n  \"git-raw\": 120,\n  \"torrent-info\": 123,\n  \"torrent-file\": 124,\n  \"leofcoin-block\": 129,\n  \"leofcoin-tx\": 130,\n  \"leofcoin-pr\": 131,\n  \"sctp\": 132,\n  \"dag-jose\": 133,\n  \"dag-cose\": 134,\n  \"eth-block\": 144,\n  \"eth-block-list\": 145,\n  \"eth-tx-trie\": 146,\n  \"eth-tx\": 147,\n  \"eth-tx-receipt-trie\": 148,\n  \"eth-tx-receipt\": 149,\n  \"eth-state-trie\": 150,\n  \"eth-account-snapshot\": 151,\n  \"eth-storage-trie\": 152,\n  \"bitcoin-block\": 176,\n  \"bitcoin-tx\": 177,\n  \"bitcoin-witness-commitment\": 178,\n  \"zcash-block\": 192,\n  \"zcash-tx\": 193,\n  \"stellar-block\": 208,\n  \"stellar-tx\": 209,\n  \"md4\": 212,\n  \"md5\": 213,\n  \"bmt\": 214,\n  \"decred-block\": 224,\n  \"decred-tx\": 225,\n  \"ipld-ns\": 226,\n  \"ipfs-ns\": 227,\n  \"swarm-ns\": 228,\n  \"ipns-ns\": 229,\n  \"zeronet\": 230,\n  \"secp256k1-pub\": 231,\n  \"bls12_381-g1-pub\": 234,\n  \"bls12_381-g2-pub\": 235,\n  \"x25519-pub\": 236,\n  \"ed25519-pub\": 237,\n  \"dash-block\": 240,\n  \"dash-tx\": 241,\n  \"swarm-manifest\": 250,\n  \"swarm-feed\": 251,\n  \"udp\": 273,\n  \"p2p-webrtc-star\": 275,\n  \"p2p-webrtc-direct\": 276,\n  \"p2p-stardust\": 277,\n  \"p2p-circuit\": 290,\n  \"dag-json\": 297,\n  \"udt\": 301,\n  \"utp\": 302,\n  \"unix\": 400,\n  \"p2p\": 421,\n  \"ipfs\": 421,\n  \"https\": 443,\n  \"onion\": 444,\n  \"onion3\": 445,\n  \"garlic64\": 446,\n  \"garlic32\": 447,\n  \"tls\": 448,\n  \"quic\": 460,\n  \"ws\": 477,\n  \"wss\": 478,\n  \"p2p-websocket-star\": 479,\n  \"http\": 480,\n  \"json\": 512,\n  \"messagepack\": 513,\n  \"libp2p-peer-record\": 769,\n  \"sha2-256-trunc254-padded\": 4114,\n  \"ripemd-128\": 4178,\n  \"ripemd-160\": 4179,\n  \"ripemd-256\": 4180,\n  \"ripemd-320\": 4181,\n  \"x11\": 4352,\n  \"sm3-256\": 21325,\n  \"blake2b-8\": 45569,\n  \"blake2b-16\": 45570,\n  \"blake2b-24\": 45571,\n  \"blake2b-32\": 45572,\n  \"blake2b-40\": 45573,\n  \"blake2b-48\": 45574,\n  \"blake2b-56\": 45575,\n  \"blake2b-64\": 45576,\n  \"blake2b-72\": 45577,\n  \"blake2b-80\": 45578,\n  \"blake2b-88\": 45579,\n  \"blake2b-96\": 45580,\n  \"blake2b-104\": 45581,\n  \"blake2b-112\": 45582,\n  \"blake2b-120\": 45583,\n  \"blake2b-128\": 45584,\n  \"blake2b-136\": 45585,\n  \"blake2b-144\": 45586,\n  \"blake2b-152\": 45587,\n  \"blake2b-160\": 45588,\n  \"blake2b-168\": 45589,\n  \"blake2b-176\": 45590,\n  \"blake2b-184\": 45591,\n  \"blake2b-192\": 45592,\n  \"blake2b-200\": 45593,\n  \"blake2b-208\": 45594,\n  \"blake2b-216\": 45595,\n  \"blake2b-224\": 45596,\n  \"blake2b-232\": 45597,\n  \"blake2b-240\": 45598,\n  \"blake2b-248\": 45599,\n  \"blake2b-256\": 45600,\n  \"blake2b-264\": 45601,\n  \"blake2b-272\": 45602,\n  \"blake2b-280\": 45603,\n  \"blake2b-288\": 45604,\n  \"blake2b-296\": 45605,\n  \"blake2b-304\": 45606,\n  \"blake2b-312\": 45607,\n  \"blake2b-320\": 45608,\n  \"blake2b-328\": 45609,\n  \"blake2b-336\": 45610,\n  \"blake2b-344\": 45611,\n  \"blake2b-352\": 45612,\n  \"blake2b-360\": 45613,\n  \"blake2b-368\": 45614,\n  \"blake2b-376\": 45615,\n  \"blake2b-384\": 45616,\n  \"blake2b-392\": 45617,\n  \"blake2b-400\": 45618,\n  \"blake2b-408\": 45619,\n  \"blake2b-416\": 45620,\n  \"blake2b-424\": 45621,\n  \"blake2b-432\": 45622,\n  \"blake2b-440\": 45623,\n  \"blake2b-448\": 45624,\n  \"blake2b-456\": 45625,\n  \"blake2b-464\": 45626,\n  \"blake2b-472\": 45627,\n  \"blake2b-480\": 45628,\n  \"blake2b-488\": 45629,\n  \"blake2b-496\": 45630,\n  \"blake2b-504\": 45631,\n  \"blake2b-512\": 45632,\n  \"blake2s-8\": 45633,\n  \"blake2s-16\": 45634,\n  \"blake2s-24\": 45635,\n  \"blake2s-32\": 45636,\n  \"blake2s-40\": 45637,\n  \"blake2s-48\": 45638,\n  \"blake2s-56\": 45639,\n  \"blake2s-64\": 45640,\n  \"blake2s-72\": 45641,\n  \"blake2s-80\": 45642,\n  \"blake2s-88\": 45643,\n  \"blake2s-96\": 45644,\n  \"blake2s-104\": 45645,\n  \"blake2s-112\": 45646,\n  \"blake2s-120\": 45647,\n  \"blake2s-128\": 45648,\n  \"blake2s-136\": 45649,\n  \"blake2s-144\": 45650,\n  \"blake2s-152\": 45651,\n  \"blake2s-160\": 45652,\n  \"blake2s-168\": 45653,\n  \"blake2s-176\": 45654,\n  \"blake2s-184\": 45655,\n  \"blake2s-192\": 45656,\n  \"blake2s-200\": 45657,\n  \"blake2s-208\": 45658,\n  \"blake2s-216\": 45659,\n  \"blake2s-224\": 45660,\n  \"blake2s-232\": 45661,\n  \"blake2s-240\": 45662,\n  \"blake2s-248\": 45663,\n  \"blake2s-256\": 45664,\n  \"skein256-8\": 45825,\n  \"skein256-16\": 45826,\n  \"skein256-24\": 45827,\n  \"skein256-32\": 45828,\n  \"skein256-40\": 45829,\n  \"skein256-48\": 45830,\n  \"skein256-56\": 45831,\n  \"skein256-64\": 45832,\n  \"skein256-72\": 45833,\n  \"skein256-80\": 45834,\n  \"skein256-88\": 45835,\n  \"skein256-96\": 45836,\n  \"skein256-104\": 45837,\n  \"skein256-112\": 45838,\n  \"skein256-120\": 45839,\n  \"skein256-128\": 45840,\n  \"skein256-136\": 45841,\n  \"skein256-144\": 45842,\n  \"skein256-152\": 45843,\n  \"skein256-160\": 45844,\n  \"skein256-168\": 45845,\n  \"skein256-176\": 45846,\n  \"skein256-184\": 45847,\n  \"skein256-192\": 45848,\n  \"skein256-200\": 45849,\n  \"skein256-208\": 45850,\n  \"skein256-216\": 45851,\n  \"skein256-224\": 45852,\n  \"skein256-232\": 45853,\n  \"skein256-240\": 45854,\n  \"skein256-248\": 45855,\n  \"skein256-256\": 45856,\n  \"skein512-8\": 45857,\n  \"skein512-16\": 45858,\n  \"skein512-24\": 45859,\n  \"skein512-32\": 45860,\n  \"skein512-40\": 45861,\n  \"skein512-48\": 45862,\n  \"skein512-56\": 45863,\n  \"skein512-64\": 45864,\n  \"skein512-72\": 45865,\n  \"skein512-80\": 45866,\n  \"skein512-88\": 45867,\n  \"skein512-96\": 45868,\n  \"skein512-104\": 45869,\n  \"skein512-112\": 45870,\n  \"skein512-120\": 45871,\n  \"skein512-128\": 45872,\n  \"skein512-136\": 45873,\n  \"skein512-144\": 45874,\n  \"skein512-152\": 45875,\n  \"skein512-160\": 45876,\n  \"skein512-168\": 45877,\n  \"skein512-176\": 45878,\n  \"skein512-184\": 45879,\n  \"skein512-192\": 45880,\n  \"skein512-200\": 45881,\n  \"skein512-208\": 45882,\n  \"skein512-216\": 45883,\n  \"skein512-224\": 45884,\n  \"skein512-232\": 45885,\n  \"skein512-240\": 45886,\n  \"skein512-248\": 45887,\n  \"skein512-256\": 45888,\n  \"skein512-264\": 45889,\n  \"skein512-272\": 45890,\n  \"skein512-280\": 45891,\n  \"skein512-288\": 45892,\n  \"skein512-296\": 45893,\n  \"skein512-304\": 45894,\n  \"skein512-312\": 45895,\n  \"skein512-320\": 45896,\n  \"skein512-328\": 45897,\n  \"skein512-336\": 45898,\n  \"skein512-344\": 45899,\n  \"skein512-352\": 45900,\n  \"skein512-360\": 45901,\n  \"skein512-368\": 45902,\n  \"skein512-376\": 45903,\n  \"skein512-384\": 45904,\n  \"skein512-392\": 45905,\n  \"skein512-400\": 45906,\n  \"skein512-408\": 45907,\n  \"skein512-416\": 45908,\n  \"skein512-424\": 45909,\n  \"skein512-432\": 45910,\n  \"skein512-440\": 45911,\n  \"skein512-448\": 45912,\n  \"skein512-456\": 45913,\n  \"skein512-464\": 45914,\n  \"skein512-472\": 45915,\n  \"skein512-480\": 45916,\n  \"skein512-488\": 45917,\n  \"skein512-496\": 45918,\n  \"skein512-504\": 45919,\n  \"skein512-512\": 45920,\n  \"skein1024-8\": 45921,\n  \"skein1024-16\": 45922,\n  \"skein1024-24\": 45923,\n  \"skein1024-32\": 45924,\n  \"skein1024-40\": 45925,\n  \"skein1024-48\": 45926,\n  \"skein1024-56\": 45927,\n  \"skein1024-64\": 45928,\n  \"skein1024-72\": 45929,\n  \"skein1024-80\": 45930,\n  \"skein1024-88\": 45931,\n  \"skein1024-96\": 45932,\n  \"skein1024-104\": 45933,\n  \"skein1024-112\": 45934,\n  \"skein1024-120\": 45935,\n  \"skein1024-128\": 45936,\n  \"skein1024-136\": 45937,\n  \"skein1024-144\": 45938,\n  \"skein1024-152\": 45939,\n  \"skein1024-160\": 45940,\n  \"skein1024-168\": 45941,\n  \"skein1024-176\": 45942,\n  \"skein1024-184\": 45943,\n  \"skein1024-192\": 45944,\n  \"skein1024-200\": 45945,\n  \"skein1024-208\": 45946,\n  \"skein1024-216\": 45947,\n  \"skein1024-224\": 45948,\n  \"skein1024-232\": 45949,\n  \"skein1024-240\": 45950,\n  \"skein1024-248\": 45951,\n  \"skein1024-256\": 45952,\n  \"skein1024-264\": 45953,\n  \"skein1024-272\": 45954,\n  \"skein1024-280\": 45955,\n  \"skein1024-288\": 45956,\n  \"skein1024-296\": 45957,\n  \"skein1024-304\": 45958,\n  \"skein1024-312\": 45959,\n  \"skein1024-320\": 45960,\n  \"skein1024-328\": 45961,\n  \"skein1024-336\": 45962,\n  \"skein1024-344\": 45963,\n  \"skein1024-352\": 45964,\n  \"skein1024-360\": 45965,\n  \"skein1024-368\": 45966,\n  \"skein1024-376\": 45967,\n  \"skein1024-384\": 45968,\n  \"skein1024-392\": 45969,\n  \"skein1024-400\": 45970,\n  \"skein1024-408\": 45971,\n  \"skein1024-416\": 45972,\n  \"skein1024-424\": 45973,\n  \"skein1024-432\": 45974,\n  \"skein1024-440\": 45975,\n  \"skein1024-448\": 45976,\n  \"skein1024-456\": 45977,\n  \"skein1024-464\": 45978,\n  \"skein1024-472\": 45979,\n  \"skein1024-480\": 45980,\n  \"skein1024-488\": 45981,\n  \"skein1024-496\": 45982,\n  \"skein1024-504\": 45983,\n  \"skein1024-512\": 45984,\n  \"skein1024-520\": 45985,\n  \"skein1024-528\": 45986,\n  \"skein1024-536\": 45987,\n  \"skein1024-544\": 45988,\n  \"skein1024-552\": 45989,\n  \"skein1024-560\": 45990,\n  \"skein1024-568\": 45991,\n  \"skein1024-576\": 45992,\n  \"skein1024-584\": 45993,\n  \"skein1024-592\": 45994,\n  \"skein1024-600\": 45995,\n  \"skein1024-608\": 45996,\n  \"skein1024-616\": 45997,\n  \"skein1024-624\": 45998,\n  \"skein1024-632\": 45999,\n  \"skein1024-640\": 46000,\n  \"skein1024-648\": 46001,\n  \"skein1024-656\": 46002,\n  \"skein1024-664\": 46003,\n  \"skein1024-672\": 46004,\n  \"skein1024-680\": 46005,\n  \"skein1024-688\": 46006,\n  \"skein1024-696\": 46007,\n  \"skein1024-704\": 46008,\n  \"skein1024-712\": 46009,\n  \"skein1024-720\": 46010,\n  \"skein1024-728\": 46011,\n  \"skein1024-736\": 46012,\n  \"skein1024-744\": 46013,\n  \"skein1024-752\": 46014,\n  \"skein1024-760\": 46015,\n  \"skein1024-768\": 46016,\n  \"skein1024-776\": 46017,\n  \"skein1024-784\": 46018,\n  \"skein1024-792\": 46019,\n  \"skein1024-800\": 46020,\n  \"skein1024-808\": 46021,\n  \"skein1024-816\": 46022,\n  \"skein1024-824\": 46023,\n  \"skein1024-832\": 46024,\n  \"skein1024-840\": 46025,\n  \"skein1024-848\": 46026,\n  \"skein1024-856\": 46027,\n  \"skein1024-864\": 46028,\n  \"skein1024-872\": 46029,\n  \"skein1024-880\": 46030,\n  \"skein1024-888\": 46031,\n  \"skein1024-896\": 46032,\n  \"skein1024-904\": 46033,\n  \"skein1024-912\": 46034,\n  \"skein1024-920\": 46035,\n  \"skein1024-928\": 46036,\n  \"skein1024-936\": 46037,\n  \"skein1024-944\": 46038,\n  \"skein1024-952\": 46039,\n  \"skein1024-960\": 46040,\n  \"skein1024-968\": 46041,\n  \"skein1024-976\": 46042,\n  \"skein1024-984\": 46043,\n  \"skein1024-992\": 46044,\n  \"skein1024-1000\": 46045,\n  \"skein1024-1008\": 46046,\n  \"skein1024-1016\": 46047,\n  \"skein1024-1024\": 46048,\n  \"poseidon-bls12_381-a2-fc1\": 46081,\n  \"poseidon-bls12_381-a2-fc1-sc\": 46082,\n  \"zeroxcert-imprint-256\": 52753,\n  \"fil-commitment-unsealed\": 61697,\n  \"fil-commitment-sealed\": 61698,\n  \"holochain-adr-v0\": 8417572,\n  \"holochain-adr-v1\": 8483108,\n  \"holochain-key-v0\": 9728292,\n  \"holochain-key-v1\": 9793828,\n  \"holochain-sig-v0\": 10645796,\n  \"holochain-sig-v1\": 10711332\n}"
    },
    {
      "id": "./node_modules/multicodec/src/constants.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/constants.js",
      "name": "./node_modules/multicodec/src/constants.js",
      "index": 39,
      "index2": 30,
      "size": 268,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
      "issuerId": "./node_modules/multicodec/src/index.js",
      "issuerName": "./node_modules/multicodec/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/cids/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "name": "./node_modules/cids/src/index.js"
        },
        {
          "id": "./node_modules/multicodec/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
          "name": "./node_modules/multicodec/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/multicodec/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
          "module": "./node_modules/multicodec/src/index.js",
          "moduleName": "./node_modules/multicodec/src/index.js",
          "type": "cjs require",
          "userRequest": "./constants",
          "loc": "123:18-40"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 6,
      "source": "'use strict'\n\nconst table = require('./base-table.json')\n\n// map for codecConstant -> code\nconst constants = {}\n\nfor (const [name, code] of Object.entries(table)) {\n  constants[name.toUpperCase().replace(/-/g, '_')] = code\n}\n\nmodule.exports = Object.freeze(constants)\n"
    },
    {
      "id": "./node_modules/multicodec/src/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
      "name": "./node_modules/multicodec/src/index.js",
      "index": 34,
      "index2": 32,
      "size": 2865,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
      "issuerId": "./node_modules/cids/src/index.js",
      "issuerName": "./node_modules/cids/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/cids/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "name": "./node_modules/cids/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/cids/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "module": "./node_modules/cids/src/index.js",
          "moduleName": "./node_modules/cids/src/index.js",
          "type": "cjs require",
          "userRequest": "multicodec",
          "loc": "6:19-40"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 5,
      "source": "/**\n * Implementation of the multicodec specification.\n *\n * @module multicodec\n * @example\n * const multicodec = require('multicodec')\n *\n * const prefixedProtobuf = multicodec.addPrefix('protobuf', protobufBuffer)\n * // prefixedProtobuf 0x50...\n *\n */\n'use strict'\n\nconst { Buffer } = require('buffer')\nconst varint = require('varint')\nconst intTable = require('./int-table')\nconst codecNameToCodeVarint = require('./varint-table')\nconst util = require('./util')\n\nexports = module.exports\n\n/**\n * Prefix a buffer with a multicodec-packed.\n *\n * @param {string|number} multicodecStrOrCode\n * @param {Buffer} data\n * @returns {Buffer}\n */\nexports.addPrefix = (multicodecStrOrCode, data) => {\n  let prefix\n\n  if (Buffer.isBuffer(multicodecStrOrCode)) {\n    prefix = util.varintBufferEncode(multicodecStrOrCode)\n  } else {\n    if (codecNameToCodeVarint[multicodecStrOrCode]) {\n      prefix = codecNameToCodeVarint[multicodecStrOrCode]\n    } else {\n      throw new Error('multicodec not recognized')\n    }\n  }\n  return Buffer.concat([prefix, data])\n}\n\n/**\n * Decapsulate the multicodec-packed prefix from the data.\n *\n * @param {Buffer} data\n * @returns {Buffer}\n */\nexports.rmPrefix = (data) => {\n  varint.decode(data)\n  return data.slice(varint.decode.bytes)\n}\n\n/**\n * Get the codec of the prefixed data.\n * @param {Buffer} prefixedData\n * @returns {string}\n */\nexports.getCodec = (prefixedData) => {\n  const code = varint.decode(prefixedData)\n  const codecName = intTable.get(code)\n  if (codecName === undefined) {\n    throw new Error(`Code ${code} not found`)\n  }\n  return codecName\n}\n\n/**\n * Get the name of the codec.\n * @param {number} codec\n * @returns {string}\n */\nexports.getName = (codec) => {\n  return intTable.get(codec)\n}\n\n/**\n * Get the code of the codec\n * @param {string} name\n * @returns {number}\n */\nexports.getNumber = (name) => {\n  const code = codecNameToCodeVarint[name]\n  if (code === undefined) {\n    throw new Error('Codec `' + name + '` not found')\n  }\n  return util.varintBufferDecode(code)[0]\n}\n\n/**\n * Get the code of the prefixed data.\n * @param {Buffer} prefixedData\n * @returns {number}\n */\nexports.getCode = (prefixedData) => {\n  return varint.decode(prefixedData)\n}\n\n/**\n * Get the code as varint of a codec name.\n * @param {string} codecName\n * @returns {Buffer}\n */\nexports.getCodeVarint = (codecName) => {\n  const code = codecNameToCodeVarint[codecName]\n  if (code === undefined) {\n    throw new Error('Codec `' + codecName + '` not found')\n  }\n  return code\n}\n\n/**\n * Get the varint of a code.\n * @param {Number} code\n * @returns {Array.<number>}\n */\nexports.getVarint = (code) => {\n  return varint.encode(code)\n}\n\n// Make the constants top-level constants\nconst constants = require('./constants')\nObject.assign(exports, constants)\n\n// Human friendly names for printing, e.g. in error messages\nexports.print = require('./print')\n"
    },
    {
      "id": "./node_modules/multicodec/src/int-table.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/int-table.js",
      "name": "./node_modules/multicodec/src/int-table.js",
      "index": 35,
      "index2": 27,
      "size": 284,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
      "issuerId": "./node_modules/multicodec/src/index.js",
      "issuerName": "./node_modules/multicodec/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/cids/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "name": "./node_modules/cids/src/index.js"
        },
        {
          "id": "./node_modules/multicodec/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
          "name": "./node_modules/multicodec/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/multicodec/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
          "module": "./node_modules/multicodec/src/index.js",
          "moduleName": "./node_modules/multicodec/src/index.js",
          "type": "cjs require",
          "userRequest": "./int-table",
          "loc": "16:17-39"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 6,
      "source": "'use strict'\nconst baseTable = require('./base-table.json')\n\n// map for hexString -> codecName\nconst nameTable = new Map()\n\nfor (const encodingName in baseTable) {\n  const code = baseTable[encodingName]\n  nameTable.set(code, encodingName)\n}\n\nmodule.exports = Object.freeze(nameTable)\n"
    },
    {
      "id": "./node_modules/multicodec/src/print.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/print.js",
      "name": "./node_modules/multicodec/src/print.js",
      "index": 40,
      "index2": 31,
      "size": 284,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
      "issuerId": "./node_modules/multicodec/src/index.js",
      "issuerName": "./node_modules/multicodec/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/cids/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "name": "./node_modules/cids/src/index.js"
        },
        {
          "id": "./node_modules/multicodec/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
          "name": "./node_modules/multicodec/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/multicodec/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
          "module": "./node_modules/multicodec/src/index.js",
          "moduleName": "./node_modules/multicodec/src/index.js",
          "type": "cjs require",
          "userRequest": "./print",
          "loc": "127:16-34"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 6,
      "source": "'use strict'\n\nconst table = require('./base-table.json')\n\n// map for code -> print friendly name\nconst tableByCode = {}\n\nfor (const [name, code] of Object.entries(table)) {\n  if (tableByCode[code] === undefined) tableByCode[code] = name\n}\n\nmodule.exports = Object.freeze(tableByCode)\n"
    },
    {
      "id": "./node_modules/multicodec/src/util.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/util.js",
      "name": "./node_modules/multicodec/src/util.js",
      "index": 38,
      "index2": 28,
      "size": 720,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
      "issuerId": "./node_modules/multicodec/src/index.js",
      "issuerName": "./node_modules/multicodec/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/cids/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "name": "./node_modules/cids/src/index.js"
        },
        {
          "id": "./node_modules/multicodec/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
          "name": "./node_modules/multicodec/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/multicodec/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
          "module": "./node_modules/multicodec/src/index.js",
          "moduleName": "./node_modules/multicodec/src/index.js",
          "type": "cjs require",
          "userRequest": "./util",
          "loc": "18:13-30"
        },
        {
          "moduleId": "./node_modules/multicodec/src/varint-table.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/varint-table.js",
          "module": "./node_modules/multicodec/src/varint-table.js",
          "moduleName": "./node_modules/multicodec/src/varint-table.js",
          "type": "cjs require",
          "userRequest": "./util",
          "loc": "4:21-38"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 6,
      "source": "'use strict'\nconst varint = require('varint')\nconst { Buffer } = require('buffer')\n\nmodule.exports = {\n  numberToBuffer,\n  bufferToNumber,\n  varintBufferEncode,\n  varintBufferDecode,\n  varintEncode\n}\n\nfunction bufferToNumber (buf) {\n  return parseInt(buf.toString('hex'), 16)\n}\n\nfunction numberToBuffer (num) {\n  let hexString = num.toString(16)\n  if (hexString.length % 2 === 1) {\n    hexString = '0' + hexString\n  }\n  return Buffer.from(hexString, 'hex')\n}\n\nfunction varintBufferEncode (input) {\n  return Buffer.from(varint.encode(bufferToNumber(input)))\n}\n\nfunction varintBufferDecode (input) {\n  return numberToBuffer(varint.decode(input))\n}\n\nfunction varintEncode (num) {\n  return Buffer.from(varint.encode(num))\n}\n"
    },
    {
      "id": "./node_modules/multicodec/src/varint-table.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/varint-table.js",
      "name": "./node_modules/multicodec/src/varint-table.js",
      "index": 37,
      "index2": 29,
      "size": 354,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
      "issuerId": "./node_modules/multicodec/src/index.js",
      "issuerName": "./node_modules/multicodec/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/cids/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "name": "./node_modules/cids/src/index.js"
        },
        {
          "id": "./node_modules/multicodec/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
          "name": "./node_modules/multicodec/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/multicodec/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
          "module": "./node_modules/multicodec/src/index.js",
          "moduleName": "./node_modules/multicodec/src/index.js",
          "type": "cjs require",
          "userRequest": "./varint-table",
          "loc": "17:30-55"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 6,
      "source": "'use strict'\n\nconst baseTable = require('./base-table.json')\nconst varintEncode = require('./util').varintEncode\n\n// map for codecName -> codeVarintBuffer\nconst varintTable = {}\n\nfor (const encodingName in baseTable) {\n  const code = baseTable[encodingName]\n  varintTable[encodingName] = varintEncode(code)\n}\n\nmodule.exports = Object.freeze(varintTable)\n"
    },
    {
      "id": "./node_modules/multihashes/src/constants.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/constants.js",
      "name": "./node_modules/multihashes/src/constants.js",
      "index": 25,
      "index2": 20,
      "size": 22947,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
      "issuerId": "./node_modules/multihashes/src/index.js",
      "issuerName": "./node_modules/multihashes/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/multihashes/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
          "name": "./node_modules/multihashes/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/multihashes/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
          "module": "./node_modules/multihashes/src/index.js",
          "moduleName": "./node_modules/multihashes/src/index.js",
          "type": "cjs require",
          "userRequest": "./constants",
          "loc": "11:11-33"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 5,
      "source": "/* eslint quote-props: off */\n/* eslint key-spacing: off */\n'use strict'\n\nexports.names = Object.freeze({\n  'identity':   0x0,\n  'sha1':       0x11,\n  'sha2-256':   0x12,\n  'sha2-512':   0x13,\n  'dbl-sha2-256': 0x56,\n  'sha3-224':   0x17,\n  'sha3-256':   0x16,\n  'sha3-384':   0x15,\n  'sha3-512':   0x14,\n  'shake-128':  0x18,\n  'shake-256':  0x19,\n  'keccak-224': 0x1A,\n  'keccak-256': 0x1B,\n  'keccak-384': 0x1C,\n  'keccak-512': 0x1D,\n  'murmur3-128': 0x22,\n  'murmur3-32':  0x23,\n  'md4':         0xd4,\n  'md5':         0xd5,\n  'blake2b-8':   0xb201,\n  'blake2b-16':  0xb202,\n  'blake2b-24':  0xb203,\n  'blake2b-32':  0xb204,\n  'blake2b-40':  0xb205,\n  'blake2b-48':  0xb206,\n  'blake2b-56':  0xb207,\n  'blake2b-64':  0xb208,\n  'blake2b-72':  0xb209,\n  'blake2b-80':  0xb20a,\n  'blake2b-88':  0xb20b,\n  'blake2b-96':  0xb20c,\n  'blake2b-104': 0xb20d,\n  'blake2b-112': 0xb20e,\n  'blake2b-120': 0xb20f,\n  'blake2b-128': 0xb210,\n  'blake2b-136': 0xb211,\n  'blake2b-144': 0xb212,\n  'blake2b-152': 0xb213,\n  'blake2b-160': 0xb214,\n  'blake2b-168': 0xb215,\n  'blake2b-176': 0xb216,\n  'blake2b-184': 0xb217,\n  'blake2b-192': 0xb218,\n  'blake2b-200': 0xb219,\n  'blake2b-208': 0xb21a,\n  'blake2b-216': 0xb21b,\n  'blake2b-224': 0xb21c,\n  'blake2b-232': 0xb21d,\n  'blake2b-240': 0xb21e,\n  'blake2b-248': 0xb21f,\n  'blake2b-256': 0xb220,\n  'blake2b-264': 0xb221,\n  'blake2b-272': 0xb222,\n  'blake2b-280': 0xb223,\n  'blake2b-288': 0xb224,\n  'blake2b-296': 0xb225,\n  'blake2b-304': 0xb226,\n  'blake2b-312': 0xb227,\n  'blake2b-320': 0xb228,\n  'blake2b-328': 0xb229,\n  'blake2b-336': 0xb22a,\n  'blake2b-344': 0xb22b,\n  'blake2b-352': 0xb22c,\n  'blake2b-360': 0xb22d,\n  'blake2b-368': 0xb22e,\n  'blake2b-376': 0xb22f,\n  'blake2b-384': 0xb230,\n  'blake2b-392': 0xb231,\n  'blake2b-400': 0xb232,\n  'blake2b-408': 0xb233,\n  'blake2b-416': 0xb234,\n  'blake2b-424': 0xb235,\n  'blake2b-432': 0xb236,\n  'blake2b-440': 0xb237,\n  'blake2b-448': 0xb238,\n  'blake2b-456': 0xb239,\n  'blake2b-464': 0xb23a,\n  'blake2b-472': 0xb23b,\n  'blake2b-480': 0xb23c,\n  'blake2b-488': 0xb23d,\n  'blake2b-496': 0xb23e,\n  'blake2b-504': 0xb23f,\n  'blake2b-512': 0xb240,\n  'blake2s-8':   0xb241,\n  'blake2s-16':  0xb242,\n  'blake2s-24':  0xb243,\n  'blake2s-32':  0xb244,\n  'blake2s-40':  0xb245,\n  'blake2s-48':  0xb246,\n  'blake2s-56':  0xb247,\n  'blake2s-64':  0xb248,\n  'blake2s-72':  0xb249,\n  'blake2s-80':  0xb24a,\n  'blake2s-88':  0xb24b,\n  'blake2s-96':  0xb24c,\n  'blake2s-104': 0xb24d,\n  'blake2s-112': 0xb24e,\n  'blake2s-120': 0xb24f,\n  'blake2s-128': 0xb250,\n  'blake2s-136': 0xb251,\n  'blake2s-144': 0xb252,\n  'blake2s-152': 0xb253,\n  'blake2s-160': 0xb254,\n  'blake2s-168': 0xb255,\n  'blake2s-176': 0xb256,\n  'blake2s-184': 0xb257,\n  'blake2s-192': 0xb258,\n  'blake2s-200': 0xb259,\n  'blake2s-208': 0xb25a,\n  'blake2s-216': 0xb25b,\n  'blake2s-224': 0xb25c,\n  'blake2s-232': 0xb25d,\n  'blake2s-240': 0xb25e,\n  'blake2s-248': 0xb25f,\n  'blake2s-256': 0xb260,\n  'Skein256-8': 0xb301,\n  'Skein256-16': 0xb302,\n  'Skein256-24': 0xb303,\n  'Skein256-32': 0xb304,\n  'Skein256-40': 0xb305,\n  'Skein256-48': 0xb306,\n  'Skein256-56': 0xb307,\n  'Skein256-64': 0xb308,\n  'Skein256-72': 0xb309,\n  'Skein256-80': 0xb30a,\n  'Skein256-88': 0xb30b,\n  'Skein256-96': 0xb30c,\n  'Skein256-104': 0xb30d,\n  'Skein256-112': 0xb30e,\n  'Skein256-120': 0xb30f,\n  'Skein256-128': 0xb310,\n  'Skein256-136': 0xb311,\n  'Skein256-144': 0xb312,\n  'Skein256-152': 0xb313,\n  'Skein256-160': 0xb314,\n  'Skein256-168': 0xb315,\n  'Skein256-176': 0xb316,\n  'Skein256-184': 0xb317,\n  'Skein256-192': 0xb318,\n  'Skein256-200': 0xb319,\n  'Skein256-208': 0xb31a,\n  'Skein256-216': 0xb31b,\n  'Skein256-224': 0xb31c,\n  'Skein256-232': 0xb31d,\n  'Skein256-240': 0xb31e,\n  'Skein256-248': 0xb31f,\n  'Skein256-256': 0xb320,\n  'Skein512-8': 0xb321,\n  'Skein512-16': 0xb322,\n  'Skein512-24': 0xb323,\n  'Skein512-32': 0xb324,\n  'Skein512-40': 0xb325,\n  'Skein512-48': 0xb326,\n  'Skein512-56': 0xb327,\n  'Skein512-64': 0xb328,\n  'Skein512-72': 0xb329,\n  'Skein512-80': 0xb32a,\n  'Skein512-88': 0xb32b,\n  'Skein512-96': 0xb32c,\n  'Skein512-104': 0xb32d,\n  'Skein512-112': 0xb32e,\n  'Skein512-120': 0xb32f,\n  'Skein512-128': 0xb330,\n  'Skein512-136': 0xb331,\n  'Skein512-144': 0xb332,\n  'Skein512-152': 0xb333,\n  'Skein512-160': 0xb334,\n  'Skein512-168': 0xb335,\n  'Skein512-176': 0xb336,\n  'Skein512-184': 0xb337,\n  'Skein512-192': 0xb338,\n  'Skein512-200': 0xb339,\n  'Skein512-208': 0xb33a,\n  'Skein512-216': 0xb33b,\n  'Skein512-224': 0xb33c,\n  'Skein512-232': 0xb33d,\n  'Skein512-240': 0xb33e,\n  'Skein512-248': 0xb33f,\n  'Skein512-256': 0xb340,\n  'Skein512-264': 0xb341,\n  'Skein512-272': 0xb342,\n  'Skein512-280': 0xb343,\n  'Skein512-288': 0xb344,\n  'Skein512-296': 0xb345,\n  'Skein512-304': 0xb346,\n  'Skein512-312': 0xb347,\n  'Skein512-320': 0xb348,\n  'Skein512-328': 0xb349,\n  'Skein512-336': 0xb34a,\n  'Skein512-344': 0xb34b,\n  'Skein512-352': 0xb34c,\n  'Skein512-360': 0xb34d,\n  'Skein512-368': 0xb34e,\n  'Skein512-376': 0xb34f,\n  'Skein512-384': 0xb350,\n  'Skein512-392': 0xb351,\n  'Skein512-400': 0xb352,\n  'Skein512-408': 0xb353,\n  'Skein512-416': 0xb354,\n  'Skein512-424': 0xb355,\n  'Skein512-432': 0xb356,\n  'Skein512-440': 0xb357,\n  'Skein512-448': 0xb358,\n  'Skein512-456': 0xb359,\n  'Skein512-464': 0xb35a,\n  'Skein512-472': 0xb35b,\n  'Skein512-480': 0xb35c,\n  'Skein512-488': 0xb35d,\n  'Skein512-496': 0xb35e,\n  'Skein512-504': 0xb35f,\n  'Skein512-512': 0xb360,\n  'Skein1024-8': 0xb361,\n  'Skein1024-16': 0xb362,\n  'Skein1024-24': 0xb363,\n  'Skein1024-32': 0xb364,\n  'Skein1024-40': 0xb365,\n  'Skein1024-48': 0xb366,\n  'Skein1024-56': 0xb367,\n  'Skein1024-64': 0xb368,\n  'Skein1024-72': 0xb369,\n  'Skein1024-80': 0xb36a,\n  'Skein1024-88': 0xb36b,\n  'Skein1024-96': 0xb36c,\n  'Skein1024-104': 0xb36d,\n  'Skein1024-112': 0xb36e,\n  'Skein1024-120': 0xb36f,\n  'Skein1024-128': 0xb370,\n  'Skein1024-136': 0xb371,\n  'Skein1024-144': 0xb372,\n  'Skein1024-152': 0xb373,\n  'Skein1024-160': 0xb374,\n  'Skein1024-168': 0xb375,\n  'Skein1024-176': 0xb376,\n  'Skein1024-184': 0xb377,\n  'Skein1024-192': 0xb378,\n  'Skein1024-200': 0xb379,\n  'Skein1024-208': 0xb37a,\n  'Skein1024-216': 0xb37b,\n  'Skein1024-224': 0xb37c,\n  'Skein1024-232': 0xb37d,\n  'Skein1024-240': 0xb37e,\n  'Skein1024-248': 0xb37f,\n  'Skein1024-256': 0xb380,\n  'Skein1024-264': 0xb381,\n  'Skein1024-272': 0xb382,\n  'Skein1024-280': 0xb383,\n  'Skein1024-288': 0xb384,\n  'Skein1024-296': 0xb385,\n  'Skein1024-304': 0xb386,\n  'Skein1024-312': 0xb387,\n  'Skein1024-320': 0xb388,\n  'Skein1024-328': 0xb389,\n  'Skein1024-336': 0xb38a,\n  'Skein1024-344': 0xb38b,\n  'Skein1024-352': 0xb38c,\n  'Skein1024-360': 0xb38d,\n  'Skein1024-368': 0xb38e,\n  'Skein1024-376': 0xb38f,\n  'Skein1024-384': 0xb390,\n  'Skein1024-392': 0xb391,\n  'Skein1024-400': 0xb392,\n  'Skein1024-408': 0xb393,\n  'Skein1024-416': 0xb394,\n  'Skein1024-424': 0xb395,\n  'Skein1024-432': 0xb396,\n  'Skein1024-440': 0xb397,\n  'Skein1024-448': 0xb398,\n  'Skein1024-456': 0xb399,\n  'Skein1024-464': 0xb39a,\n  'Skein1024-472': 0xb39b,\n  'Skein1024-480': 0xb39c,\n  'Skein1024-488': 0xb39d,\n  'Skein1024-496': 0xb39e,\n  'Skein1024-504': 0xb39f,\n  'Skein1024-512': 0xb3a0,\n  'Skein1024-520': 0xb3a1,\n  'Skein1024-528': 0xb3a2,\n  'Skein1024-536': 0xb3a3,\n  'Skein1024-544': 0xb3a4,\n  'Skein1024-552': 0xb3a5,\n  'Skein1024-560': 0xb3a6,\n  'Skein1024-568': 0xb3a7,\n  'Skein1024-576': 0xb3a8,\n  'Skein1024-584': 0xb3a9,\n  'Skein1024-592': 0xb3aa,\n  'Skein1024-600': 0xb3ab,\n  'Skein1024-608': 0xb3ac,\n  'Skein1024-616': 0xb3ad,\n  'Skein1024-624': 0xb3ae,\n  'Skein1024-632': 0xb3af,\n  'Skein1024-640': 0xb3b0,\n  'Skein1024-648': 0xb3b1,\n  'Skein1024-656': 0xb3b2,\n  'Skein1024-664': 0xb3b3,\n  'Skein1024-672': 0xb3b4,\n  'Skein1024-680': 0xb3b5,\n  'Skein1024-688': 0xb3b6,\n  'Skein1024-696': 0xb3b7,\n  'Skein1024-704': 0xb3b8,\n  'Skein1024-712': 0xb3b9,\n  'Skein1024-720': 0xb3ba,\n  'Skein1024-728': 0xb3bb,\n  'Skein1024-736': 0xb3bc,\n  'Skein1024-744': 0xb3bd,\n  'Skein1024-752': 0xb3be,\n  'Skein1024-760': 0xb3bf,\n  'Skein1024-768': 0xb3c0,\n  'Skein1024-776': 0xb3c1,\n  'Skein1024-784': 0xb3c2,\n  'Skein1024-792': 0xb3c3,\n  'Skein1024-800': 0xb3c4,\n  'Skein1024-808': 0xb3c5,\n  'Skein1024-816': 0xb3c6,\n  'Skein1024-824': 0xb3c7,\n  'Skein1024-832': 0xb3c8,\n  'Skein1024-840': 0xb3c9,\n  'Skein1024-848': 0xb3ca,\n  'Skein1024-856': 0xb3cb,\n  'Skein1024-864': 0xb3cc,\n  'Skein1024-872': 0xb3cd,\n  'Skein1024-880': 0xb3ce,\n  'Skein1024-888': 0xb3cf,\n  'Skein1024-896': 0xb3d0,\n  'Skein1024-904': 0xb3d1,\n  'Skein1024-912': 0xb3d2,\n  'Skein1024-920': 0xb3d3,\n  'Skein1024-928': 0xb3d4,\n  'Skein1024-936': 0xb3d5,\n  'Skein1024-944': 0xb3d6,\n  'Skein1024-952': 0xb3d7,\n  'Skein1024-960': 0xb3d8,\n  'Skein1024-968': 0xb3d9,\n  'Skein1024-976': 0xb3da,\n  'Skein1024-984': 0xb3db,\n  'Skein1024-992': 0xb3dc,\n  'Skein1024-1000': 0xb3dd,\n  'Skein1024-1008': 0xb3de,\n  'Skein1024-1016': 0xb3df,\n  'Skein1024-1024': 0xb3e0\n})\n\nexports.codes = Object.freeze({\n  0x0: 'identity',\n\n  // sha family\n  0x11: 'sha1',\n  0x12: 'sha2-256',\n  0x13: 'sha2-512',\n  0x56: 'dbl-sha2-256',\n  0x17: 'sha3-224',\n  0x16: 'sha3-256',\n  0x15: 'sha3-384',\n  0x14: 'sha3-512',\n  0x18: 'shake-128',\n  0x19: 'shake-256',\n  0x1A: 'keccak-224',\n  0x1B: 'keccak-256',\n  0x1C: 'keccak-384',\n  0x1D: 'keccak-512',\n\n  0x22: 'murmur3-128',\n  0x23: 'murmur3-32',\n\n  0xd4: 'md4',\n  0xd5: 'md5',\n\n  // blake2\n  0xb201: 'blake2b-8',\n  0xb202: 'blake2b-16',\n  0xb203: 'blake2b-24',\n  0xb204: 'blake2b-32',\n  0xb205: 'blake2b-40',\n  0xb206: 'blake2b-48',\n  0xb207: 'blake2b-56',\n  0xb208: 'blake2b-64',\n  0xb209: 'blake2b-72',\n  0xb20a: 'blake2b-80',\n  0xb20b: 'blake2b-88',\n  0xb20c: 'blake2b-96',\n  0xb20d: 'blake2b-104',\n  0xb20e: 'blake2b-112',\n  0xb20f: 'blake2b-120',\n  0xb210: 'blake2b-128',\n  0xb211: 'blake2b-136',\n  0xb212: 'blake2b-144',\n  0xb213: 'blake2b-152',\n  0xb214: 'blake2b-160',\n  0xb215: 'blake2b-168',\n  0xb216: 'blake2b-176',\n  0xb217: 'blake2b-184',\n  0xb218: 'blake2b-192',\n  0xb219: 'blake2b-200',\n  0xb21a: 'blake2b-208',\n  0xb21b: 'blake2b-216',\n  0xb21c: 'blake2b-224',\n  0xb21d: 'blake2b-232',\n  0xb21e: 'blake2b-240',\n  0xb21f: 'blake2b-248',\n  0xb220: 'blake2b-256',\n  0xb221: 'blake2b-264',\n  0xb222: 'blake2b-272',\n  0xb223: 'blake2b-280',\n  0xb224: 'blake2b-288',\n  0xb225: 'blake2b-296',\n  0xb226: 'blake2b-304',\n  0xb227: 'blake2b-312',\n  0xb228: 'blake2b-320',\n  0xb229: 'blake2b-328',\n  0xb22a: 'blake2b-336',\n  0xb22b: 'blake2b-344',\n  0xb22c: 'blake2b-352',\n  0xb22d: 'blake2b-360',\n  0xb22e: 'blake2b-368',\n  0xb22f: 'blake2b-376',\n  0xb230: 'blake2b-384',\n  0xb231: 'blake2b-392',\n  0xb232: 'blake2b-400',\n  0xb233: 'blake2b-408',\n  0xb234: 'blake2b-416',\n  0xb235: 'blake2b-424',\n  0xb236: 'blake2b-432',\n  0xb237: 'blake2b-440',\n  0xb238: 'blake2b-448',\n  0xb239: 'blake2b-456',\n  0xb23a: 'blake2b-464',\n  0xb23b: 'blake2b-472',\n  0xb23c: 'blake2b-480',\n  0xb23d: 'blake2b-488',\n  0xb23e: 'blake2b-496',\n  0xb23f: 'blake2b-504',\n  0xb240: 'blake2b-512',\n  0xb241: 'blake2s-8',\n  0xb242: 'blake2s-16',\n  0xb243: 'blake2s-24',\n  0xb244: 'blake2s-32',\n  0xb245: 'blake2s-40',\n  0xb246: 'blake2s-48',\n  0xb247: 'blake2s-56',\n  0xb248: 'blake2s-64',\n  0xb249: 'blake2s-72',\n  0xb24a: 'blake2s-80',\n  0xb24b: 'blake2s-88',\n  0xb24c: 'blake2s-96',\n  0xb24d: 'blake2s-104',\n  0xb24e: 'blake2s-112',\n  0xb24f: 'blake2s-120',\n  0xb250: 'blake2s-128',\n  0xb251: 'blake2s-136',\n  0xb252: 'blake2s-144',\n  0xb253: 'blake2s-152',\n  0xb254: 'blake2s-160',\n  0xb255: 'blake2s-168',\n  0xb256: 'blake2s-176',\n  0xb257: 'blake2s-184',\n  0xb258: 'blake2s-192',\n  0xb259: 'blake2s-200',\n  0xb25a: 'blake2s-208',\n  0xb25b: 'blake2s-216',\n  0xb25c: 'blake2s-224',\n  0xb25d: 'blake2s-232',\n  0xb25e: 'blake2s-240',\n  0xb25f: 'blake2s-248',\n  0xb260: 'blake2s-256',\n\n  // skein\n  0xb301: 'Skein256-8',\n  0xb302: 'Skein256-16',\n  0xb303: 'Skein256-24',\n  0xb304: 'Skein256-32',\n  0xb305: 'Skein256-40',\n  0xb306: 'Skein256-48',\n  0xb307: 'Skein256-56',\n  0xb308: 'Skein256-64',\n  0xb309: 'Skein256-72',\n  0xb30a: 'Skein256-80',\n  0xb30b: 'Skein256-88',\n  0xb30c: 'Skein256-96',\n  0xb30d: 'Skein256-104',\n  0xb30e: 'Skein256-112',\n  0xb30f: 'Skein256-120',\n  0xb310: 'Skein256-128',\n  0xb311: 'Skein256-136',\n  0xb312: 'Skein256-144',\n  0xb313: 'Skein256-152',\n  0xb314: 'Skein256-160',\n  0xb315: 'Skein256-168',\n  0xb316: 'Skein256-176',\n  0xb317: 'Skein256-184',\n  0xb318: 'Skein256-192',\n  0xb319: 'Skein256-200',\n  0xb31a: 'Skein256-208',\n  0xb31b: 'Skein256-216',\n  0xb31c: 'Skein256-224',\n  0xb31d: 'Skein256-232',\n  0xb31e: 'Skein256-240',\n  0xb31f: 'Skein256-248',\n  0xb320: 'Skein256-256',\n  0xb321: 'Skein512-8',\n  0xb322: 'Skein512-16',\n  0xb323: 'Skein512-24',\n  0xb324: 'Skein512-32',\n  0xb325: 'Skein512-40',\n  0xb326: 'Skein512-48',\n  0xb327: 'Skein512-56',\n  0xb328: 'Skein512-64',\n  0xb329: 'Skein512-72',\n  0xb32a: 'Skein512-80',\n  0xb32b: 'Skein512-88',\n  0xb32c: 'Skein512-96',\n  0xb32d: 'Skein512-104',\n  0xb32e: 'Skein512-112',\n  0xb32f: 'Skein512-120',\n  0xb330: 'Skein512-128',\n  0xb331: 'Skein512-136',\n  0xb332: 'Skein512-144',\n  0xb333: 'Skein512-152',\n  0xb334: 'Skein512-160',\n  0xb335: 'Skein512-168',\n  0xb336: 'Skein512-176',\n  0xb337: 'Skein512-184',\n  0xb338: 'Skein512-192',\n  0xb339: 'Skein512-200',\n  0xb33a: 'Skein512-208',\n  0xb33b: 'Skein512-216',\n  0xb33c: 'Skein512-224',\n  0xb33d: 'Skein512-232',\n  0xb33e: 'Skein512-240',\n  0xb33f: 'Skein512-248',\n  0xb340: 'Skein512-256',\n  0xb341: 'Skein512-264',\n  0xb342: 'Skein512-272',\n  0xb343: 'Skein512-280',\n  0xb344: 'Skein512-288',\n  0xb345: 'Skein512-296',\n  0xb346: 'Skein512-304',\n  0xb347: 'Skein512-312',\n  0xb348: 'Skein512-320',\n  0xb349: 'Skein512-328',\n  0xb34a: 'Skein512-336',\n  0xb34b: 'Skein512-344',\n  0xb34c: 'Skein512-352',\n  0xb34d: 'Skein512-360',\n  0xb34e: 'Skein512-368',\n  0xb34f: 'Skein512-376',\n  0xb350: 'Skein512-384',\n  0xb351: 'Skein512-392',\n  0xb352: 'Skein512-400',\n  0xb353: 'Skein512-408',\n  0xb354: 'Skein512-416',\n  0xb355: 'Skein512-424',\n  0xb356: 'Skein512-432',\n  0xb357: 'Skein512-440',\n  0xb358: 'Skein512-448',\n  0xb359: 'Skein512-456',\n  0xb35a: 'Skein512-464',\n  0xb35b: 'Skein512-472',\n  0xb35c: 'Skein512-480',\n  0xb35d: 'Skein512-488',\n  0xb35e: 'Skein512-496',\n  0xb35f: 'Skein512-504',\n  0xb360: 'Skein512-512',\n  0xb361: 'Skein1024-8',\n  0xb362: 'Skein1024-16',\n  0xb363: 'Skein1024-24',\n  0xb364: 'Skein1024-32',\n  0xb365: 'Skein1024-40',\n  0xb366: 'Skein1024-48',\n  0xb367: 'Skein1024-56',\n  0xb368: 'Skein1024-64',\n  0xb369: 'Skein1024-72',\n  0xb36a: 'Skein1024-80',\n  0xb36b: 'Skein1024-88',\n  0xb36c: 'Skein1024-96',\n  0xb36d: 'Skein1024-104',\n  0xb36e: 'Skein1024-112',\n  0xb36f: 'Skein1024-120',\n  0xb370: 'Skein1024-128',\n  0xb371: 'Skein1024-136',\n  0xb372: 'Skein1024-144',\n  0xb373: 'Skein1024-152',\n  0xb374: 'Skein1024-160',\n  0xb375: 'Skein1024-168',\n  0xb376: 'Skein1024-176',\n  0xb377: 'Skein1024-184',\n  0xb378: 'Skein1024-192',\n  0xb379: 'Skein1024-200',\n  0xb37a: 'Skein1024-208',\n  0xb37b: 'Skein1024-216',\n  0xb37c: 'Skein1024-224',\n  0xb37d: 'Skein1024-232',\n  0xb37e: 'Skein1024-240',\n  0xb37f: 'Skein1024-248',\n  0xb380: 'Skein1024-256',\n  0xb381: 'Skein1024-264',\n  0xb382: 'Skein1024-272',\n  0xb383: 'Skein1024-280',\n  0xb384: 'Skein1024-288',\n  0xb385: 'Skein1024-296',\n  0xb386: 'Skein1024-304',\n  0xb387: 'Skein1024-312',\n  0xb388: 'Skein1024-320',\n  0xb389: 'Skein1024-328',\n  0xb38a: 'Skein1024-336',\n  0xb38b: 'Skein1024-344',\n  0xb38c: 'Skein1024-352',\n  0xb38d: 'Skein1024-360',\n  0xb38e: 'Skein1024-368',\n  0xb38f: 'Skein1024-376',\n  0xb390: 'Skein1024-384',\n  0xb391: 'Skein1024-392',\n  0xb392: 'Skein1024-400',\n  0xb393: 'Skein1024-408',\n  0xb394: 'Skein1024-416',\n  0xb395: 'Skein1024-424',\n  0xb396: 'Skein1024-432',\n  0xb397: 'Skein1024-440',\n  0xb398: 'Skein1024-448',\n  0xb399: 'Skein1024-456',\n  0xb39a: 'Skein1024-464',\n  0xb39b: 'Skein1024-472',\n  0xb39c: 'Skein1024-480',\n  0xb39d: 'Skein1024-488',\n  0xb39e: 'Skein1024-496',\n  0xb39f: 'Skein1024-504',\n  0xb3a0: 'Skein1024-512',\n  0xb3a1: 'Skein1024-520',\n  0xb3a2: 'Skein1024-528',\n  0xb3a3: 'Skein1024-536',\n  0xb3a4: 'Skein1024-544',\n  0xb3a5: 'Skein1024-552',\n  0xb3a6: 'Skein1024-560',\n  0xb3a7: 'Skein1024-568',\n  0xb3a8: 'Skein1024-576',\n  0xb3a9: 'Skein1024-584',\n  0xb3aa: 'Skein1024-592',\n  0xb3ab: 'Skein1024-600',\n  0xb3ac: 'Skein1024-608',\n  0xb3ad: 'Skein1024-616',\n  0xb3ae: 'Skein1024-624',\n  0xb3af: 'Skein1024-632',\n  0xb3b0: 'Skein1024-640',\n  0xb3b1: 'Skein1024-648',\n  0xb3b2: 'Skein1024-656',\n  0xb3b3: 'Skein1024-664',\n  0xb3b4: 'Skein1024-672',\n  0xb3b5: 'Skein1024-680',\n  0xb3b6: 'Skein1024-688',\n  0xb3b7: 'Skein1024-696',\n  0xb3b8: 'Skein1024-704',\n  0xb3b9: 'Skein1024-712',\n  0xb3ba: 'Skein1024-720',\n  0xb3bb: 'Skein1024-728',\n  0xb3bc: 'Skein1024-736',\n  0xb3bd: 'Skein1024-744',\n  0xb3be: 'Skein1024-752',\n  0xb3bf: 'Skein1024-760',\n  0xb3c0: 'Skein1024-768',\n  0xb3c1: 'Skein1024-776',\n  0xb3c2: 'Skein1024-784',\n  0xb3c3: 'Skein1024-792',\n  0xb3c4: 'Skein1024-800',\n  0xb3c5: 'Skein1024-808',\n  0xb3c6: 'Skein1024-816',\n  0xb3c7: 'Skein1024-824',\n  0xb3c8: 'Skein1024-832',\n  0xb3c9: 'Skein1024-840',\n  0xb3ca: 'Skein1024-848',\n  0xb3cb: 'Skein1024-856',\n  0xb3cc: 'Skein1024-864',\n  0xb3cd: 'Skein1024-872',\n  0xb3ce: 'Skein1024-880',\n  0xb3cf: 'Skein1024-888',\n  0xb3d0: 'Skein1024-896',\n  0xb3d1: 'Skein1024-904',\n  0xb3d2: 'Skein1024-912',\n  0xb3d3: 'Skein1024-920',\n  0xb3d4: 'Skein1024-928',\n  0xb3d5: 'Skein1024-936',\n  0xb3d6: 'Skein1024-944',\n  0xb3d7: 'Skein1024-952',\n  0xb3d8: 'Skein1024-960',\n  0xb3d9: 'Skein1024-968',\n  0xb3da: 'Skein1024-976',\n  0xb3db: 'Skein1024-984',\n  0xb3dc: 'Skein1024-992',\n  0xb3dd: 'Skein1024-1000',\n  0xb3de: 'Skein1024-1008',\n  0xb3df: 'Skein1024-1016',\n  0xb3e0: 'Skein1024-1024'\n})\n\nexports.defaultLengths = Object.freeze({\n  0x11: 20,\n  0x12: 32,\n  0x13: 64,\n  0x56: 32,\n  0x17: 28,\n  0x16: 32,\n  0x15: 48,\n  0x14: 64,\n  0x18: 32,\n  0x19: 64,\n  0x1A: 28,\n  0x1B: 32,\n  0x1C: 48,\n  0x1D: 64,\n  0x22: 32,\n\n  0xb201: 0x01,\n  0xb202: 0x02,\n  0xb203: 0x03,\n  0xb204: 0x04,\n  0xb205: 0x05,\n  0xb206: 0x06,\n  0xb207: 0x07,\n  0xb208: 0x08,\n  0xb209: 0x09,\n  0xb20a: 0x0a,\n  0xb20b: 0x0b,\n  0xb20c: 0x0c,\n  0xb20d: 0x0d,\n  0xb20e: 0x0e,\n  0xb20f: 0x0f,\n  0xb210: 0x10,\n  0xb211: 0x11,\n  0xb212: 0x12,\n  0xb213: 0x13,\n  0xb214: 0x14,\n  0xb215: 0x15,\n  0xb216: 0x16,\n  0xb217: 0x17,\n  0xb218: 0x18,\n  0xb219: 0x19,\n  0xb21a: 0x1a,\n  0xb21b: 0x1b,\n  0xb21c: 0x1c,\n  0xb21d: 0x1d,\n  0xb21e: 0x1e,\n  0xb21f: 0x1f,\n  0xb220: 0x20,\n  0xb221: 0x21,\n  0xb222: 0x22,\n  0xb223: 0x23,\n  0xb224: 0x24,\n  0xb225: 0x25,\n  0xb226: 0x26,\n  0xb227: 0x27,\n  0xb228: 0x28,\n  0xb229: 0x29,\n  0xb22a: 0x2a,\n  0xb22b: 0x2b,\n  0xb22c: 0x2c,\n  0xb22d: 0x2d,\n  0xb22e: 0x2e,\n  0xb22f: 0x2f,\n  0xb230: 0x30,\n  0xb231: 0x31,\n  0xb232: 0x32,\n  0xb233: 0x33,\n  0xb234: 0x34,\n  0xb235: 0x35,\n  0xb236: 0x36,\n  0xb237: 0x37,\n  0xb238: 0x38,\n  0xb239: 0x39,\n  0xb23a: 0x3a,\n  0xb23b: 0x3b,\n  0xb23c: 0x3c,\n  0xb23d: 0x3d,\n  0xb23e: 0x3e,\n  0xb23f: 0x3f,\n  0xb240: 0x40,\n  0xb241: 0x01,\n  0xb242: 0x02,\n  0xb243: 0x03,\n  0xb244: 0x04,\n  0xb245: 0x05,\n  0xb246: 0x06,\n  0xb247: 0x07,\n  0xb248: 0x08,\n  0xb249: 0x09,\n  0xb24a: 0x0a,\n  0xb24b: 0x0b,\n  0xb24c: 0x0c,\n  0xb24d: 0x0d,\n  0xb24e: 0x0e,\n  0xb24f: 0x0f,\n  0xb250: 0x10,\n  0xb251: 0x11,\n  0xb252: 0x12,\n  0xb253: 0x13,\n  0xb254: 0x14,\n  0xb255: 0x15,\n  0xb256: 0x16,\n  0xb257: 0x17,\n  0xb258: 0x18,\n  0xb259: 0x19,\n  0xb25a: 0x1a,\n  0xb25b: 0x1b,\n  0xb25c: 0x1c,\n  0xb25d: 0x1d,\n  0xb25e: 0x1e,\n  0xb25f: 0x1f,\n  0xb260: 0x20,\n  0xb301: 0x01,\n  0xb302: 0x02,\n  0xb303: 0x03,\n  0xb304: 0x04,\n  0xb305: 0x05,\n  0xb306: 0x06,\n  0xb307: 0x07,\n  0xb308: 0x08,\n  0xb309: 0x09,\n  0xb30a: 0x0a,\n  0xb30b: 0x0b,\n  0xb30c: 0x0c,\n  0xb30d: 0x0d,\n  0xb30e: 0x0e,\n  0xb30f: 0x0f,\n  0xb310: 0x10,\n  0xb311: 0x11,\n  0xb312: 0x12,\n  0xb313: 0x13,\n  0xb314: 0x14,\n  0xb315: 0x15,\n  0xb316: 0x16,\n  0xb317: 0x17,\n  0xb318: 0x18,\n  0xb319: 0x19,\n  0xb31a: 0x1a,\n  0xb31b: 0x1b,\n  0xb31c: 0x1c,\n  0xb31d: 0x1d,\n  0xb31e: 0x1e,\n  0xb31f: 0x1f,\n  0xb320: 0x20,\n  0xb321: 0x01,\n  0xb322: 0x02,\n  0xb323: 0x03,\n  0xb324: 0x04,\n  0xb325: 0x05,\n  0xb326: 0x06,\n  0xb327: 0x07,\n  0xb328: 0x08,\n  0xb329: 0x09,\n  0xb32a: 0x0a,\n  0xb32b: 0x0b,\n  0xb32c: 0x0c,\n  0xb32d: 0x0d,\n  0xb32e: 0x0e,\n  0xb32f: 0x0f,\n  0xb330: 0x10,\n  0xb331: 0x11,\n  0xb332: 0x12,\n  0xb333: 0x13,\n  0xb334: 0x14,\n  0xb335: 0x15,\n  0xb336: 0x16,\n  0xb337: 0x17,\n  0xb338: 0x18,\n  0xb339: 0x19,\n  0xb33a: 0x1a,\n  0xb33b: 0x1b,\n  0xb33c: 0x1c,\n  0xb33d: 0x1d,\n  0xb33e: 0x1e,\n  0xb33f: 0x1f,\n  0xb340: 0x20,\n  0xb341: 0x21,\n  0xb342: 0x22,\n  0xb343: 0x23,\n  0xb344: 0x24,\n  0xb345: 0x25,\n  0xb346: 0x26,\n  0xb347: 0x27,\n  0xb348: 0x28,\n  0xb349: 0x29,\n  0xb34a: 0x2a,\n  0xb34b: 0x2b,\n  0xb34c: 0x2c,\n  0xb34d: 0x2d,\n  0xb34e: 0x2e,\n  0xb34f: 0x2f,\n  0xb350: 0x30,\n  0xb351: 0x31,\n  0xb352: 0x32,\n  0xb353: 0x33,\n  0xb354: 0x34,\n  0xb355: 0x35,\n  0xb356: 0x36,\n  0xb357: 0x37,\n  0xb358: 0x38,\n  0xb359: 0x39,\n  0xb35a: 0x3a,\n  0xb35b: 0x3b,\n  0xb35c: 0x3c,\n  0xb35d: 0x3d,\n  0xb35e: 0x3e,\n  0xb35f: 0x3f,\n  0xb360: 0x40,\n  0xb361: 0x01,\n  0xb362: 0x02,\n  0xb363: 0x03,\n  0xb364: 0x04,\n  0xb365: 0x05,\n  0xb366: 0x06,\n  0xb367: 0x07,\n  0xb368: 0x08,\n  0xb369: 0x09,\n  0xb36a: 0x0a,\n  0xb36b: 0x0b,\n  0xb36c: 0x0c,\n  0xb36d: 0x0d,\n  0xb36e: 0x0e,\n  0xb36f: 0x0f,\n  0xb370: 0x10,\n  0xb371: 0x11,\n  0xb372: 0x12,\n  0xb373: 0x13,\n  0xb374: 0x14,\n  0xb375: 0x15,\n  0xb376: 0x16,\n  0xb377: 0x17,\n  0xb378: 0x18,\n  0xb379: 0x19,\n  0xb37a: 0x1a,\n  0xb37b: 0x1b,\n  0xb37c: 0x1c,\n  0xb37d: 0x1d,\n  0xb37e: 0x1e,\n  0xb37f: 0x1f,\n  0xb380: 0x20,\n  0xb381: 0x21,\n  0xb382: 0x22,\n  0xb383: 0x23,\n  0xb384: 0x24,\n  0xb385: 0x25,\n  0xb386: 0x26,\n  0xb387: 0x27,\n  0xb388: 0x28,\n  0xb389: 0x29,\n  0xb38a: 0x2a,\n  0xb38b: 0x2b,\n  0xb38c: 0x2c,\n  0xb38d: 0x2d,\n  0xb38e: 0x2e,\n  0xb38f: 0x2f,\n  0xb390: 0x30,\n  0xb391: 0x31,\n  0xb392: 0x32,\n  0xb393: 0x33,\n  0xb394: 0x34,\n  0xb395: 0x35,\n  0xb396: 0x36,\n  0xb397: 0x37,\n  0xb398: 0x38,\n  0xb399: 0x39,\n  0xb39a: 0x3a,\n  0xb39b: 0x3b,\n  0xb39c: 0x3c,\n  0xb39d: 0x3d,\n  0xb39e: 0x3e,\n  0xb39f: 0x3f,\n  0xb3a0: 0x40,\n  0xb3a1: 0x41,\n  0xb3a2: 0x42,\n  0xb3a3: 0x43,\n  0xb3a4: 0x44,\n  0xb3a5: 0x45,\n  0xb3a6: 0x46,\n  0xb3a7: 0x47,\n  0xb3a8: 0x48,\n  0xb3a9: 0x49,\n  0xb3aa: 0x4a,\n  0xb3ab: 0x4b,\n  0xb3ac: 0x4c,\n  0xb3ad: 0x4d,\n  0xb3ae: 0x4e,\n  0xb3af: 0x4f,\n  0xb3b0: 0x50,\n  0xb3b1: 0x51,\n  0xb3b2: 0x52,\n  0xb3b3: 0x53,\n  0xb3b4: 0x54,\n  0xb3b5: 0x55,\n  0xb3b6: 0x56,\n  0xb3b7: 0x57,\n  0xb3b8: 0x58,\n  0xb3b9: 0x59,\n  0xb3ba: 0x5a,\n  0xb3bb: 0x5b,\n  0xb3bc: 0x5c,\n  0xb3bd: 0x5d,\n  0xb3be: 0x5e,\n  0xb3bf: 0x5f,\n  0xb3c0: 0x60,\n  0xb3c1: 0x61,\n  0xb3c2: 0x62,\n  0xb3c3: 0x63,\n  0xb3c4: 0x64,\n  0xb3c5: 0x65,\n  0xb3c6: 0x66,\n  0xb3c7: 0x67,\n  0xb3c8: 0x68,\n  0xb3c9: 0x69,\n  0xb3ca: 0x6a,\n  0xb3cb: 0x6b,\n  0xb3cc: 0x6c,\n  0xb3cd: 0x6d,\n  0xb3ce: 0x6e,\n  0xb3cf: 0x6f,\n  0xb3d0: 0x70,\n  0xb3d1: 0x71,\n  0xb3d2: 0x72,\n  0xb3d3: 0x73,\n  0xb3d4: 0x74,\n  0xb3d5: 0x75,\n  0xb3d6: 0x76,\n  0xb3d7: 0x77,\n  0xb3d8: 0x78,\n  0xb3d9: 0x79,\n  0xb3da: 0x7a,\n  0xb3db: 0x7b,\n  0xb3dc: 0x7c,\n  0xb3dd: 0x7d,\n  0xb3de: 0x7e,\n  0xb3df: 0x7f,\n  0xb3e0: 0x80\n})\n"
    },
    {
      "id": "./node_modules/multihashes/src/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
      "name": "./node_modules/multihashes/src/index.js",
      "index": 14,
      "index2": 21,
      "size": 4983,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
      "issuerId": "./node_modules/is-ipfs/src/index.js",
      "issuerName": "./node_modules/is-ipfs/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/cids/src/cid-util.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/cid-util.js",
          "module": "./node_modules/cids/src/cid-util.js",
          "moduleName": "./node_modules/cids/src/cid-util.js",
          "type": "cjs require",
          "userRequest": "multihashes",
          "loc": "3:11-33"
        },
        {
          "moduleId": "./node_modules/cids/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "module": "./node_modules/cids/src/index.js",
          "moduleName": "./node_modules/cids/src/index.js",
          "type": "cjs require",
          "userRequest": "multihashes",
          "loc": "4:11-33"
        },
        {
          "moduleId": "./node_modules/is-ipfs/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "module": "./node_modules/is-ipfs/src/index.js",
          "moduleName": "./node_modules/is-ipfs/src/index.js",
          "type": "cjs require",
          "userRequest": "multihashes",
          "loc": "4:18-40"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 4,
      "source": "/**\n * Multihash implementation in JavaScript.\n *\n * @module multihash\n */\n'use strict'\n\nconst { Buffer } = require('buffer')\nconst multibase = require('multibase')\nconst varint = require('varint')\nconst cs = require('./constants')\n\nexports.names = cs.names\nexports.codes = cs.codes\nexports.defaultLengths = cs.defaultLengths\n\n/**\n * Convert the given multihash to a hex encoded string.\n *\n * @param {Buffer} hash\n * @returns {string}\n */\nexports.toHexString = function toHexString (hash) {\n  if (!Buffer.isBuffer(hash)) {\n    throw new Error('must be passed a buffer')\n  }\n\n  return hash.toString('hex')\n}\n\n/**\n * Convert the given hex encoded string to a multihash.\n *\n * @param {string} hash\n * @returns {Buffer}\n */\nexports.fromHexString = function fromHexString (hash) {\n  return Buffer.from(hash, 'hex')\n}\n\n/**\n * Convert the given multihash to a base58 encoded string.\n *\n * @param {Buffer} hash\n * @returns {string}\n */\nexports.toB58String = function toB58String (hash) {\n  if (!Buffer.isBuffer(hash)) {\n    throw new Error('must be passed a buffer')\n  }\n\n  return multibase.encode('base58btc', hash).toString().slice(1)\n}\n\n/**\n * Convert the given base58 encoded string to a multihash.\n *\n * @param {string|Buffer} hash\n * @returns {Buffer}\n */\nexports.fromB58String = function fromB58String (hash) {\n  let encoded = hash\n  if (Buffer.isBuffer(hash)) {\n    encoded = hash.toString()\n  }\n\n  return multibase.decode('z' + encoded)\n}\n\n/**\n * Decode a hash from the given multihash.\n *\n * @param {Buffer} buf\n * @returns {{code: number, name: string, length: number, digest: Buffer}} result\n */\nexports.decode = function decode (buf) {\n  if (!(Buffer.isBuffer(buf))) {\n    throw new Error('multihash must be a Buffer')\n  }\n\n  if (buf.length < 2) {\n    throw new Error('multihash too short. must be > 2 bytes.')\n  }\n\n  const code = varint.decode(buf)\n  if (!exports.isValidCode(code)) {\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\n  }\n  buf = buf.slice(varint.decode.bytes)\n\n  const len = varint.decode(buf)\n  if (len < 0) {\n    throw new Error(`multihash invalid length: ${len}`)\n  }\n  buf = buf.slice(varint.decode.bytes)\n\n  if (buf.length !== len) {\n    throw new Error(`multihash length inconsistent: 0x${buf.toString('hex')}`)\n  }\n\n  return {\n    code: code,\n    name: cs.codes[code],\n    length: len,\n    digest: buf\n  }\n}\n\n/**\n *  Encode a hash digest along with the specified function code.\n *\n * > **Note:** the length is derived from the length of the digest itself.\n *\n * @param {Buffer} digest\n * @param {string|number} code\n * @param {number} [length]\n * @returns {Buffer}\n */\nexports.encode = function encode (digest, code, length) {\n  if (!digest || code === undefined) {\n    throw new Error('multihash encode requires at least two args: digest, code')\n  }\n\n  // ensure it's a hashfunction code.\n  const hashfn = exports.coerceCode(code)\n\n  if (!(Buffer.isBuffer(digest))) {\n    throw new Error('digest should be a Buffer')\n  }\n\n  if (length == null) {\n    length = digest.length\n  }\n\n  if (length && digest.length !== length) {\n    throw new Error('digest length should be equal to specified length.')\n  }\n\n  return Buffer.concat([\n    Buffer.from(varint.encode(hashfn)),\n    Buffer.from(varint.encode(length)),\n    digest\n  ])\n}\n\n/**\n * Converts a hash function name into the matching code.\n * If passed a number it will return the number if it's a valid code.\n * @param {string|number} name\n * @returns {number}\n */\nexports.coerceCode = function coerceCode (name) {\n  let code = name\n\n  if (typeof name === 'string') {\n    if (cs.names[name] === undefined) {\n      throw new Error(`Unrecognized hash function named: ${name}`)\n    }\n    code = cs.names[name]\n  }\n\n  if (typeof code !== 'number') {\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\n  }\n\n  if (cs.codes[code] === undefined && !exports.isAppCode(code)) {\n    throw new Error(`Unrecognized function code: ${code}`)\n  }\n\n  return code\n}\n\n/**\n * Checks wether a code is part of the app range\n *\n * @param {number} code\n * @returns {boolean}\n */\nexports.isAppCode = function appCode (code) {\n  return code > 0 && code < 0x10\n}\n\n/**\n * Checks whether a multihash code is valid.\n *\n * @param {number} code\n * @returns {boolean}\n */\nexports.isValidCode = function validCode (code) {\n  if (exports.isAppCode(code)) {\n    return true\n  }\n\n  if (cs.codes[code]) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\n *\n * @param {Buffer} multihash\n * @returns {undefined}\n * @throws {Error}\n */\nfunction validate (multihash) {\n  exports.decode(multihash) // throws if bad.\n}\nexports.validate = validate\n\n/**\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\n *\n * @param {Buffer} multihash\n * @returns {undefined}\n * @throws {Error}\n */\nexports.prefix = function prefix (multihash) {\n  validate(multihash)\n\n  return multihash.slice(0, 2)\n}\n"
    },
    {
      "id": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
      "name": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
      "index": 7,
      "index2": 6,
      "size": 48590,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
      "issuerId": "./node_modules/is-ipfs/src/index.js",
      "issuerName": "./node_modules/is-ipfs/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/cids/src/cid-util.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/cid-util.js",
          "module": "./node_modules/cids/src/cid-util.js",
          "moduleName": "./node_modules/cids/src/cid-util.js",
          "type": "cjs require",
          "userRequest": "buffer",
          "loc": "4:19-36"
        },
        {
          "moduleId": "./node_modules/cids/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/cids/src/index.js",
          "module": "./node_modules/cids/src/index.js",
          "moduleName": "./node_modules/cids/src/index.js",
          "type": "cjs require",
          "userRequest": "buffer",
          "loc": "3:19-36"
        },
        {
          "moduleId": "./node_modules/is-ipfs/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "module": "./node_modules/is-ipfs/src/index.js",
          "moduleName": "./node_modules/is-ipfs/src/index.js",
          "type": "cjs require",
          "userRequest": "Buffer",
          "loc": "1:0-65"
        },
        {
          "moduleId": "./node_modules/multiaddr/src/codec.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
          "module": "./node_modules/multiaddr/src/codec.js",
          "moduleName": "./node_modules/multiaddr/src/codec.js",
          "type": "cjs require",
          "userRequest": "buffer",
          "loc": "3:19-36"
        },
        {
          "moduleId": "./node_modules/multiaddr/src/convert.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
          "module": "./node_modules/multiaddr/src/convert.js",
          "moduleName": "./node_modules/multiaddr/src/convert.js",
          "type": "cjs require",
          "userRequest": "buffer",
          "loc": "3:19-36"
        },
        {
          "moduleId": "./node_modules/multiaddr/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
          "module": "./node_modules/multiaddr/src/index.js",
          "moduleName": "./node_modules/multiaddr/src/index.js",
          "type": "cjs require",
          "userRequest": "buffer",
          "loc": "4:19-36"
        },
        {
          "moduleId": "./node_modules/multiaddr/src/ip.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/ip.js",
          "module": "./node_modules/multiaddr/src/ip.js",
          "moduleName": "./node_modules/multiaddr/src/ip.js",
          "type": "cjs require",
          "userRequest": "buffer",
          "loc": "3:19-36"
        },
        {
          "moduleId": "./node_modules/multibase/src/base16.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/base16.js",
          "module": "./node_modules/multibase/src/base16.js",
          "moduleName": "./node_modules/multibase/src/base16.js",
          "type": "cjs require",
          "userRequest": "buffer",
          "loc": "2:19-36"
        },
        {
          "moduleId": "./node_modules/multibase/src/base64.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/base64.js",
          "module": "./node_modules/multibase/src/base64.js",
          "moduleName": "./node_modules/multibase/src/base64.js",
          "type": "cjs require",
          "userRequest": "buffer",
          "loc": "2:19-36"
        },
        {
          "moduleId": "./node_modules/multibase/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multibase/src/index.js",
          "module": "./node_modules/multibase/src/index.js",
          "moduleName": "./node_modules/multibase/src/index.js",
          "type": "cjs require",
          "userRequest": "buffer",
          "loc": "7:19-36"
        },
        {
          "moduleId": "./node_modules/multicodec/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
          "module": "./node_modules/multicodec/src/index.js",
          "moduleName": "./node_modules/multicodec/src/index.js",
          "type": "cjs require",
          "userRequest": "buffer",
          "loc": "14:19-36"
        },
        {
          "moduleId": "./node_modules/multicodec/src/util.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/util.js",
          "module": "./node_modules/multicodec/src/util.js",
          "moduleName": "./node_modules/multicodec/src/util.js",
          "type": "cjs require",
          "userRequest": "buffer",
          "loc": "3:19-36"
        },
        {
          "moduleId": "./node_modules/multihashes/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
          "module": "./node_modules/multihashes/src/index.js",
          "moduleName": "./node_modules/multihashes/src/index.js",
          "type": "cjs require",
          "userRequest": "buffer",
          "loc": "8:19-36"
        },
        {
          "moduleId": "./node_modules/safe-buffer/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/safe-buffer/index.js",
          "module": "./node_modules/safe-buffer/index.js",
          "moduleName": "./node_modules/safe-buffer/index.js",
          "type": "cjs require",
          "userRequest": "buffer",
          "loc": "3:13-30"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 4,
      "source": "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n"
    },
    {
      "id": "./node_modules/safe-buffer/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/safe-buffer/index.js",
      "name": "./node_modules/safe-buffer/index.js",
      "index": 13,
      "index2": 7,
      "size": 1670,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/base-x/src/index.js",
      "issuerId": "./node_modules/base-x/src/index.js",
      "issuerName": "./node_modules/base-x/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/bs58/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/bs58/index.js",
          "name": "./node_modules/bs58/index.js"
        },
        {
          "id": "./node_modules/base-x/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/base-x/src/index.js",
          "name": "./node_modules/base-x/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/base-x/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/base-x/src/index.js",
          "module": "./node_modules/base-x/src/index.js",
          "moduleName": "./node_modules/base-x/src/index.js",
          "type": "cjs require",
          "userRequest": "safe-buffer",
          "loc": "8:14-36"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 6,
      "source": "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n"
    },
    {
      "id": "./node_modules/varint/decode.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/decode.js",
      "name": "./node_modules/varint/decode.js",
      "index": 23,
      "index2": 17,
      "size": 508,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
      "issuerId": "./node_modules/varint/index.js",
      "issuerName": "./node_modules/varint/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/multihashes/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
          "name": "./node_modules/multihashes/src/index.js"
        },
        {
          "id": "./node_modules/varint/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
          "name": "./node_modules/varint/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/varint/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
          "module": "./node_modules/varint/index.js",
          "moduleName": "./node_modules/varint/index.js",
          "type": "cjs require",
          "userRequest": "./decode.js",
          "loc": "3:12-34"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 6,
      "source": "module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n"
    },
    {
      "id": "./node_modules/varint/encode.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/encode.js",
      "name": "./node_modules/varint/encode.js",
      "index": 22,
      "index2": 16,
      "size": 452,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
      "issuerId": "./node_modules/varint/index.js",
      "issuerName": "./node_modules/varint/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/multihashes/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
          "name": "./node_modules/multihashes/src/index.js"
        },
        {
          "id": "./node_modules/varint/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
          "name": "./node_modules/varint/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/varint/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
          "module": "./node_modules/varint/index.js",
          "moduleName": "./node_modules/varint/index.js",
          "type": "cjs require",
          "userRequest": "./encode.js",
          "loc": "2:12-34"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 6,
      "source": "module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n"
    },
    {
      "id": "./node_modules/varint/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
      "name": "./node_modules/varint/index.js",
      "index": 21,
      "index2": 19,
      "size": 134,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
      "issuerId": "./node_modules/multihashes/src/index.js",
      "issuerName": "./node_modules/multihashes/src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/multihashes/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
          "name": "./node_modules/multihashes/src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/multiaddr/src/codec.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/codec.js",
          "module": "./node_modules/multiaddr/src/codec.js",
          "moduleName": "./node_modules/multiaddr/src/codec.js",
          "type": "cjs require",
          "userRequest": "varint",
          "loc": "6:15-32"
        },
        {
          "moduleId": "./node_modules/multiaddr/src/convert.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/convert.js",
          "module": "./node_modules/multiaddr/src/convert.js",
          "moduleName": "./node_modules/multiaddr/src/convert.js",
          "type": "cjs require",
          "userRequest": "varint",
          "loc": "8:15-32"
        },
        {
          "moduleId": "./node_modules/multiaddr/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multiaddr/src/index.js",
          "module": "./node_modules/multiaddr/src/index.js",
          "moduleName": "./node_modules/multiaddr/src/index.js",
          "type": "cjs require",
          "userRequest": "varint",
          "loc": "6:15-32"
        },
        {
          "moduleId": "./node_modules/multicodec/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/index.js",
          "module": "./node_modules/multicodec/src/index.js",
          "moduleName": "./node_modules/multicodec/src/index.js",
          "type": "cjs require",
          "userRequest": "varint",
          "loc": "15:15-32"
        },
        {
          "moduleId": "./node_modules/multicodec/src/util.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multicodec/src/util.js",
          "module": "./node_modules/multicodec/src/util.js",
          "moduleName": "./node_modules/multicodec/src/util.js",
          "type": "cjs require",
          "userRequest": "varint",
          "loc": "2:15-32"
        },
        {
          "moduleId": "./node_modules/multihashes/src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
          "module": "./node_modules/multihashes/src/index.js",
          "moduleName": "./node_modules/multihashes/src/index.js",
          "type": "cjs require",
          "userRequest": "varint",
          "loc": "10:15-32"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 5,
      "source": "module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n"
    },
    {
      "id": "./node_modules/varint/length.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/length.js",
      "name": "./node_modules/varint/length.js",
      "index": 24,
      "index2": 18,
      "size": 471,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
      "issuerId": "./node_modules/varint/index.js",
      "issuerName": "./node_modules/varint/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/util/validators.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
          "name": "./src/util/validators.js"
        },
        {
          "id": "./node_modules/is-ipfs/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/is-ipfs/src/index.js",
          "name": "./node_modules/is-ipfs/src/index.js"
        },
        {
          "id": "./node_modules/multihashes/src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/multihashes/src/index.js",
          "name": "./node_modules/multihashes/src/index.js"
        },
        {
          "id": "./node_modules/varint/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
          "name": "./node_modules/varint/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/varint/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/varint/index.js",
          "module": "./node_modules/varint/index.js",
          "moduleName": "./node_modules/varint/index.js",
          "type": "cjs require",
          "userRequest": "./length.js",
          "loc": "4:20-42"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 6,
      "source": "\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n"
    },
    {
      "id": "./node_modules/webpack/buildin/global.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/webpack/buildin/global.js",
      "name": "(webpack)/buildin/global.js",
      "index": 3,
      "index2": 0,
      "size": 472,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/lodash.merge/index.js",
      "issuerId": "./node_modules/lodash.merge/index.js",
      "issuerName": "./node_modules/lodash.merge/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./node_modules/lodash.merge/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/lodash.merge/index.js",
          "name": "./node_modules/lodash.merge/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/lodash.merge/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/lodash.merge/index.js",
          "module": "./node_modules/lodash.merge/index.js",
          "moduleName": "./node_modules/lodash.merge/index.js",
          "type": "cjs require",
          "userRequest": "global",
          "loc": "1:0-41"
        },
        {
          "moduleId": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/node-libs-browser/node_modules/buffer/index.js",
          "module": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "moduleName": "./node_modules/node-libs-browser/node_modules/buffer/index.js",
          "type": "cjs require",
          "userRequest": "global",
          "loc": "1:0-47"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 3,
      "source": "var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"
    },
    {
      "id": "./node_modules/webpack/buildin/module.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/webpack/buildin/module.js",
      "name": "(webpack)/buildin/module.js",
      "index": 4,
      "index2": 1,
      "size": 497,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/lodash.merge/index.js",
      "issuerId": "./node_modules/lodash.merge/index.js",
      "issuerName": "./node_modules/lodash.merge/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./node_modules/lodash.merge/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/lodash.merge/index.js",
          "name": "./node_modules/lodash.merge/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./node_modules/lodash.merge/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/lodash.merge/index.js",
          "module": "./node_modules/lodash.merge/index.js",
          "moduleName": "./node_modules/lodash.merge/index.js",
          "type": "cjs require",
          "userRequest": "module",
          "loc": "1:0-41"
        }
      ],
      "providedExports": null,
      "optimizationBailout": [],
      "depth": 3,
      "source": "module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"
    },
    {
      "id": "./src/commands/data/pinList/pinList.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/data/pinList/pinList.js",
      "name": "./src/commands/data/pinList/pinList.js",
      "index": 55,
      "index2": 54,
      "size": 2293,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
      "issuerId": "./src/index.js",
      "issuerName": "./src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony side effect evaluation",
          "userRequest": "./commands/data/pinList/pinList",
          "loc": "23:0-54"
        },
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony import specifier",
          "userRequest": "./commands/data/pinList/pinList",
          "loc": "59:19-26"
        }
      ],
      "providedExports": [
        "default"
      ],
      "optimizationBailout": [],
      "depth": 2,
      "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport queryBuilder from './queryBuilder';\n/**\n * Pin List\n * @param {string} filters\n * @returns {Promise}\n */\n\nfunction pinList(_x) {\n  return _pinList.apply(this, arguments);\n}\n\nfunction _pinList() {\n  _pinList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(filters) {\n    var baseEndpoint, endpoint, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            baseEndpoint = 'data/pinList';\n            endpoint = queryBuilder(baseEndpoint, filters);\n            _context.prev = 2;\n            _context.next = 5;\n            return this.fetch(endpoint);\n\n          case 5:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 10;\n              break;\n            }\n\n            throw new Error(\"unknown server response while attempting to retrieve user pin list: \".concat(result));\n\n          case 10:\n            _context.next = 12;\n            return result.json();\n\n          case 12:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 13:\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](2);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[2, 15]]);\n  }));\n  return _pinList.apply(this, arguments);\n}\n\nexport default pinList;"
    },
    {
      "id": "./src/commands/data/pinList/queryBuilder.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/data/pinList/queryBuilder.js",
      "name": "./src/commands/data/pinList/queryBuilder.js",
      "index": 56,
      "index2": 53,
      "size": 8598,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/data/pinList/pinList.js",
      "issuerId": "./src/commands/data/pinList/pinList.js",
      "issuerName": "./src/commands/data/pinList/pinList.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/commands/data/pinList/pinList.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/data/pinList/pinList.js",
          "name": "./src/commands/data/pinList/pinList.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./src/commands/data/pinList/pinList.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/data/pinList/pinList.js",
          "module": "./src/commands/data/pinList/pinList.js",
          "moduleName": "./src/commands/data/pinList/pinList.js",
          "type": "harmony side effect evaluation",
          "userRequest": "./queryBuilder",
          "loc": "5:0-42"
        },
        {
          "moduleId": "./src/commands/data/pinList/pinList.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/data/pinList/pinList.js",
          "module": "./src/commands/data/pinList/pinList.js",
          "moduleName": "./src/commands/data/pinList/pinList.js",
          "type": "harmony import specifier",
          "userRequest": "./queryBuilder",
          "loc": "24:23-35"
        }
      ],
      "providedExports": [
        "default"
      ],
      "optimizationBailout": [],
      "depth": 3,
      "source": "function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Validate and return data\n * @param {*} dateToValidate\n * @returns {*}\n */\nfunction validateAndReturnDate(dateToValidate) {\n  var dateParsed = new Date(Date.parse(dateToValidate));\n\n  try {\n    if (dateParsed.toISOString() === dateToValidate) return dateToValidate;\n    throw new Error('dates must be in valid ISO_8601 format');\n  } catch (e) {\n    throw new Error('dates must be in valid ISO_8601 format');\n  }\n}\n/**\n * Query Builder\n * @param {string} baseUrl\n * @param {*} filters\n * @returns {string}\n */\n\n\nexport default function queryBuilder(baseEndpoint, filters) {\n  //  preset filter values\n  var filterQuery = \"\".concat(baseEndpoint, \"?\");\n  var metadataQuery = '';\n\n  if (filters) {\n    //  now we need to construct the actual URL based on the given filters provided\n    if (filters.hashContains) {\n      if (typeof filters.hashContains !== 'string') throw new Error('hashContains value is not a string');\n      filterQuery = filterQuery + \"hashContains=\".concat(filters.hashContains, \"&\");\n    }\n\n    if (filters.pinStart) filterQuery = filterQuery + \"pinStart=\".concat(validateAndReturnDate(filters.pinStart), \"&\");\n    if (filters.pinEnd) filterQuery = filterQuery + \"pinEnd=\".concat(validateAndReturnDate(filters.pinEnd), \"&\");\n    if (filters.unpinStart) filterQuery = filterQuery + \"unpinStart=\".concat(validateAndReturnDate(filters.unpinStart), \"&\");\n    if (filters.unpinEnd) filterQuery = filterQuery + \"unpinEnd=\".concat(validateAndReturnDate(filters.unpinEnd), \"&\");\n\n    if (filters.pinSizeMin) {\n      if (isNaN(filters.pinSizeMin) || filters.pinSizeMin < 0) throw new Error('Please make sure the pinSizeMin is a valid positive integer');\n      filterQuery = filterQuery + \"pinSizeMin=\".concat(filters.pinSizeMin, \"&\");\n    }\n\n    if (filters.pinSizeMax) {\n      if (isNaN(filters.pinSizeMax) || filters.pinSizeMax < 0) throw new Error('Please make sure the pinSizeMax is a valid positive integer');\n      filterQuery = filterQuery + \"pinSizeMax=\".concat(filters.pinSizeMax, \"&\");\n    }\n\n    if (filters.status) {\n      if (filters.status !== 'all' && filters.status !== 'pinned' && filters.status !== 'unpinned') throw new Error('status value must be either: all, pinned, or unpinned');\n      filterQuery = filterQuery + \"status=\".concat(filters.status, \"&\");\n    }\n\n    if (filters.pageLimit) {\n      if (isNaN(filters.pageLimit) || filters.pageLimit <= 0 || filters.pageLimit > 1000) throw new Error('Please make sure the pageLimit is a valid integer between 1-1000');\n      filterQuery = filterQuery + \"pageLimit=\".concat(parseInt(filters.pageLimit), \"&\"); // we want to make sure that decimals get rounded to integers\n    }\n\n    if (filters.pageOffset) {\n      if (isNaN(filters.pageOffset) || filters.pageOffset <= 0) {\n        throw new Error('Please make sure the pageOffset is a positive integer');\n      }\n\n      filterQuery = filterQuery + \"pageOffset=\".concat(parseInt(filters.pageOffset), \"&\"); // we want to make sure that decimals get rounded to integers\n    }\n\n    if (filters.metadata) {\n      if (_typeof(filters.metadata) !== 'object') throw new Error('metadata value must be an object');\n      if (filters.metadata.name) metadataQuery = \"metadata[name]=\".concat(filters.metadata.name, \"&\");\n\n      if (filters.metadata.keyvalues) {\n        metadataQuery = metadataQuery + 'metadata[keyvalues]=';\n        if (_typeof(filters.metadata.keyvalues) !== 'object') throw new Error('metadata keyvalues must be an object'); // we want to make sure we're only grabbing the values we want for the query, and nothing extra\n\n        var prunedKeyValues = {};\n        Object.entries(filters.metadata.keyvalues).forEach(function (keyValue) {\n          var key = keyValue[0];\n          var value = keyValue[1];\n          if (_typeof(value) !== 'object') throw new Error(\"keyValue: \".concat(key, \" is not an object\"));\n          if (!value || !value.value || !value.op) throw new Error(\"keyValue: \".concat(key, \" must have both value and op attributes\"));\n          if (typeof value.value !== 'string' && typeof value.value !== 'boolean' && typeof value.value !== 'number') throw new Error('Metadata keyvalue values must be strings, booleans, or numbers'); // Run checks to make sure all of the keyvalues are valid\n\n          switch (value.op) {\n            case 'gt':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            //greater than or equal\n\n            case 'gte':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // less than\n\n            case 'lt':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // less than or equal\n\n            case 'lte':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // not equal to\n\n            case 'ne':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // equal to\n\n            case 'eq':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // between\n\n            case 'between':\n              if (!value.secondValue) throw new Error(\"Because between op code was passed in, keyValue: \".concat(keyValue[0], \" must have both also include a secondValue\"));\n              if (typeof value.secondValue !== 'string' && typeof value.secondValue !== 'boolean' && typeof value.secondValue !== 'number') throw new Error('Metadata keyvalue secondValue must be a string, boolean, or number');\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op,\n                secondValue: value.secondValue\n              };\n              break;\n            // not between\n\n            case 'notBetween':\n              if (!value.secondValue) throw new Error(\"Because notBetween op code was passed in, keyValue: \".concat(keyValue[0], \" must have both also include a secondValue\"));\n              if (typeof value.secondValue !== 'string' && typeof value.secondValue !== 'boolean' && typeof value.secondValue !== 'number') throw new Error('Metadata keyvalue secondValue must be a string, boolean, or number');\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op,\n                secondValue: value.secondValue\n              };\n              break;\n            // like\n\n            case 'like':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // not like\n\n            case 'notLike':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // case insensitive like\n\n            case 'iLike':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // case insensitive not like\n\n            case 'notILike':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // regex\n\n            case 'regexp':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n            // case insensitive regex\n\n            case 'iRegexp':\n              prunedKeyValues[key] = {\n                value: value.value,\n                op: value.op\n              };\n              break;\n\n            default:\n              throw new Error(\"keyValue op: \".concat(value.op, \" is not a valid op code\"));\n          }\n        });\n        metadataQuery = metadataQuery + \"\".concat(JSON.stringify(prunedKeyValues));\n      }\n    }\n  }\n\n  return \"\".concat(filterQuery).concat(metadataQuery);\n}"
    },
    {
      "id": "./src/commands/data/testAuthentication.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/data/testAuthentication.js",
      "name": "./src/commands/data/testAuthentication.js",
      "index": 54,
      "index2": 52,
      "size": 2217,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
      "issuerId": "./src/index.js",
      "issuerName": "./src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony side effect evaluation",
          "userRequest": "./commands/data/testAuthentication",
          "loc": "22:0-68"
        },
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony import specifier",
          "userRequest": "./commands/data/testAuthentication",
          "loc": "58:30-48"
        }
      ],
      "providedExports": [
        "default"
      ],
      "optimizationBailout": [],
      "depth": 2,
      "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * Test Authentication\n * @returns {Promise}\n */\nexport default function testAuthentication() {\n  return _testAuthentication.apply(this, arguments);\n}\n\nfunction _testAuthentication() {\n  _testAuthentication = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var endpoint, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //  test authentication to make sure that the user's provided keys are legit\n            endpoint = 'data/testAuthentication';\n            _context.prev = 1;\n            _context.next = 4;\n            return this.fetch(endpoint);\n\n          case 4:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 9;\n              break;\n            }\n\n            throw new Error(\"unknown server response while authenticating: \".concat(result));\n\n          case 9:\n            return _context.abrupt(\"return\", {\n              authenticated: true\n            });\n\n          case 10:\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[1, 12]]);\n  }));\n  return _testAuthentication.apply(this, arguments);\n}"
    },
    {
      "id": "./src/commands/data/userPinnedDataTotal.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/data/userPinnedDataTotal.js",
      "name": "./src/commands/data/userPinnedDataTotal.js",
      "index": 57,
      "index2": 55,
      "size": 2213,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
      "issuerId": "./src/index.js",
      "issuerName": "./src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony side effect evaluation",
          "userRequest": "./commands/data/userPinnedDataTotal",
          "loc": "24:0-70"
        },
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony import specifier",
          "userRequest": "./commands/data/userPinnedDataTotal",
          "loc": "60:31-50"
        }
      ],
      "providedExports": [
        "default"
      ],
      "optimizationBailout": [],
      "depth": 2,
      "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * User Pinned Data Total\n * @returns {Promise}\n */\nexport default function userPinnedDataTotal() {\n  return _userPinnedDataTotal.apply(this, arguments);\n}\n\nfunction _userPinnedDataTotal() {\n  _userPinnedDataTotal = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var endpoint, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            endpoint = 'data/userPinnedDataTotal';\n            _context.prev = 1;\n            _context.next = 4;\n            return this.fetch(endpoint);\n\n          case 4:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 9;\n              break;\n            }\n\n            throw new Error(\"unknown server response while attempting to retrieve pinned data total: \".concat(result));\n\n          case 9:\n            _context.next = 11;\n            return result.json();\n\n          case 11:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 12:\n            _context.next = 18;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](1);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[1, 14]]);\n  }));\n  return _userPinnedDataTotal.apply(this, arguments);\n}"
    },
    {
      "id": "./src/commands/pinning/hashMetadata.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/hashMetadata.js",
      "name": "./src/commands/pinning/hashMetadata.js",
      "index": 46,
      "index2": 44,
      "size": 3135,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
      "issuerId": "./src/index.js",
      "issuerName": "./src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony side effect evaluation",
          "userRequest": "./commands/pinning/hashMetadata",
          "loc": "15:0-59"
        },
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony import specifier",
          "userRequest": "./commands/pinning/hashMetadata",
          "loc": "51:24-36"
        }
      ],
      "providedExports": [
        "default"
      ],
      "optimizationBailout": [],
      "depth": 2,
      "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport isIPFS from 'is-ipfs';\n/**\n * Hash Meta Data\n * @param {*} ipfsPinHash\n * @param {*} metadata\n * @returns {Promise<unknown>}\n */\n\nexport default function hashMetadata(_x, _x2) {\n  return _hashMetadata.apply(this, arguments);\n}\n\nfunction _hashMetadata() {\n  _hashMetadata = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(ipfsPinHash, metadata) {\n    var endpoint, body, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (ipfsPinHash) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error('ipfsPinHash value is required for changing the pin policy of a pin');\n\n          case 2:\n            if (isIPFS.cid(ipfsPinHash)) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error('ipfsPinHash value is an invalid IPFS CID');\n\n          case 4:\n            if (metadata) {\n              _context.next = 6;\n              break;\n            }\n\n            throw new Error('no metadata object provided');\n\n          case 6:\n            this.validateMetadata(metadata);\n            endpoint = 'pinning/hashMetadata';\n            body = {\n              ipfsPinHash: ipfsPinHash\n            };\n            if (metadata.name) body.name = metadata.name;\n            if (metadata.keyvalues) body.keyvalues = metadata.keyvalues;\n            _context.prev = 11;\n            _context.next = 14;\n            return this.put(endpoint, body);\n\n          case 14:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 19;\n              break;\n            }\n\n            throw new Error(\"unknown server response while changing metadata for hash: \".concat(result));\n\n          case 19:\n            _context.next = 21;\n            return result.json();\n\n          case 21:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 22:\n            _context.next = 28;\n            break;\n\n          case 24:\n            _context.prev = 24;\n            _context.t0 = _context[\"catch\"](11);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 28:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[11, 24]]);\n  }));\n  return _hashMetadata.apply(this, arguments);\n}"
    },
    {
      "id": "./src/commands/pinning/hashPinPolicy.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/hashPinPolicy.js",
      "name": "./src/commands/pinning/hashPinPolicy.js",
      "index": 47,
      "index2": 45,
      "size": 3033,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
      "issuerId": "./src/index.js",
      "issuerName": "./src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony side effect evaluation",
          "userRequest": "./commands/pinning/hashPinPolicy",
          "loc": "16:0-61"
        },
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony import specifier",
          "userRequest": "./commands/pinning/hashPinPolicy",
          "loc": "52:25-38"
        }
      ],
      "providedExports": [
        "default"
      ],
      "optimizationBailout": [],
      "depth": 2,
      "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport isIPFS from 'is-ipfs';\n/**\n * Hash Pin Policy\n * @param {*} ipfsPinHash\n * @param {*} newPinPolicy\n * @returns {Promise}\n */\n\nexport default function hashPinPolicy(_x, _x2) {\n  return _hashPinPolicy.apply(this, arguments);\n}\n\nfunction _hashPinPolicy() {\n  _hashPinPolicy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(ipfsPinHash, newPinPolicy) {\n    var endpoint, body, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            this.validatePinPolicyStructure(newPinPolicy);\n\n            if (ipfsPinHash) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error('ipfsPinHash value is required for changing the pin policy of a pin');\n\n          case 3:\n            if (isIPFS.cid(ipfsPinHash)) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error('ipfsPinHash value is an invalid IPFS CID');\n\n          case 5:\n            if (newPinPolicy) {\n              _context.next = 7;\n              break;\n            }\n\n            throw new Error('newPinPolicy is required for changing the pin policy of a pin');\n\n          case 7:\n            endpoint = 'pinning/hashPinPolicy';\n            body = {\n              ipfsPinHash: ipfsPinHash,\n              newPinPolicy: newPinPolicy\n            };\n            _context.prev = 9;\n            _context.next = 12;\n            return this.put(endpoint, body);\n\n          case 12:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 15;\n              break;\n            }\n\n            throw new Error(\"unknown server response while changing pin policy for hash: \".concat(result));\n\n          case 15:\n            _context.next = 17;\n            return result.json();\n\n          case 17:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](9);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[9, 20]]);\n  }));\n  return _hashPinPolicy.apply(this, arguments);\n}"
    },
    {
      "id": "./src/commands/pinning/pinByHash.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinByHash.js",
      "name": "./src/commands/pinning/pinByHash.js",
      "index": 45,
      "index2": 43,
      "size": 2989,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
      "issuerId": "./src/index.js",
      "issuerName": "./src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony side effect evaluation",
          "userRequest": "./commands/pinning/pinByHash",
          "loc": "14:0-53"
        },
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony import specifier",
          "userRequest": "./commands/pinning/pinByHash",
          "loc": "50:21-30"
        }
      ],
      "providedExports": [
        "default"
      ],
      "optimizationBailout": [],
      "depth": 2,
      "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport isIPFS from 'is-ipfs';\n/**\n * Pin By Hash\n * @param {*} hashToPin\n * @param {*} options\n * @returns {Promise<unknown>}\n */\n\nexport default function pinByHash(_x, _x2) {\n  return _pinByHash.apply(this, arguments);\n}\n\nfunction _pinByHash() {\n  _pinByHash = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(hashToPin, options) {\n    var endpoint, body, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (hashToPin) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error('hashToPin value is required for pinning by hash');\n\n          case 2:\n            if (isIPFS.cid(hashToPin)) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error('hashToPin value is an invalid IPFS CID');\n\n          case 4:\n            endpoint = 'pinning/pinByHash';\n            body = {\n              hashToPin: hashToPin,\n              pinataOptions: {}\n            };\n\n            if (options) {\n              if (options.pinataOptions) body.pinataOptions = options.pinataOptions;\n\n              if (options.pinataMetadata) {\n                this.validateMetadata(options.pinataMetadata);\n                body.pinataMetadata = options.pinataMetadata;\n              }\n            }\n\n            _context.prev = 7;\n            _context.next = 10;\n            return this.post(endpoint, body);\n\n          case 10:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 13;\n              break;\n            }\n\n            throw new Error(\"unknown server response while adding to pin queue: \".concat(result));\n\n          case 13:\n            _context.next = 15;\n            return result.json();\n\n          case 15:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](7);\n            formattedError = handleError(_context.t0);\n            throw formattedError;\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[7, 18]]);\n  }));\n  return _pinByHash.apply(this, arguments);\n}"
    },
    {
      "id": "./src/commands/pinning/pinFileToIPFS.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinFileToIPFS.js",
      "name": "./src/commands/pinning/pinFileToIPFS.js",
      "index": 48,
      "index2": 46,
      "size": 2702,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
      "issuerId": "./src/index.js",
      "issuerName": "./src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony side effect evaluation",
          "userRequest": "./commands/pinning/pinFileToIPFS",
          "loc": "17:0-61"
        },
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony import specifier",
          "userRequest": "./commands/pinning/pinFileToIPFS",
          "loc": "53:25-38"
        }
      ],
      "providedExports": [
        "default"
      ],
      "optimizationBailout": [],
      "depth": 2,
      "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * Pin File to IPFS\n * @param {*} readStream\n * @param {*} options\n * @returns {Promise}\n */\nexport default function pinFileToIPFS(_x, _x2) {\n  return _pinFileToIPFS.apply(this, arguments);\n}\n\nfunction _pinFileToIPFS() {\n  _pinFileToIPFS = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(file, options) {\n    var data, endpoint, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            data = new FormData();\n            endpoint = 'pinning/pinFileToIPFS';\n            data.append('file', file);\n\n            if (options) {\n              if (options.pinataMetadata) {\n                this.validateMetadata(options.pinataMetadata);\n                data.append('pinataMetadata', JSON.stringify(options.pinataMetadata));\n              }\n\n              if (options.pinataOptions) {\n                this.validatePinataOptions(options.pinataOptions);\n                data.append('pinataOptions', JSON.stringify(options.pinataOptions));\n              }\n            }\n\n            _context.prev = 4;\n            _context.next = 7;\n            return this.post(endpoint, data);\n\n          case 7:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 10;\n              break;\n            }\n\n            throw new Error(\"unknown server response while pinning File to IPFS: \".concat(result));\n\n          case 10:\n            _context.next = 12;\n            return result.json();\n\n          case 12:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](4);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[4, 15]]);\n  }));\n  return _pinFileToIPFS.apply(this, arguments);\n}"
    },
    {
      "id": "./src/commands/pinning/pinJSONToIPFS.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinJSONToIPFS.js",
      "name": "./src/commands/pinning/pinJSONToIPFS.js",
      "index": 49,
      "index2": 47,
      "size": 3298,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
      "issuerId": "./src/index.js",
      "issuerName": "./src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony side effect evaluation",
          "userRequest": "./commands/pinning/pinJSONToIPFS",
          "loc": "18:0-61"
        },
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony import specifier",
          "userRequest": "./commands/pinning/pinJSONToIPFS",
          "loc": "54:25-38"
        }
      ],
      "providedExports": [
        "default"
      ],
      "optimizationBailout": [],
      "depth": 2,
      "source": "function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * Pin JSON to IPFS\n * @param {*} body\n * @param {*} options\n * @returns {Promise}\n */\nexport default function pinJSONToIPFS(_x, _x2) {\n  return _pinJSONToIPFS.apply(this, arguments);\n}\n\nfunction _pinJSONToIPFS() {\n  _pinJSONToIPFS = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(body, options) {\n    var requestBody, endpoint, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            requestBody = body;\n\n            if (!(_typeof(body) !== 'object')) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error('body must be a valid JSON object');\n\n          case 3:\n            if (options) {\n              requestBody = {\n                pinataContent: body\n              };\n\n              if (options.pinataMetadata) {\n                this.validateMetadata(options.pinataMetadata);\n                requestBody.pinataMetadata = options.pinataMetadata;\n              }\n\n              if (options.pinataOptions) {\n                this.validatePinataOptions(options.pinataOptions);\n                requestBody.pinataOptions = options.pinataOptions;\n              }\n            }\n\n            endpoint = 'pinning/pinJSONToIPFS';\n            _context.prev = 5;\n            _context.next = 8;\n            return this.post(endpoint, requestBody);\n\n          case 8:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 11;\n              break;\n            }\n\n            throw new Error(\"unknown server response while pinning JSON to IPFS: \".concat(result));\n\n          case 11:\n            _context.next = 13;\n            return result.json();\n\n          case 13:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](5);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[5, 16]]);\n  }));\n  return _pinJSONToIPFS.apply(this, arguments);\n}"
    },
    {
      "id": "./src/commands/pinning/pinJobs/pinJobs.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinJobs/pinJobs.js",
      "name": "./src/commands/pinning/pinJobs/pinJobs.js",
      "index": 50,
      "index2": 49,
      "size": 2267,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
      "issuerId": "./src/index.js",
      "issuerName": "./src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony side effect evaluation",
          "userRequest": "./commands/pinning/pinJobs/pinJobs",
          "loc": "19:0-57"
        },
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony import specifier",
          "userRequest": "./commands/pinning/pinJobs/pinJobs",
          "loc": "55:19-26"
        }
      ],
      "providedExports": [
        "default"
      ],
      "optimizationBailout": [],
      "depth": 2,
      "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport queryBuilder from './queryBuilder';\n/**\n * Pin Jobs\n * @param {*} filters\n * @returns {Promise}\n */\n\nexport default function pinJobs(_x) {\n  return _pinJobs.apply(this, arguments);\n}\n\nfunction _pinJobs() {\n  _pinJobs = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(filters) {\n    var endpoint, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            endpoint = 'pinning/pinJobs';\n            if (filters) endpoint = queryBuilder(endpoint, filters);\n            _context.prev = 2;\n            _context.next = 5;\n            return this.fetch(endpoint);\n\n          case 5:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 10;\n              break;\n            }\n\n            throw new Error(\"unknown server response while attempting to retrieve pin jobs: \".concat(result));\n\n          case 10:\n            _context.next = 12;\n            return result.json();\n\n          case 12:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 13:\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](2);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[2, 15]]);\n  }));\n  return _pinJobs.apply(this, arguments);\n}"
    },
    {
      "id": "./src/commands/pinning/pinJobs/queryBuilder.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinJobs/queryBuilder.js",
      "name": "./src/commands/pinning/pinJobs/queryBuilder.js",
      "index": 51,
      "index2": 48,
      "size": 2184,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinJobs/pinJobs.js",
      "issuerId": "./src/commands/pinning/pinJobs/pinJobs.js",
      "issuerName": "./src/commands/pinning/pinJobs/pinJobs.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        },
        {
          "id": "./src/commands/pinning/pinJobs/pinJobs.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinJobs/pinJobs.js",
          "name": "./src/commands/pinning/pinJobs/pinJobs.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./src/commands/pinning/pinJobs/pinJobs.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinJobs/pinJobs.js",
          "module": "./src/commands/pinning/pinJobs/pinJobs.js",
          "moduleName": "./src/commands/pinning/pinJobs/pinJobs.js",
          "type": "harmony side effect evaluation",
          "userRequest": "./queryBuilder",
          "loc": "5:0-42"
        },
        {
          "moduleId": "./src/commands/pinning/pinJobs/pinJobs.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/pinJobs/pinJobs.js",
          "module": "./src/commands/pinning/pinJobs/pinJobs.js",
          "moduleName": "./src/commands/pinning/pinJobs/pinJobs.js",
          "type": "harmony import specifier",
          "userRequest": "./queryBuilder",
          "loc": "24:36-48"
        }
      ],
      "providedExports": [
        "default"
      ],
      "optimizationBailout": [],
      "depth": 3,
      "source": "import isIPFS from 'is-ipfs';\n/**\n * Query Buidler\n * @param {*} filters\n * @returns {*}\n */\n\nexport default function queryBuilder(filters) {\n  if (!filters) return this.baseUrl;\n  var newUrl = baseUrl; // we want to make sure that the \"?\" character is only applied once\n\n  var firstFilterApplied = false;\n\n  function addFilter(newFilter) {\n    if (firstFilterApplied) {\n      newUrl = \"\".concat(newUrl, \"&\").concat(newFilter);\n    } else {\n      firstFilterApplied = true;\n      newUrl = \"\".concat(newUrl, \"?\").concat(newFilter);\n    }\n  }\n\n  if (filters) {\n    //  now we need to construct the actual URL based on the given filters provided\n    if (filters.sort) {\n      if (filters.sort === 'ASC' || filters.sort === 'DESC') {\n        addFilter(\"sort=\".concat(filters.sort));\n      } else {\n        throw new Error(\"Unknown sort value: \".concat(filters.sort, \" provided\"));\n      }\n    }\n\n    if (filters.status) {\n      if (filters.status === 'searching' || filters.status === 'expired' || filters.status === 'over_free_limit' || filters.status === 'over_max_size' || filters.status === 'invalid_object' || filters.status === 'bad_host_node') {\n        addFilter(\"status=\".concat(filters.status));\n      } else {\n        throw new Error(\"Unknown status value: \".concat(filters.status, \" provided\"));\n      }\n    }\n\n    if (filters.ipfs_pin_hash) {\n      if (isIPFS.cid(filters.ipfs_pin_hash)) {\n        addFilter(\"ipfs_pin_hash=\".concat(filters.ipfs_pin_hash));\n      } else {\n        throw new Error(\"Invalid IPFS hash: \".concat(filters.ipfs_pin_hash));\n      }\n    }\n\n    if (filters.limit) {\n      if (Number.isInteger(filters.limit) && filters.limit > 0 && filters.limit < 100) {\n        addFilter(\"limit=\".concat(filters.limit));\n      } else {\n        throw new Error(\"Invalid limit: \".concat(filters.limit, \". Valid limits are 1-100\"));\n      }\n    }\n\n    if (filters.offset) {\n      if (Number.isInteger(filters.offset) && filters.offset > 0) {\n        addFilter(\"offset=\".concat(filters.offset));\n      } else {\n        throw new Error(\"Invalid offset: \".concat(filters.offset, \". Please provide a positive integer for the offset\"));\n      }\n    }\n  }\n\n  return newUrl;\n}"
    },
    {
      "id": "./src/commands/pinning/unpin.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/unpin.js",
      "name": "./src/commands/pinning/unpin.js",
      "index": 52,
      "index2": 50,
      "size": 2545,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
      "issuerId": "./src/index.js",
      "issuerName": "./src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony side effect evaluation",
          "userRequest": "./commands/pinning/unpin",
          "loc": "20:0-45"
        },
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony import specifier",
          "userRequest": "./commands/pinning/unpin",
          "loc": "56:17-22"
        }
      ],
      "providedExports": [
        "default"
      ],
      "optimizationBailout": [],
      "depth": 2,
      "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport isIPFS from 'is-ipfs';\n/**\n * Unpin\n * @param {string} hashToUnpin\n * @returns {Promise}\n */\n\nexport default function unpin(_x) {\n  return _unpin.apply(this, arguments);\n}\n\nfunction _unpin() {\n  _unpin = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(hashToUnpin) {\n    var endpoint, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (hashToUnpin) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new Error('hashToUnpin value is required for removing a pin from Pinata');\n\n          case 2:\n            if (isIPFS.cid(hashToUnpin)) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error(\"\".concat(hashToUnpin, \" is an invalid IPFS CID\"));\n\n          case 4:\n            endpoint = \"pinning/unpin/\".concat(hashToUnpin);\n            _context.prev = 5;\n            _context.next = 8;\n            return this.del(endpoint);\n\n          case 8:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 11;\n              break;\n            }\n\n            throw new Error(\"unknown server response while removing pin from IPFS: \".concat(result));\n\n          case 11:\n            _context.next = 13;\n            return result.json();\n\n          case 13:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](5);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[5, 16]]);\n  }));\n  return _unpin.apply(this, arguments);\n}"
    },
    {
      "id": "./src/commands/pinning/userPinPolicy.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/commands/pinning/userPinPolicy.js",
      "name": "./src/commands/pinning/userPinPolicy.js",
      "index": 53,
      "index2": 51,
      "size": 2494,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
      "issuerId": "./src/index.js",
      "issuerName": "./src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony side effect evaluation",
          "userRequest": "./commands/pinning/userPinPolicy",
          "loc": "21:0-61"
        },
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony import specifier",
          "userRequest": "./commands/pinning/userPinPolicy",
          "loc": "57:25-38"
        }
      ],
      "providedExports": [
        "default"
      ],
      "optimizationBailout": [],
      "depth": 2,
      "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/**\n * User Pin Policy\n * @param {*} newPinPolicy\n * @returns {Promise}\n */\nexport default function userPinPolicy(_x) {\n  return _userPinPolicy.apply(this, arguments);\n}\n\nfunction _userPinPolicy() {\n  _userPinPolicy = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(newPinPolicy) {\n    var endpoint, body, result, formattedError;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            this.validatePinPolicyStructure(newPinPolicy);\n\n            if (newPinPolicy) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error('newPinPolicy is required for changing the pin policy of a pin');\n\n          case 3:\n            endpoint = 'pinning/userPinPolicy';\n            body = {\n              newPinPolicy: newPinPolicy\n            };\n            _context.prev = 5;\n            _context.next = 8;\n            return this.put(endpoint, body);\n\n          case 8:\n            result = _context.sent;\n\n            if (!(result.status !== 200)) {\n              _context.next = 11;\n              break;\n            }\n\n            throw new Error(\"unknown server response while changing pin policy for user: \".concat(result));\n\n          case 11:\n            _context.next = 13;\n            return result.json();\n\n          case 13:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 16:\n            _context.prev = 16;\n            _context.t0 = _context[\"catch\"](5);\n            formattedError = this.handleError(_context.t0);\n            throw formattedError;\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[5, 16]]);\n  }));\n  return _userPinPolicy.apply(this, arguments);\n}"
    },
    {
      "id": "./src/index.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
      "name": "./src/index.js",
      "index": 1,
      "index2": 56,
      "size": 10990,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
      "issuerId": 0,
      "issuerName": "multi ./src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": 0,
          "moduleIdentifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "multi ./src/index.js",
          "moduleName": "multi ./src/index.js",
          "type": "single entry",
          "userRequest": "/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "loc": "main[0]"
        }
      ],
      "providedExports": [
        "default"
      ],
      "optimizationBailout": [],
      "depth": 1,
      "source": "function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport merge from 'lodash.merge';\nimport { validateJWT, validateHostNodes, validateMetadata, validatePinPolicyStructure, validatePinataOptions } from './util/validators';\nimport handleError from './util/errorResponse';\nimport pinByHash from './commands/pinning/pinByHash';\nimport hashMetadata from './commands/pinning/hashMetadata';\nimport hashPinPolicy from './commands/pinning/hashPinPolicy';\nimport pinFileToIPFS from './commands/pinning/pinFileToIPFS';\nimport pinJSONToIPFS from './commands/pinning/pinJSONToIPFS';\nimport pinJobs from './commands/pinning/pinJobs/pinJobs';\nimport unpin from './commands/pinning/unpin';\nimport userPinPolicy from './commands/pinning/userPinPolicy';\nimport testAuthentication from './commands/data/testAuthentication';\nimport pinList from './commands/data/pinList/pinList';\nimport userPinnedDataTotal from './commands/data/userPinnedDataTotal';\n/**\n * Pinata Client\n *\n * @param {string} pinataJWT\n * @returns {PinataClient}\n */\n\nvar PinataSDK = /*#__PURE__*/function () {\n  function PinataSDK(pinataJWT) {\n    _classCallCheck(this, PinataSDK);\n\n    if (!pinataJWT || !pinataJWT.length) throw new Error('Invalid Pinata JWT: ' + pinataJWT);\n    this.jwt = pinataJWT;\n    this.baseURL = 'https://api.pinata.cloud';\n    this.defaultOpts = {\n      headers: {\n        Authorization: \"Bearer \".concat(this.jwt)\n      }\n    };\n    this.handleError = handleError.bind(this);\n    this.validateJWT = validateJWT.bind(this);\n    this.validateHostNodes = validateHostNodes.bind(this);\n    this.validateMetadata = validateMetadata.bind(this);\n    this.validatePinPolicyStructure = validatePinPolicyStructure.bind(this);\n    this.validatePinataOptions = validatePinataOptions.bind(this);\n    this.pinByHash = pinByHash.bind(this);\n    this.hashMetadata = hashMetadata.bind(this);\n    this.hashPinPolicy = hashPinPolicy.bind(this);\n    this.pinFileToIPFS = pinFileToIPFS.bind(this);\n    this.pinJSONToIPFS = pinJSONToIPFS.bind(this);\n    this.pinJobs = pinJobs.bind(this);\n    this.unpin = unpin.bind(this);\n    this.userPinPolicy = userPinPolicy.bind(this);\n    this.testAuthentication = testAuthentication.bind(this);\n    this.pinList = pinList.bind(this);\n    this.userPinnedDataTotal = userPinnedDataTotal.bind(this);\n  }\n\n  _createClass(PinataSDK, [{\n    key: \"makeUrl\",\n    value: function makeUrl(endpoint) {\n      return \"\".concat(this.baseURL, \"/\").concat(endpoint);\n    }\n  }, {\n    key: \"makeOpts\",\n    value: function makeOpts() {\n      for (var _len = arguments.length, opts = new Array(_len), _key = 0; _key < _len; _key++) {\n        opts[_key] = arguments[_key];\n      }\n\n      var newOpts = merge.apply(void 0, [this.defaultOpts].concat(opts)); // Make sure nobody nukes the auth header on accident\n\n      newOpts.headers.Authorization = this.defaultOpts.headers.Authorization;\n      return newOpts;\n    }\n  }, {\n    key: \"defaultInterceptor\",\n    value: function defaultInterceptor(url, opts) {\n      return {\n        url: url,\n        options: opts\n      };\n    }\n  }, {\n    key: \"fetch\",\n    value: function (_fetch) {\n      function fetch(_x) {\n        return _fetch.apply(this, arguments);\n      }\n\n      fetch.toString = function () {\n        return _fetch.toString();\n      };\n\n      return fetch;\n    }( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(endpoint) {\n        var opts,\n            intercept,\n            _intercept,\n            url,\n            options,\n            response,\n            _args = arguments;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                opts = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                intercept = _args.length > 2 && _args[2] !== undefined ? _args[2] : this.defaultInterceptor;\n                _intercept = intercept(this.makeUrl(endpoint), this.makeOpts(opts)), url = _intercept.url, options = _intercept.options;\n                _context.next = 5;\n                return fetch(url, options);\n\n              case 5:\n                response = _context.sent;\n                return _context.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x2) {\n        return _ref.apply(this, arguments);\n      };\n    }())\n  }, {\n    key: \"post\",\n    value: function () {\n      var _post = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(endpoint, data) {\n        var opts,\n            intercept,\n            _intercept2,\n            url,\n            options,\n            response,\n            _args2 = arguments;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                opts = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};\n                intercept = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : this.defaultInterceptor;\n                _intercept2 = intercept(this.makeUrl(endpoint), this.makeOpts(opts, {\n                  method: 'POST',\n                  body: data\n                })), url = _intercept2.url, options = _intercept2.options;\n                console.log('@@post with opts', url, options);\n                _context2.next = 6;\n                return fetch(url, options);\n\n              case 6:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", response);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function post(_x3, _x4) {\n        return _post.apply(this, arguments);\n      }\n\n      return post;\n    }()\n  }, {\n    key: \"postJSON\",\n    value: function () {\n      var _postJSON = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(endpoint, data) {\n        var opts,\n            _args3 = arguments;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                opts = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : {};\n                _context3.next = 3;\n                return this.post(endpoint, typeof data === 'string' ? data : JSON.stringify(data), opts);\n\n              case 3:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function postJSON(_x5, _x6) {\n        return _postJSON.apply(this, arguments);\n      }\n\n      return postJSON;\n    }()\n  }, {\n    key: \"put\",\n    value: function () {\n      var _put = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(endpoint, data) {\n        var opts,\n            intercept,\n            _intercept3,\n            url,\n            options,\n            response,\n            _args4 = arguments;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                opts = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};\n                intercept = _args4.length > 3 && _args4[3] !== undefined ? _args4[3] : this.defaultInterceptor;\n                _intercept3 = intercept(this.makeUrl(endpoint), this.makeOpts(opts, {\n                  method: 'PUT',\n                  body: typeof data === 'string' ? data : JSON.stringify(data)\n                })), url = _intercept3.url, options = _intercept3.options;\n                _context4.next = 5;\n                return fetch(url, options);\n\n              case 5:\n                response = _context4.sent;\n                return _context4.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function put(_x7, _x8) {\n        return _put.apply(this, arguments);\n      }\n\n      return put;\n    }()\n  }, {\n    key: \"del\",\n    value: function () {\n      var _del = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(endpoint) {\n        var intercept,\n            _intercept4,\n            url,\n            options,\n            response,\n            _args5 = arguments;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                intercept = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : this.defaultInterceptor;\n                _intercept4 = intercept(this.makeUrl(endpoint), this.makeOpts(opts, {\n                  method: 'DELETE'\n                })), url = _intercept4.url, options = _intercept4.options;\n                _context5.next = 4;\n                return fetch(url, options);\n\n              case 4:\n                response = _context5.sent;\n                return _context5.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function del(_x9) {\n        return _del.apply(this, arguments);\n      }\n\n      return del;\n    }()\n  }]);\n\n  return PinataSDK;\n}();\n\nexport default PinataSDK;"
    },
    {
      "id": "./src/util/errorResponse.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/errorResponse.js",
      "name": "./src/util/errorResponse.js",
      "index": 44,
      "index2": 42,
      "size": 339,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
      "issuerId": "./src/index.js",
      "issuerName": "./src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony side effect evaluation",
          "userRequest": "./util/errorResponse",
          "loc": "13:0-47"
        },
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony import specifier",
          "userRequest": "./util/errorResponse",
          "loc": "44:23-34"
        }
      ],
      "providedExports": [
        "default"
      ],
      "optimizationBailout": [],
      "depth": 2,
      "source": "export default function handleError(error) {\n  if (error && error.response && error.response && error.response.data && error.response.data.error) return error.response.data.error;else if (error.data && error.data.error) return error.data.error;else if (error.response && error.response.error) return error.response.error;\n  return error;\n}"
    },
    {
      "id": "./src/util/validators.js",
      "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/util/validators.js",
      "name": "./src/util/validators.js",
      "index": 5,
      "index2": 41,
      "size": 3495,
      "cacheable": true,
      "built": true,
      "optional": false,
      "prefetched": false,
      "chunks": [
        "main"
      ],
      "issuer": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
      "issuerId": "./src/index.js",
      "issuerName": "./src/index.js",
      "issuerPath": [
        {
          "id": 0,
          "identifier": "multi /home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "multi ./src/index.js"
        },
        {
          "id": "./src/index.js",
          "identifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "name": "./src/index.js"
        }
      ],
      "failed": false,
      "errors": 0,
      "warnings": 0,
      "assets": [],
      "reasons": [
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony side effect evaluation",
          "userRequest": "./util/validators",
          "loc": "12:0-136"
        },
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony import specifier",
          "userRequest": "./util/validators",
          "loc": "45:23-34"
        },
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony import specifier",
          "userRequest": "./util/validators",
          "loc": "46:29-46"
        },
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony import specifier",
          "userRequest": "./util/validators",
          "loc": "47:28-44"
        },
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony import specifier",
          "userRequest": "./util/validators",
          "loc": "48:38-64"
        },
        {
          "moduleId": "./src/index.js",
          "moduleIdentifier": "/home/wes/localhost/dolce/pinata-web-sdk/node_modules/babel-loader/lib/index.js!/home/wes/localhost/dolce/pinata-web-sdk/src/index.js",
          "module": "./src/index.js",
          "moduleName": "./src/index.js",
          "type": "harmony import specifier",
          "userRequest": "./util/validators",
          "loc": "49:33-54"
        }
      ],
      "providedExports": [
        "validateJWT",
        "validateHostNodes",
        "validateMetadata",
        "validatePinPolicyStructure",
        "validatePinataOptions"
      ],
      "optimizationBailout": [],
      "depth": 2,
      "source": "function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport isIPFS from 'is-ipfs';\n/**\n * Validate JWT Keys\n * @param {string} pinataJWT\n */\n\nexport function validateJWT(pinataJWT) {\n  if (!pinataJWT || pinataJWT === '') throw new Error('No pinataJWT provided! Please provide your pinata api key as an argument when you start this script');\n}\n/**\n * Validate host Nodes\n * @param {*} hostNodes\n */\n\nexport function validateHostNodes(hostNodes) {\n  if (!Array.isArray(hostNodes)) throw new Error('host_nodes value must be an array');\n  hostNodes.forEach(function (node) {\n    if (!isIPFS.peerMultiaddr(node)) throw new Error(\"host_node array entry: \".concat(node, \" is not a valid peer multiaddr\"));\n  });\n}\n/**\n * Validate MetaData\n * @param {*} metadata\n */\n\nexport function validateMetadata(metadata) {\n  if (metadata.name) if (!(typeof metadata.name === 'string' || metadata.name instanceof String)) throw new Error('metadata name must be of type string');\n\n  if (metadata.keyvalues) {\n    if (!(_typeof(metadata.keyvalues) === 'object')) throw new Error('metatadata keyvalues must be an object'); // @todo wtf is this\n\n    var i = 0;\n    Object.entries(metadata.keyvalues).forEach(function (keyValue) {\n      if (i > 9) throw new Error('No more than 10 keyvalues can be provided for metadata entries'); //  we want to make sure that the input is a string, a boolean, or a number, so we don't get an object passed in by accident\n\n      if (!(typeof keyValue[1] === 'string' || typeof keyValue[1] === 'boolean' || !isNaN(keyValue[1]))) throw new Error('Metadata keyvalue values must be strings, booleans, or numbers');\n      i++;\n    });\n  }\n}\n/**\n * Validate Pin Policy Structure\n * @param {*} pinPolicy\n */\n\nexport function validatePinPolicyStructure(pinPolicy) {\n  //this function takes in a pin policy and checks the JSON structure to make sure it's valid\n  if (!pinPolicy) throw new Error('No pin policy provided');\n  if (!pinPolicy.regions) throw new Error('No regions provided in pin policy');\n  if (pinPolicy.regions.length) pinPolicy.regions.forEach(function (region) {\n    if (!region.id || !(Object.prototype.toString.call(region.id) === '[object String]')) throw new Error('region id must be a string');\n    if (!(region.desiredReplicationCount || region.desiredReplicationCount === 0) || !Number.isInteger(region.desiredReplicationCount)) throw new Error('desiredReplicationCount must be an integer');\n  });\n}\n/**\n * Validate Pinata Options\n * @param {*} options\n */\n\nexport function validatePinataOptions(options) {\n  if (_typeof(options) !== 'object') throw new Error('options must be an object');\n  if (options.cidVersion) // eslint-disable-next-line eqeqeq\n    if (options.cidVersion != 0 && options.cidVersion != 1) throw new Error('unsupported or invalid cidVersion');\n  if (options.wrapWithDirectory) // eslint-disable-next-line eqeqeq\n    if (options.wrapWithDirectory !== true && options.wrapWithDirectory !== false) throw new Error('wrapWithDirectory must be a boolean value of true or false');\n  if (options.hostNodes) validateHostNodes(options.hostNodes);\n  if (options.customPinPolicy) validatePinPolicyStructure(options.customPinPolicy);\n}"
    }
  ],
  "filteredModules": 0,
  "logging": {
    "webpack.buildChunkGraph.visitModules": {
      "entries": [],
      "filteredEntries": 2,
      "debug": false
    }
  },
  "children": []
}
